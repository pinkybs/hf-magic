<asdoc>

<classRec name='IsoPhysicsControl' fullname='happyfish.scene.world.control:IsoPhysicsControl' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\world\control\IsoPhysicsControl.as' namespace='happyfish.scene.world.control' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='IsoPhysicsControl' fullname='happyfish.scene.world.control:IsoPhysicsControl/IsoPhysicsControl' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='checkPhysics' fullname='happyfish.scene.world.control:IsoPhysicsControl/private:checkPhysics' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='initPhysics' fullname='happyfish.scene.world.control:IsoPhysicsControl/initPhysics' isStatic='false' isFinal='false' isOverride='false'  param_names='_state;_gravity;_friction;_bounce' param_types='happyfish.scene.world:WorldState;Number;Number;Number' param_defaults='undefined;1;.9;-.7' result_type='void'>
<description><![CDATA[

		 初始化物理控制

		 ]]></description>
<param><![CDATA[_state	

		 ]]></param>
<param><![CDATA[_gravity	重力

		 ]]></param>
<param><![CDATA[_friction	摩擦力

		 ]]></param>
<param><![CDATA[_bounce		反弹

		 ]]></param>
</method>
<method name='physicsFun' fullname='happyfish.scene.world.control:IsoPhysicsControl/physicsFun' isStatic='false' isFinal='false' isOverride='false'  param_names='target' param_types='happyfish.scene.world.grid:IsoItem' param_defaults='undefined' result_type='void'>
</method>
<field name='bounce' fullname='happyfish.scene.world.control:IsoPhysicsControl/private:bounce' type='Number' isStatic='false' isConst='false' >
</field>
<field name='friction' fullname='happyfish.scene.world.control:IsoPhysicsControl/private:friction' type='Number' isStatic='false' isConst='false' >
</field>
<field name='gravity' fullname='happyfish.scene.world.control:IsoPhysicsControl/private:gravity' type='Number' isStatic='false' isConst='false' >
</field>
<field name='isoObjects' fullname='happyfish.scene.world.control:IsoPhysicsControl/private:isoObjects' type='Array' isStatic='false' isConst='false' >
</field>
<field name='state' fullname='happyfish.scene.world.control:IsoPhysicsControl/private:state' type='happyfish.scene.world:WorldState' isStatic='false' isConst='false' >
</field>
<classRec name='MouseCursorAction' fullname='happyfish.scene.world.control:MouseCursorAction' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\world\control\MouseCursorAction.as' namespace='happyfish.scene.world.control' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='MouseCursorAction' fullname='happyfish.scene.world.control:MouseCursorAction/MouseCursorAction' isStatic='false' isFinal='false' isOverride='false'  param_names='$state;$stack_flg' param_types='happyfish.scene.world:WorldState;Boolean' param_defaults='undefined;false' result_type='*'>
</method>
<method name='clearActionStack' fullname='happyfish.scene.world.control:MouseCursorAction/clearActionStack' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='gotoDefaultAction' fullname='happyfish.scene.world.control:MouseCursorAction/gotoDefaultAction' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 设置默认action

		 ]]></description>
</method>
<method name='onMouseMove' fullname='happyfish.scene.world.control:MouseCursorAction/onMouseMove' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 鼠标移动,待重载

		 ]]></description>
<param><![CDATA[event

		 ]]></param>
</method>
<method name='remove' fullname='happyfish.scene.world.control:MouseCursorAction/remove' isStatic='false' isFinal='false' isOverride='false'  param_names='$stack_flg' param_types='Boolean' param_defaults='true' result_type='void'>
</method>
<method name='worldPosition' fullname='happyfish.scene.world.control:MouseCursorAction/worldPosition' isStatic='false' isFinal='false' isOverride='false'  result_type='com.friendsofed.isometric:Point3D'>
<description><![CDATA[

		 返回grid坐标

		 ]]></description>
<return><![CDATA[
		 ]]></return>
</method>
<field name='actionStack' fullname='happyfish.scene.world.control:MouseCursorAction/actionStack' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='defaultAction' fullname='happyfish.scene.world.control:MouseCursorAction/defaultAction' type='happyfish.scene.world.control:MouseCursorAction' isStatic='true' isConst='false' defaultValue='null' >
</field>
<field name='state' fullname='happyfish.scene.world.control:MouseCursorAction/state' type='happyfish.scene.world:WorldState' isStatic='false' isConst='false' >
</field>
<classRec name='MapDrag' fullname='happyfish.scene.world.control:MapDrag' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\world\control\MapDrag.as' namespace='happyfish.scene.world.control' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck Xu

	 ]]></author>
</classRec>
<method name='MapDrag' fullname='happyfish.scene.world.control:MapDrag/MapDrag' isStatic='false' isFinal='false' isOverride='false'  param_names='$drag_area' param_types='flash.display:Sprite' param_defaults='undefined' result_type='*'>
</method>
<method name='beginDrag' fullname='happyfish.scene.world.control:MapDrag/beginDrag' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 主地图背景拖动开始

		 ]]></description>
</method>
<method name='getInstance' fullname='happyfish.scene.world.control:MapDrag/getInstance' isStatic='true' isFinal='false' isOverride='false'  param_names='$drag_area' param_types='flash.display:Sprite' param_defaults='undefined' result_type='happyfish.scene.world.control:MapDrag'>
</method>
<method name='init' fullname='happyfish.scene.world.control:MapDrag/init' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='moveDrag' fullname='happyfish.scene.world.control:MapDrag/moveDrag' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 主地图背景拖动中

		 ]]></description>
</method>
<method name='overDrag' fullname='happyfish.scene.world.control:MapDrag/overDrag' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 主地图背景拖动结束

		 ]]></description>
</method>
<method name='upDrag' fullname='happyfish.scene.world.control:MapDrag/private:upDrag' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<field name='drag_area' fullname='happyfish.scene.world.control:MapDrag/private:drag_area' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='mouseDown' fullname='happyfish.scene.world.control:MapDrag/private:mouseDown' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='single' fullname='happyfish.scene.world.control:MapDrag/private:single' type='happyfish.scene.world.control:MapDrag' isStatic='true' isConst='false' >
</field>
<classRec name='DataManager' fullname='happymagic.manager:DataManager' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\manager\DataManager.as' namespace='happymagic.manager' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='DataManager' fullname='happymagic.manager:DataManager/DataManager' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='DataManager.as$30:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='addDecorBag' fullname='happymagic.manager:DataManager/addDecorBag' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='addDecor' fullname='happymagic.manager:DataManager/addDecor' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='addItems' fullname='happymagic.manager:DataManager/addItems' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='changeItemNumById' fullname='happymagic.manager:DataManager/private:changeItemNumById' isStatic='false' isFinal='false' isOverride='false'  param_names='itemvo;isDel' param_types='happymagic.model.vo:ItemVo;Boolean' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='filterAvatarsStudent' fullname='happymagic.manager:DataManager/private:filterAvatarsStudent' isStatic='false' isFinal='false' isOverride='false'  param_names='element;index;arr' param_types='*;int;Array' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
</method>
<method name='getAvatarVo' fullname='happymagic.manager:DataManager/getAvatarVo' isStatic='false' isFinal='false' isOverride='false'  param_names='avatarId' param_types='uint' param_defaults='undefined' result_type='happymagic.model.vo:AvatarVo'>
</method>
<method name='getCanBuyItemClass' fullname='happymagic.manager:DataManager/getCanBuyItemClass' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='getCrystalType' fullname='happymagic.manager:DataManager/getCrystalType' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='uint' param_defaults='undefined' result_type='uint'>
<description><![CDATA[

		 按type返回自己的相应水晶数量

		 ]]></description>
<param><![CDATA[type

		 ]]></param>
<return><![CDATA[
		 ]]></return>
</method>
<method name='getCurGuides' fullname='happymagic.manager:DataManager/getCurGuides' isStatic='false' isFinal='false' isOverride='false'  result_type='happyfish.model.vo:GuidesVo'>
</method>
<method name='getCustomSceneDoor' fullname='happymagic.manager:DataManager/getCustomSceneDoor' isStatic='false' isFinal='false' isOverride='false'  param_names='except' param_types='happyfish.scene.astar:Node' param_defaults='null' result_type='happyfish.scene.astar:Node'>
</method>
<method name='getCustomStudentAvatarVo' fullname='happymagic.manager:DataManager/getCustomStudentAvatarVo' isStatic='false' isFinal='false' isOverride='false'  result_type='happymagic.model.vo:AvatarVo'>
</method>
<method name='getDecorByDid' fullname='happymagic.manager:DataManager/getDecorByDid' isStatic='false' isFinal='false' isOverride='false'  param_names='d_id' param_types='uint' param_defaults='undefined' result_type='happymagic.model.vo:DecorVo'>
</method>
<method name='getDecorClassByDid' fullname='happymagic.manager:DataManager/getDecorClassByDid' isStatic='false' isFinal='false' isOverride='false'  param_names='did' param_types='uint' param_defaults='undefined' result_type='happymagic.model.vo:DecorClassVo'>
</method>
<method name='getDecorNum' fullname='happymagic.manager:DataManager/getDecorNum' isStatic='false' isFinal='false' isOverride='false'  param_names='d_id' param_types='uint' param_defaults='undefined' result_type='int'>
</method>
<method name='getDeskInRoom' fullname='happymagic.manager:DataManager/getDeskInRoom' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='getEnemyClass' fullname='happymagic.manager:DataManager/getEnemyClass' isStatic='false' isFinal='false' isOverride='false'  param_names='enemyCid' param_types='uint' param_defaults='undefined' result_type='happymagic.model.vo:EnemyClassVo'>
</method>
<method name='getEnoughCrystal' fullname='happymagic.manager:DataManager/getEnoughCrystal' isStatic='false' isFinal='false' isOverride='false'  param_names='red;blue;green;gem' param_types='uint;uint;uint;uint' param_defaults='0;0;0;0' result_type='Boolean'>
</method>
<method name='getEnoughDecors' fullname='happymagic.manager:DataManager/getEnoughDecors' isStatic='false' isFinal='false' isOverride='false'  param_names='decorArr' param_types='Array' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[... args	[i_id,num],[11,2]

		 ]]></param>
<return><![CDATA[
		 ]]></return>
</method>
<method name='getEnoughItems' fullname='happymagic.manager:DataManager/getEnoughItems' isStatic='false' isFinal='false' isOverride='false'  param_names='itemArr' param_types='Array' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[... args	[i_id,num],[11,2]

		 ]]></param>
<return><![CDATA[
		 ]]></return>
</method>
<method name='getEnoughMix' fullname='happymagic.manager:DataManager/getEnoughMix' isStatic='false' isFinal='false' isOverride='false'  param_names='mixMagic' param_types='happymagic.model.vo:MixMagicVo' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='getEnoughMp' fullname='happymagic.manager:DataManager/getEnoughMp' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='getEnoughUserData' fullname='happymagic.manager:DataManager/getEnoughUserData' isStatic='false' isFinal='false' isOverride='false'  param_names='type;num' param_types='String;uint' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='getEnouthCrystalType' fullname='happymagic.manager:DataManager/getEnouthCrystalType' isStatic='false' isFinal='false' isOverride='false'  param_names='type;num' param_types='uint;uint' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='getFeedVo' fullname='happymagic.manager:DataManager/getFeedVo' isStatic='false' isFinal='false' isOverride='false'  param_names='id' param_types='uint' param_defaults='undefined' result_type='happymagic.model.vo:FeedVo'>
</method>
<method name='getGuidesClass' fullname='happymagic.manager:DataManager/getGuidesClass' isStatic='false' isFinal='false' isOverride='false'  param_names='gid' param_types='uint' param_defaults='undefined' result_type='happyfish.model.vo:GuidesClassVo'>
</method>
<method name='getInstance' fullname='happymagic.manager:DataManager/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happymagic.manager:DataManager'>
</method>
<method name='getItemById' fullname='happymagic.manager:DataManager/getItemById' isStatic='false' isFinal='false' isOverride='false'  param_names='id' param_types='uint' param_defaults='undefined' result_type='happymagic.model.vo:ItemVo'>
</method>
<method name='getItemByIid' fullname='happymagic.manager:DataManager/getItemByIid' isStatic='false' isFinal='false' isOverride='false'  param_names='i_id' param_types='uint' param_defaults='undefined' result_type='happymagic.model.vo:ItemVo'>
</method>
<method name='getItemClassByIid' fullname='happymagic.manager:DataManager/getItemClassByIid' isStatic='false' isFinal='false' isOverride='false'  param_names='i_id' param_types='uint' param_defaults='undefined' result_type='happymagic.model.vo:ItemClassVo'>
</method>
<method name='getItemNum' fullname='happymagic.manager:DataManager/getItemNum' isStatic='false' isFinal='false' isOverride='false'  param_names='i_id' param_types='uint' param_defaults='undefined' result_type='int'>
</method>
<method name='getLevelInfo' fullname='happymagic.manager:DataManager/getLevelInfo' isStatic='false' isFinal='false' isOverride='false'  param_names='level' param_types='uint' param_defaults='undefined' result_type='happymagic.model.vo:LevelInfoVo'>
</method>
<method name='getMagicClass' fullname='happymagic.manager:DataManager/getMagicClass' isStatic='false' isFinal='false' isOverride='false'  param_names='magic_id' param_types='uint' param_defaults='undefined' result_type='happymagic.model.vo:MagicClassVo'>
</method>
<method name='getMixMagicByMid' fullname='happymagic.manager:DataManager/getMixMagicByMid' isStatic='false' isFinal='false' isOverride='false'  param_names='mid' param_types='uint' param_defaults='undefined' result_type='happymagic.model.vo:MixMagicVo'>
</method>
<method name='getNextRoomSizeVo' fullname='happymagic.manager:DataManager/getNextRoomSizeVo' isStatic='false' isFinal='false' isOverride='false'  param_names='size' param_types='uint' param_defaults='undefined' result_type='happymagic.model.vo:RoomSizeVo'>
</method>
<method name='getNpcsBySceneId' fullname='happymagic.manager:DataManager/getNpcsBySceneId' isStatic='false' isFinal='false' isOverride='false'  param_names='sceneId' param_types='uint' param_defaults='undefined' result_type='Array'>
</method>
<method name='getRoomSizeVoBySize' fullname='happymagic.manager:DataManager/getRoomSizeVoBySize' isStatic='false' isFinal='false' isOverride='false'  param_names='sizeX' param_types='uint' param_defaults='undefined' result_type='happymagic.model.vo:RoomSizeVo'>
</method>
<method name='getSceneClassById' fullname='happymagic.manager:DataManager/getSceneClassById' isStatic='false' isFinal='false' isOverride='false'  param_names='id' param_types='uint' param_defaults='undefined' result_type='happymagic.model.vo:SceneClassVo'>
</method>
<method name='getSceneVoByClass' fullname='happymagic.manager:DataManager/getSceneVoByClass' isStatic='false' isFinal='false' isOverride='false'  param_names='id;state' param_types='uint;uint' param_defaults='undefined;undefined' result_type='happymagic.model.vo:SceneVo'>
</method>
<method name='getStudentVoById' fullname='happymagic.manager:DataManager/getStudentVoById' isStatic='false' isFinal='false' isOverride='false'  param_names='$decor_id' param_types='int' param_defaults='undefined' result_type='happymagic.model.vo:StudentVo'>
<description><![CDATA[

		 获得student_vo

		 ]]></description>
<param><![CDATA[svo

		 ]]></param>
</method>
<method name='getStudentsCountInRoom' fullname='happymagic.manager:DataManager/getStudentsCountInRoom' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='getStudentsInRoom' fullname='happymagic.manager:DataManager/getStudentsInRoom' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='getTaskClass' fullname='happymagic.manager:DataManager/getTaskClass' isStatic='false' isFinal='false' isOverride='false'  param_names='t_id' param_types='uint' param_defaults='undefined' result_type='happymagic.model.vo:TaskClassVo'>
</method>
<method name='getTasksByNpcId' fullname='happymagic.manager:DataManager/getTasksByNpcId' isStatic='false' isFinal='false' isOverride='false'  param_names='npcId' param_types='uint' param_defaults='undefined' result_type='Array'>
</method>
<method name='getTasksBySceneId' fullname='happymagic.manager:DataManager/getTasksBySceneId' isStatic='false' isFinal='false' isOverride='false'  param_names='sceneId' param_types='uint' param_defaults='undefined' result_type='Array'>
</method>
<method name='getTransMagicClassByTid' fullname='happymagic.manager:DataManager/getTransMagicClassByTid' isStatic='false' isFinal='false' isOverride='false'  param_names='tid' param_types='uint' param_defaults='undefined' result_type='happymagic.model.vo:TransMagicVo'>
</method>
<method name='getTransMagicNeedCrystal' fullname='happymagic.manager:DataManager/getTransMagicNeedCrystal' isStatic='false' isFinal='false' isOverride='false'  param_names='transVo' param_types='happymagic.model.vo:TransMagicVo' param_defaults='undefined' result_type='uint'>
</method>
<method name='getUnlockMagicClass' fullname='happymagic.manager:DataManager/getUnlockMagicClass' isStatic='false' isFinal='false' isOverride='false'  param_names='level' param_types='uint' param_defaults='undefined' result_type='Array'>
</method>
<method name='getUnlockMixMagic' fullname='happymagic.manager:DataManager/getUnlockMixMagic' isStatic='false' isFinal='false' isOverride='false'  param_names='level' param_types='uint' param_defaults='undefined' result_type='Array'>
<description><![CDATA[

		 得到可以指定等级解锁的合成术

		 ]]></description>
<param><![CDATA[level

		 ]]></param>
<return><![CDATA[
		 ]]></return>
</method>
<method name='getUnlockTrans' fullname='happymagic.manager:DataManager/getUnlockTrans' isStatic='false' isFinal='false' isOverride='false'  param_names='level' param_types='uint' param_defaults='undefined' result_type='Array'>
<description><![CDATA[

		 得到可以指定等级解锁的变化术

		 ]]></description>
<param><![CDATA[level

		 ]]></param>
<return><![CDATA[
		 ]]></return>
</method>
<method name='getUserData' fullname='happymagic.manager:DataManager/getUserData' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='String' param_defaults='undefined' result_type='uint'>
</method>
<method name='getUserMagicList' fullname='happymagic.manager:DataManager/getUserMagicList' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='getVar' fullname='happymagic.manager:DataManager/getVar' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='*'>
</method>
<method name='hasLearnMagicClass' fullname='happymagic.manager:DataManager/hasLearnMagicClass' isStatic='false' isFinal='false' isOverride='false'  param_names='m_id' param_types='uint' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='hasLearnTrans' fullname='happymagic.manager:DataManager/hasLearnTrans' isStatic='false' isFinal='false' isOverride='false'  param_names='t_id' param_types='uint' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='removeDeskStudent' fullname='happymagic.manager:DataManager/removeDeskStudent' isStatic='false' isFinal='false' isOverride='false'  param_names='$decor_id' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='removeFiddleStudent' fullname='happymagic.manager:DataManager/removeFiddleStudent' isStatic='false' isFinal='false' isOverride='false'  param_names='student' param_types='happymagic.model.vo:StudentVo' param_defaults='undefined' result_type='void'>
</method>
<method name='removeItems' fullname='happymagic.manager:DataManager/removeItems' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='removeTask' fullname='happymagic.manager:DataManager/removeTask' isStatic='false' isFinal='false' isOverride='false'  param_names='t_id' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='setStudentVo' fullname='happymagic.manager:DataManager/setStudentVo' isStatic='false' isFinal='false' isOverride='false'  param_names='svo' param_types='happymagic.model.vo:StudentVo' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 设置student_vo

		 ]]></description>
<param><![CDATA[svo

		 ]]></param>
</method>
<method name='setTask' fullname='happymagic.manager:DataManager/setTask' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='happymagic.model.vo:TaskVo' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[data

		 ]]></param>
<return><![CDATA[返回这个任务是否新任务

		 ]]></return>
</method>
<method name='setVar' fullname='happymagic.manager:DataManager/setVar' isStatic='false' isFinal='false' isOverride='false'  param_names='name;val' param_types='String;*' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='avatars' fullname='happymagic.manager:DataManager/avatars/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='currentUser' fullname='happymagic.manager:DataManager/currentUser/get' isStatic='false' isFinal='false' isOverride='false'  result_type='happymagic.model.vo:UserVo'>
</method>
<method name='decorBagList' fullname='happymagic.manager:DataManager/decorBagList/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='isGuidesAllComplete' fullname='happymagic.manager:DataManager/isGuidesAllComplete/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 是否所有新手引导都完成(除最后一步领取最终奖励)

		 ]]></description>
</method>
<method name='isSelfScene' fullname='happymagic.manager:DataManager/isSelfScene/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='itemClass' fullname='happymagic.manager:DataManager/itemClass/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='levelInfos' fullname='happymagic.manager:DataManager/levelInfos/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='magicClass' fullname='happymagic.manager:DataManager/magicClass/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='mixMagics' fullname='happymagic.manager:DataManager/mixMagics/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='taskClass' fullname='happymagic.manager:DataManager/taskClass/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='transMagicClass' fullname='happymagic.manager:DataManager/transMagicClass/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='avatars' fullname='happymagic.manager:DataManager/avatars/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='currentUser' fullname='happymagic.manager:DataManager/currentUser/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happymagic.model.vo:UserVo' param_defaults='undefined' result_type='void'>
</method>
<method name='decorBagList' fullname='happymagic.manager:DataManager/decorBagList/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='decorClass' fullname='happymagic.manager:DataManager/decorClass/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='itemClass' fullname='happymagic.manager:DataManager/itemClass/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='levelInfos' fullname='happymagic.manager:DataManager/levelInfos/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='magicClass' fullname='happymagic.manager:DataManager/magicClass/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='mixMagics' fullname='happymagic.manager:DataManager/mixMagics/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='taskClass' fullname='happymagic.manager:DataManager/taskClass/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='transMagicClass' fullname='happymagic.manager:DataManager/transMagicClass/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<field name='_avatars' fullname='happymagic.manager:DataManager/private:_avatars' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_currentUser' fullname='happymagic.manager:DataManager/private:_currentUser' type='happymagic.model.vo:UserVo' isStatic='false' isConst='false' >
</field>
<field name='_decorBagList' fullname='happymagic.manager:DataManager/private:_decorBagList' type='Array' isStatic='false' isConst='false' >
<description><![CDATA[

		 DIY时装饰列表

		 ]]></description>
</field>
<field name='_decorClass' fullname='happymagic.manager:DataManager/private:_decorClass' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_itemClass' fullname='happymagic.manager:DataManager/private:_itemClass' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 静态基础信息

		 ]]></description>
</field>
<field name='_levelInfos' fullname='happymagic.manager:DataManager/private:_levelInfos' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_magicClass' fullname='happymagic.manager:DataManager/_magicClass' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_mixMagics' fullname='happymagic.manager:DataManager/private:_mixMagics' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_taskClass' fullname='happymagic.manager:DataManager/private:_taskClass' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_transMagicClass' fullname='happymagic.manager:DataManager/private:_transMagicClass' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='basicClass' fullname='happymagic.manager:DataManager/basicClass' type='Object' isStatic='false' isConst='false' >
</field>
<field name='curSceneSwitchVo' fullname='happymagic.manager:DataManager/curSceneSwitchVo' type='happymagic.model.vo:SwitchVo' isStatic='false' isConst='false' >
</field>
<field name='curSceneUser' fullname='happymagic.manager:DataManager/curSceneUser' type='happymagic.model.vo:UserVo' isStatic='false' isConst='false' >
</field>
<field name='customObj' fullname='happymagic.manager:DataManager/private:customObj' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='decorChangeBagList' fullname='happymagic.manager:DataManager/decorChangeBagList' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='decorChangeList' fullname='happymagic.manager:DataManager/decorChangeList' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 DIY时保存时需要提交的改变数据

		 ]]></description>
</field>
<field name='decorList' fullname='happymagic.manager:DataManager/decorList' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 场景内装饰信息

		 ]]></description>
</field>
<field name='diarys' fullname='happymagic.manager:DataManager/diarys' type='Array' isStatic='false' isConst='false' >
</field>
<field name='enemyClass' fullname='happymagic.manager:DataManager/enemyClass' type='Array' isStatic='false' isConst='false' >
</field>
<field name='enemys' fullname='happymagic.manager:DataManager/enemys' type='Array' isStatic='false' isConst='false' >
</field>
<field name='feedClass' fullname='happymagic.manager:DataManager/feedClass' type='Array' isStatic='false' isConst='false' >
</field>
<field name='fiddleStudents' fullname='happymagic.manager:DataManager/fiddleStudents' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 闲逛的学生

		 ]]></description>
</field>
<field name='floorChangeBagList' fullname='happymagic.manager:DataManager/floorChangeBagList' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='floorChangeList' fullname='happymagic.manager:DataManager/floorChangeList' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='floorList' fullname='happymagic.manager:DataManager/floorList' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='friends' fullname='happymagic.manager:DataManager/friends' type='Array' isStatic='false' isConst='false' >
</field>
<field name='guidesClass' fullname='happymagic.manager:DataManager/guidesClass' type='Array' isStatic='false' isConst='false' >
</field>
<field name='guides' fullname='happymagic.manager:DataManager/guides' type='Array' isStatic='false' isConst='false' >
</field>
<field name='instance' fullname='happymagic.manager:DataManager/private:instance' type='happymagic.manager:DataManager' isStatic='true' isConst='false' >
</field>
<field name='interruptResults' fullname='happymagic.manager:DataManager/interruptResults' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='isDiying' fullname='happymagic.manager:DataManager/isDiying' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='isDraging' fullname='happymagic.manager:DataManager/isDraging' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='items' fullname='happymagic.manager:DataManager/items' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='magicList' fullname='happymagic.manager:DataManager/magicList' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 已学会的魔法

		 ]]></description>
</field>
<field name='npcChats' fullname='happymagic.manager:DataManager/npcChats' type='Array' isStatic='false' isConst='false' >
</field>
<field name='npcClass' fullname='happymagic.manager:DataManager/npcClass' type='Array' isStatic='false' isConst='false' >
</field>
<field name='onDeskStudents' fullname='happymagic.manager:DataManager/onDeskStudents' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 桌子上的学生

		 ]]></description>
</field>
<field name='openDoorStudents' fullname='happymagic.manager:DataManager/openDoorStudents' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 点击门后出来的学生,需创建

		 ]]></description>
</field>
<field name='physicsControl' fullname='happymagic.manager:DataManager/physicsControl' type='happyfish.scene.world.control:IsoPhysicsControl' isStatic='false' isConst='false' >
</field>
<field name='pickUpResults' fullname='happymagic.manager:DataManager/pickUpResults' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='pickUpStudentResults' fullname='happymagic.manager:DataManager/pickUpStudentResults' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='roomSizeClass' fullname='happymagic.manager:DataManager/roomSizeClass' type='Array' isStatic='false' isConst='false' >
</field>
<field name='sceneClass' fullname='happymagic.manager:DataManager/sceneClass' type='Array' isStatic='false' isConst='false' >
</field>
<field name='scenes' fullname='happymagic.manager:DataManager/scenes' type='Array' isStatic='false' isConst='false' >
</field>
<field name='soundEffect' fullname='happymagic.manager:DataManager/soundEffect' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='switchLevel' fullname='happymagic.manager:DataManager/switchLevel' type='Array' isStatic='false' isConst='false' >
</field>
<field name='switchVo' fullname='happymagic.manager:DataManager/switchVo' type='happymagic.model.vo:SwitchVo' isStatic='false' isConst='false' >
</field>
<field name='tasks' fullname='happymagic.manager:DataManager/tasks' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='transMagics' fullname='happymagic.manager:DataManager/transMagics' type='Array' isStatic='false' isConst='false' >
</field>
<field name='userInfo' fullname='happymagic.manager:DataManager/userInfo' type='happymagic.model.vo:UserVo' isStatic='false' isConst='false' >
</field>
<field name='wallChangeBagList' fullname='happymagic.manager:DataManager/wallChangeBagList' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='wallChangeList' fullname='happymagic.manager:DataManager/wallChangeList' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='wallList' fullname='happymagic.manager:DataManager/wallList' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='worldState' fullname='happymagic.manager:DataManager/worldState' type='happyfish.scene.world:WorldState' isStatic='false' isConst='false' >
</field>
<classRec name='IconType' fullname='happymagic.manager:IconType' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\manager\IconType.as' namespace='happymagic.manager' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='IconType' fullname='happymagic.manager:IconType/IconType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='DEFAULT_HAND' fullname='happymagic.manager:IconType/DEFAULT_HAND' type='String' isStatic='true' isConst='true' defaultValue='defaultHand' >
</field>
<field name='DOWN_HAND' fullname='happymagic.manager:IconType/DOWN_HAND' type='String' isStatic='true' isConst='true' defaultValue='downHand' >
</field>
<field name='OVER_HAND' fullname='happymagic.manager:IconType/OVER_HAND' type='String' isStatic='true' isConst='true' defaultValue='overHand' >
</field>
<field name='PICK_HAND' fullname='happymagic.manager:IconType/PICK_HAND' type='String' isStatic='true' isConst='true' defaultValue='pickHand' >
</field>
<field name='STUDENT_HAND' fullname='happymagic.manager:IconType/STUDENT_HAND' type='String' isStatic='true' isConst='true' defaultValue='studentHand' >
</field>
<classRec name='DisplayManager' fullname='happymagic.manager:DisplayManager' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\manager\DisplayManager.as' namespace='happymagic.manager' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='DisplayManager' fullname='happymagic.manager:DisplayManager/DisplayManager' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='getCurrentMousePosition' fullname='happymagic.manager:DisplayManager/getCurrentMousePosition' isStatic='true' isFinal='false' isOverride='false'  result_type='flash.geom:Point'>
</method>
<method name='getPlayerPosition' fullname='happymagic.manager:DisplayManager/getPlayerPosition' isStatic='true' isFinal='false' isOverride='false'  result_type='flash.geom:Point'>
</method>
<field name='buildingItemList' fullname='happymagic.manager:DisplayManager/buildingItemList' type='happymagic.display.view.edit:BuildingItemList' isStatic='true' isConst='false' >
</field>
<field name='deskTip' fullname='happymagic.manager:DisplayManager/deskTip' type='happymagic.display.view.desk:DeskTip' isStatic='true' isConst='false' >
</field>
<field name='doorTip' fullname='happymagic.manager:DisplayManager/doorTip' type='happymagic.display.view.door:DoorTip' isStatic='true' isConst='false' >
</field>
<field name='menuView' fullname='happymagic.manager:DisplayManager/menuView' type='happymagic.display.view:MenuView' isStatic='true' isConst='false' >
</field>
<field name='sceneSprite' fullname='happymagic.manager:DisplayManager/sceneSprite' type='flash.display:Sprite' isStatic='true' isConst='false' >
</field>
<field name='uiDiyMenu' fullname='happymagic.manager:DisplayManager/uiDiyMenu' type='ui_diymenu' isStatic='true' isConst='false' >
</field>
<field name='uiSprite' fullname='happymagic.manager:DisplayManager/uiSprite' type='happymagic.manager:UiManager' isStatic='true' isConst='false' >
</field>
<classRec name='PublicDomain' fullname='happymagic.manager:PublicDomain' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\manager\PublicDomain.as' namespace='happymagic.manager' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
</classRec>
<method name='PublicDomain' fullname='happymagic.manager:PublicDomain/PublicDomain' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='PublicDomain.as$152:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='getInstance' fullname='happymagic.manager:PublicDomain/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happymagic.manager:PublicDomain'>
</method>
<method name='getVar' fullname='happymagic.manager:PublicDomain/getVar' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='*'>
</method>
<method name='setVar' fullname='happymagic.manager:PublicDomain/setVar' isStatic='false' isFinal='false' isOverride='false'  param_names='name;val' param_types='String;*' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='sysTime' fullname='happymagic.manager:PublicDomain/sysTime/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Date'>
</method>
<method name='sysTime' fullname='happymagic.manager:PublicDomain/sysTime/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Date' param_defaults='undefined' result_type='void'>
</method>
<field name='appDomain' fullname='happymagic.manager:PublicDomain/appDomain' type='flash.system:ApplicationDomain' isStatic='false' isConst='false' >
</field>
<field name='createModule' fullname='happymagic.manager:PublicDomain/createModule' type='String' isStatic='false' isConst='false' >
</field>
<field name='createUrl' fullname='happymagic.manager:PublicDomain/createUrl' type='String' isStatic='false' isConst='false' >
</field>
<field name='customObj' fullname='happymagic.manager:PublicDomain/customObj' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='debug' fullname='happymagic.manager:PublicDomain/debug' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='initUi' fullname='happymagic.manager:PublicDomain/initUi' type='String' isStatic='false' isConst='false' >
</field>
<field name='instance' fullname='happymagic.manager:PublicDomain/private:instance' type='happymagic.manager:PublicDomain' isStatic='true' isConst='false' >
</field>
<field name='isLocal' fullname='happymagic.manager:PublicDomain/isLocal' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='loaderContext' fullname='happymagic.manager:PublicDomain/loaderContext' type='flash.system:LoaderContext' isStatic='false' isConst='false' >
</field>
<field name='piantou' fullname='happymagic.manager:PublicDomain/piantou' type='String' isStatic='false' isConst='false' >
</field>
<field name='snsType' fullname='happymagic.manager:PublicDomain/snsType' type='String' isStatic='false' isConst='false' >
</field>
<field name='stageHeight' fullname='happymagic.manager:PublicDomain/stageHeight' type='Number' isStatic='false' isConst='false' defaultValue='600' >
</field>
<field name='stageWidth' fullname='happymagic.manager:PublicDomain/stageWidth' type='Number' isStatic='false' isConst='false' defaultValue='748' >
</field>
<field name='stage' fullname='happymagic.manager:PublicDomain/private:stage' type='flash.display:Stage' isStatic='false' isConst='false' >
</field>
<field name='timeDifference' fullname='happymagic.manager:PublicDomain/private:timeDifference' type='Number' isStatic='false' isConst='false' >
</field>
<field name='ver' fullname='happymagic.manager:PublicDomain/ver' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='UiManager' fullname='happymagic.manager:UiManager' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\manager\UiManager.as' namespace='happymagic.manager' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='UiManager' fullname='happymagic.manager:UiManager/UiManager' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='addModule' fullname='happymagic.manager:UiManager/addModule' isStatic='false' isFinal='false' isOverride='false'  param_names='mname;className;algin;mx;my;fx;fy;mvType;mvTime' param_types='String;String;String;Number;Number;Number;Number;String;Number' param_defaults='undefined;undefined;unknown;0;0;0;0;unknown;.5' result_type='happyfish.manager.module.interfaces:IModule'>
</method>
<method name='addToStage' fullname='happymagic.manager:UiManager/private:addToStage' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='checkSceneEndMv' fullname='happymagic.manager:UiManager/private:checkSceneEndMv' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='checkSceneOutMv' fullname='happymagic.manager:UiManager/private:checkSceneOutMv' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='closeBottomModule' fullname='happymagic.manager:UiManager/closeBottomModule' isStatic='false' isFinal='false' isOverride='false'  param_names='except' param_types='String' param_defaults='' result_type='void'>
<description><![CDATA[

		 关闭最下方所有菜单模块

		 一般是同样下方模块要打开时,先关闭其他的 

		 ]]></description>
</method>
<method name='closeLoading' fullname='happymagic.manager:UiManager/closeLoading' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='closeModule' fullname='happymagic.manager:UiManager/closeModule' isStatic='false' isFinal='false' isOverride='false'  param_names='mname;del' param_types='String;Boolean' param_defaults='undefined;false' result_type='void'>
</method>
<method name='closeSysMsg' fullname='happymagic.manager:UiManager/closeSysMsg' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='createMaskBg' fullname='happymagic.manager:UiManager/createMaskBg' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:Bitmap'>
</method>
<method name='createSysMsg' fullname='happymagic.manager:UiManager/private:createSysMsg' isStatic='false' isFinal='false' isOverride='false'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='getModule' fullname='happymagic.manager:UiManager/getModule' isStatic='false' isFinal='false' isOverride='false'  param_names='mname' param_types='String' param_defaults='undefined' result_type='happyfish.manager.module.interfaces:IModule'>
</method>
<method name='hideBg' fullname='happymagic.manager:UiManager/hideBg' isStatic='false' isFinal='false' isOverride='false'  param_names='target' param_types='happyfish.manager.module.interfaces:IModule' param_defaults='undefined' result_type='void'>
</method>
<method name='initModules' fullname='happymagic.manager:UiManager/initModules' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='init' fullname='happymagic.manager:UiManager/init' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='openMagicList' fullname='happymagic.manager:UiManager/openMagicList' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='setBg' fullname='happymagic.manager:UiManager/setBg' isStatic='false' isFinal='false' isOverride='false'  param_names='target' param_types='happyfish.manager.module.interfaces:IModule' param_defaults='undefined' result_type='void'>
</method>
<method name='showLoading' fullname='happymagic.manager:UiManager/showLoading' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='showMagicBook' fullname='happymagic.manager:UiManager/private:showMagicBook' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:MagicBookEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='showModule' fullname='happymagic.manager:UiManager/showModule' isStatic='false' isFinal='false' isOverride='false'  param_names='mname' param_types='String' param_defaults='undefined' result_type='happyfish.manager.module.interfaces:IModule'>
</method>
<method name='showOrHideItemBox' fullname='happymagic.manager:UiManager/private:showOrHideItemBox' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.display.view.itembox.events:ItemBoxEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='showSceneEndMv' fullname='happymagic.manager:UiManager/showSceneEndMv' isStatic='false' isFinal='false' isOverride='false'  param_names='callback' param_types='Function' param_defaults='null' result_type='void'>
</method>
<method name='showSceneOutMv' fullname='happymagic.manager:UiManager/showSceneOutMv' isStatic='false' isFinal='false' isOverride='false'  param_names='callback' param_types='Function' param_defaults='null' result_type='void'>
</method>
<method name='showSysMsgEvent' fullname='happymagic.manager:UiManager/private:showSysMsgEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:SysMsgEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='showSysMsg' fullname='happymagic.manager:UiManager/showSysMsg' isStatic='false' isFinal='false' isOverride='false'  param_names='str;type' param_types='String;uint' param_defaults='undefined;undefined' result_type='void'>
</method>
<field name='MODULE_FRIENDS' fullname='happymagic.manager:UiManager/MODULE_FRIENDS' type='String' isStatic='true' isConst='true' defaultValue='friends' >
</field>
<field name='MODULE_GUIDES' fullname='happymagic.manager:UiManager/MODULE_GUIDES' type='String' isStatic='true' isConst='true' defaultValue='guides' >
</field>
<field name='MODULE_ITEMBOX' fullname='happymagic.manager:UiManager/MODULE_ITEMBOX' type='String' isStatic='true' isConst='true' defaultValue='itemBoxView' >
</field>
<field name='MODULE_MAGICBOOK' fullname='happymagic.manager:UiManager/MODULE_MAGICBOOK' type='String' isStatic='true' isConst='true' defaultValue='magicBook' >
</field>
<field name='MODULE_MAINMENU' fullname='happymagic.manager:UiManager/MODULE_MAINMENU' type='String' isStatic='true' isConst='true' defaultValue='menu' >
</field>
<field name='loadingLayer' fullname='happymagic.manager:UiManager/private:loadingLayer' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='loadingMc' fullname='happymagic.manager:UiManager/private:loadingMc' type='happyfish.display.view:LoadingStateView' isStatic='false' isConst='false' >
</field>
<field name='moduleLayer' fullname='happymagic.manager:UiManager/private:moduleLayer' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='moduleManager' fullname='happymagic.manager:UiManager/private:moduleManager' type='happyfish.manager.module:ModuleManager' isStatic='false' isConst='false' >
</field>
<field name='needSceneOut' fullname='happymagic.manager:UiManager/private:needSceneOut' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='sceneChangeMc' fullname='happymagic.manager:UiManager/private:sceneChangeMc' type='sceneChangeMv' isStatic='false' isConst='false' >
</field>
<field name='sceneEndCallPlaying' fullname='happymagic.manager:UiManager/private:sceneEndCallPlaying' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='sceneEndCallback' fullname='happymagic.manager:UiManager/private:sceneEndCallback' type='Function' isStatic='false' isConst='false' >
</field>
<field name='sceneOutCallPlaying' fullname='happymagic.manager:UiManager/private:sceneOutCallPlaying' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='sceneOutCallback' fullname='happymagic.manager:UiManager/private:sceneOutCallback' type='Function' isStatic='false' isConst='false' >
</field>
<field name='sysMsgList' fullname='happymagic.manager:UiManager/private:sysMsgList' type='Array' isStatic='false' isConst='false' >
</field>
<field name='sysMsgView' fullname='happymagic.manager:UiManager/private:sysMsgView' type='happymagic.display.view:SysMsgView' isStatic='false' isConst='false' >
</field>
<classRec name='BgMusicManager' fullname='happyfish.manager:BgMusicManager' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\manager\BgMusicManager.as' namespace='happyfish.manager' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
</classRec>
<method name='BgMusicManager' fullname='happyfish.manager:BgMusicManager/BgMusicManager' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='BgMusicManager.as$31:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='getInstance' fullname='happyfish.manager:BgMusicManager/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.manager:BgMusicManager'>
</method>
<method name='isRunning' fullname='happyfish.manager:BgMusicManager/isRunning' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='setSound' fullname='happyfish.manager:BgMusicManager/setSound' isStatic='false' isFinal='false' isOverride='false'  param_names='url' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='soundReady' fullname='happyfish.manager:BgMusicManager/private:soundReady' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='start' fullname='happyfish.manager:BgMusicManager/start' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='stopSound' fullname='happyfish.manager:BgMusicManager/stopSound' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='isPlaying' fullname='happyfish.manager:BgMusicManager/isPlaying/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='soundFlag' fullname='happyfish.manager:BgMusicManager/soundFlag/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='isPlaying' fullname='happyfish.manager:BgMusicManager/isPlaying/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='soundFlag' fullname='happyfish.manager:BgMusicManager/soundFlag/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='_isPlaying' fullname='happyfish.manager:BgMusicManager/private:_isPlaying' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_soundFlag' fullname='happyfish.manager:BgMusicManager/private:_soundFlag' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='bgSoundReady' fullname='happyfish.manager:BgMusicManager/private:bgSoundReady' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='bgSound' fullname='happyfish.manager:BgMusicManager/private:bgSound' type='flash.media:Sound' isStatic='false' isConst='false' >
</field>
<field name='currentSoundUrl' fullname='happyfish.manager:BgMusicManager/private:currentSoundUrl' type='String' isStatic='false' isConst='false' >
</field>
<field name='instance' fullname='happyfish.manager:BgMusicManager/private:instance' type='happyfish.manager:BgMusicManager' isStatic='true' isConst='false' >
</field>
<field name='nowPlayer' fullname='happyfish.manager:BgMusicManager/private:nowPlayer' type='flash.media:SoundChannel' isStatic='false' isConst='false' >
</field>
<classRec name='ActTipsManager' fullname='happyfish.manager:ActTipsManager' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\manager\ActTipsManager.as' namespace='happyfish.manager' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ActTipsManager' fullname='happyfish.manager:ActTipsManager/ActTipsManager' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='ActTipsManager.as$35:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='getInstance' fullname='happyfish.manager:ActTipsManager/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.manager:ActTipsManager'>
</method>
<method name='hideActTips' fullname='happyfish.manager:ActTipsManager/hideActTips' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='showActTips' fullname='happyfish.manager:ActTipsManager/showActTips' isStatic='false' isFinal='false' isOverride='false'  param_names='p;rotation;container' param_types='flash.geom:Point;Number;flash.display:DisplayObjectContainer' param_defaults='undefined;0;null' result_type='void'>
<description><![CDATA[

		 显示指向标记

		 ]]></description>
<param><![CDATA[p	STAGE全局坐标

		 ]]></param>
</method>
<field name='instance' fullname='happyfish.manager:ActTipsManager/private:instance' type='happyfish.manager:ActTipsManager' isStatic='true' isConst='false' >
</field>
<field name='tipsIcon' fullname='happyfish.manager:ActTipsManager/private:tipsIcon' type='flash.display:MovieClip' isStatic='false' isConst='false' >
</field>
<classRec name='ShareObjectManager' fullname='happyfish.manager:ShareObjectManager' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\manager\ShareObjectManager.as' namespace='happyfish.manager' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
</classRec>
<method name='ShareObjectManager' fullname='happyfish.manager:ShareObjectManager/ShareObjectManager' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='ShareObjectManager.as$36:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='getInstance' fullname='happyfish.manager:ShareObjectManager/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.manager:ShareObjectManager'>
</method>
<method name='init' fullname='happyfish.manager:ShareObjectManager/init' isStatic='false' isFinal='false' isOverride='false'  param_names='soName;defaultObj' param_types='String;Object' param_defaults='undefined;null' result_type='void'>
</method>
<method name='bgSound' fullname='happyfish.manager:ShareObjectManager/bgSound/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='soundEffect' fullname='happyfish.manager:ShareObjectManager/soundEffect/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='bgSound' fullname='happyfish.manager:ShareObjectManager/bgSound/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='soundEffect' fullname='happyfish.manager:ShareObjectManager/soundEffect/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='data' fullname='happyfish.manager:ShareObjectManager/private:data' type='Object' isStatic='false' isConst='false' >
</field>
<field name='instance' fullname='happyfish.manager:ShareObjectManager/private:instance' type='happyfish.manager:ShareObjectManager' isStatic='true' isConst='false' >
</field>
<field name='so' fullname='happyfish.manager:ShareObjectManager/private:so' type='flash.net:SharedObject' isStatic='false' isConst='false' >
</field>
<classRec name='MouseManager' fullname='happyfish.manager:MouseManager' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\manager\MouseManager.as' namespace='happyfish.manager' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MouseManager' fullname='happyfish.manager:MouseManager/MouseManager' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='MouseManager.as$38:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='addMouseIcon' fullname='happyfish.manager:MouseManager/addMouseIcon' isStatic='false' isFinal='false' isOverride='false'  param_names='key;value' param_types='String;flash.display:Sprite' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='checkIcon' fullname='happyfish.manager:MouseManager/private:checkIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:Sprite'>
<description><![CDATA[

		 获得当前优先级最高的鼠标

		 ]]></description>
<return><![CDATA[
		 ]]></return>
</method>
<method name='clearTmpIcon' fullname='happyfish.manager:MouseManager/clearTmpIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='getInstance' fullname='happyfish.manager:MouseManager/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.manager:MouseManager'>
</method>
<method name='getMouseIcon' fullname='happyfish.manager:MouseManager/getMouseIcon' isStatic='false' isFinal='false' isOverride='false'  param_names='key' param_types='String' param_defaults='undefined' result_type='flash.display:Sprite'>
</method>
<method name='hideMouse' fullname='happyfish.manager:MouseManager/private:hideMouse' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='iconFollowEvent' fullname='happyfish.manager:MouseManager/private:iconFollowEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 手型对齐事件

		 逐帧把手型与鼠标所在位置对齐

		 ]]></description>
<param><![CDATA[e

		 ]]></param>
</method>
<method name='initManager' fullname='happyfish.manager:MouseManager/initManager' isStatic='false' isFinal='false' isOverride='false'  param_names='_container' param_types='flash.display:DisplayObjectContainer' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 设置manager

		 ]]></description>
<param><![CDATA[_container	鼠标手型容器

		 ]]></param>
</method>
<method name='liuchenMouseUpEvent' fullname='happyfish.manager:MouseManager/private:liuchenMouseUpEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='objectDownEvent' fullname='happyfish.manager:MouseManager/private:objectDownEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='objectOutEvent' fullname='happyfish.manager:MouseManager/private:objectOutEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='objectOverEvent' fullname='happyfish.manager:MouseManager/private:objectOverEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='objectUpEvent' fullname='happyfish.manager:MouseManager/private:objectUpEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='registObjectMouseIcon' fullname='happyfish.manager:MouseManager/registObjectMouseIcon' isStatic='false' isFinal='false' isOverride='false'  param_names='object;over;down' param_types='flash.display:DisplayObject;flash.display:Sprite;flash.display:Sprite' param_defaults='undefined;undefined;null' result_type='void'>
<description><![CDATA[

		 注册目标对象

		 ]]></description>
<param><![CDATA[object	

		 ]]></param>
<param><![CDATA[over

		 ]]></param>
<param><![CDATA[down

		 ]]></param>
</method>
<method name='setIcon' fullname='happyfish.manager:MouseManager/setIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 立即更换当前鼠标手型

		 ]]></description>
<param><![CDATA[icon

		 ]]></param>
</method>
<method name='setLiuChenIcon' fullname='happyfish.manager:MouseManager/setLiuChenIcon' isStatic='false' isFinal='false' isOverride='false'  param_names='icon;_callBack;_callBackParms' param_types='flash.display:Sprite;Function;Array' param_defaults='undefined;null;null' result_type='void'>
<description><![CDATA[

		 设置一个流程手型

		 ]]></description>
<param><![CDATA[icon

		 ]]></param>
</method>
<method name='setTmpIcon' fullname='happyfish.manager:MouseManager/setTmpIcon' isStatic='false' isFinal='false' isOverride='false'  param_names='icon' param_types='flash.display:Sprite' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 设置一个临时手型

		 ]]></description>
<param><![CDATA[icon

		 ]]></param>
</method>
<method name='stageIn' fullname='happyfish.manager:MouseManager/private:stageIn' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='stageOut' fullname='happyfish.manager:MouseManager/private:stageOut' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='startIconFollowMouse' fullname='happyfish.manager:MouseManager/private:startIconFollowMouse' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 鼠标手型开始跟随鼠标

		 ]]></description>
</method>
<method name='startLiuchen' fullname='happyfish.manager:MouseManager/private:startLiuchen' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 开始一次点击流程

		 ]]></description>
</method>
<method name='stopFollow' fullname='happyfish.manager:MouseManager/private:stopFollow' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='defaultMouseIcon' fullname='happyfish.manager:MouseManager/defaultMouseIcon/set' isStatic='false' isFinal='false' isOverride='false'  param_names='icon' param_types='flash.display:Sprite' param_defaults='undefined' result_type='void'>
</method>
<field name='STATE_DEFAULT' fullname='happyfish.manager:MouseManager/STATE_DEFAULT' type='String' isStatic='true' isConst='true' defaultValue='default' >
</field>
<field name='STATE_LIUCHEN' fullname='happyfish.manager:MouseManager/STATE_LIUCHEN' type='String' isStatic='true' isConst='true' defaultValue='liuchen' >
</field>
<field name='STATE_OBJECT_DOWN' fullname='happyfish.manager:MouseManager/STATE_OBJECT_DOWN' type='String' isStatic='true' isConst='true' defaultValue='objectDown' >
</field>
<field name='STATE_OBJECT_OVER' fullname='happyfish.manager:MouseManager/STATE_OBJECT_OVER' type='String' isStatic='true' isConst='true' defaultValue='objectOver' >
</field>
<field name='callBackParms' fullname='happyfish.manager:MouseManager/private:callBackParms' type='Array' isStatic='false' isConst='false' >
</field>
<field name='callBack' fullname='happyfish.manager:MouseManager/private:callBack' type='Function' isStatic='false' isConst='false' >
</field>
<field name='container' fullname='happyfish.manager:MouseManager/private:container' type='flash.display:DisplayObjectContainer' isStatic='false' isConst='false' >
</field>
<field name='currentIcon' fullname='happyfish.manager:MouseManager/private:currentIcon' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='currentObject' fullname='happyfish.manager:MouseManager/private:currentObject' type='flash.display:DisplayObject' isStatic='false' isConst='false' >
</field>
<field name='defaultIcon' fullname='happyfish.manager:MouseManager/private:defaultIcon' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='following' fullname='happyfish.manager:MouseManager/private:following' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='iconDict' fullname='happyfish.manager:MouseManager/private:iconDict' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='instance' fullname='happyfish.manager:MouseManager/private:instance' type='happyfish.manager:MouseManager' isStatic='true' isConst='false' >
</field>
<field name='liuchenIcon' fullname='happyfish.manager:MouseManager/private:liuchenIcon' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='objectRegistIcon' fullname='happyfish.manager:MouseManager/private:objectRegistIcon' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='registIcons' fullname='happyfish.manager:MouseManager/private:registIcons' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 注册目标字典

		 key为目标对象:DisplayObject

		 值为数组,第一项为over手型,第二项为down手型

		 ]]></description>
</field>
<field name='state' fullname='happyfish.manager:MouseManager/private:state' type='String' isStatic='false' isConst='false' >
</field>
<field name='tmpIcon' fullname='happyfish.manager:MouseManager/private:tmpIcon' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<classRec name='InterfaceURLManager' fullname='happyfish.manager:InterfaceURLManager' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\manager\InterfaceURLManager.as' namespace='happyfish.manager' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
</classRec>
<method name='InterfaceURLManager' fullname='happyfish.manager:InterfaceURLManager/InterfaceURLManager' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='InterfaceURLManager.as$42:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='getInstance' fullname='happyfish.manager:InterfaceURLManager/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.manager:InterfaceURLManager'>
</method>
<method name='getUrl' fullname='happyfish.manager:InterfaceURLManager/getUrl' isStatic='false' isFinal='false' isOverride='false'  param_names='urlName;withTime' param_types='String;Boolean' param_defaults='undefined;false' result_type='String'>
</method>
<method name='hasUrl' fullname='happyfish.manager:InterfaceURLManager/hasUrl' isStatic='false' isFinal='false' isOverride='false'  param_names='urlName' param_types='String' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='time' fullname='happyfish.manager:InterfaceURLManager/time' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='instance' fullname='happyfish.manager:InterfaceURLManager/private:instance' type='happyfish.manager:InterfaceURLManager' isStatic='true' isConst='false' >
</field>
<field name='interfaceHost' fullname='happyfish.manager:InterfaceURLManager/interfaceHost' type='String' isStatic='false' isConst='false' >
</field>
<field name='staticHost' fullname='happyfish.manager:InterfaceURLManager/staticHost' type='String' isStatic='false' isConst='false' >
</field>
<field name='tmpUrls' fullname='happyfish.manager:InterfaceURLManager/tmpUrls' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='urls' fullname='happyfish.manager:InterfaceURLManager/urls' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<classRec name='SwfURLManager' fullname='happyfish.manager:SwfURLManager' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\manager\SwfURLManager.as' namespace='happyfish.manager' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
</classRec>
<method name='SwfURLManager' fullname='happyfish.manager:SwfURLManager/SwfURLManager' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='SwfURLManager.as$542:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='getClassURL' fullname='happyfish.manager:SwfURLManager/getClassURL' isStatic='false' isFinal='false' isOverride='false'  param_names='className' param_types='String' param_defaults='undefined' result_type='String'>
</method>
<method name='getInstance' fullname='happyfish.manager:SwfURLManager/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.manager:SwfURLManager'>
</method>
<method name='hasClassURL' fullname='happyfish.manager:SwfURLManager/hasClassURL' isStatic='false' isFinal='false' isOverride='false'  param_names='className' param_types='String' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='setValue' fullname='happyfish.manager:SwfURLManager/setValue' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<field name='instance' fullname='happyfish.manager:SwfURLManager/private:instance' type='happyfish.manager:SwfURLManager' isStatic='true' isConst='false' >
</field>
<field name='urls' fullname='happyfish.manager:SwfURLManager/private:urls' type='Object' isStatic='false' isConst='false' >
</field>
<classRec name='SoundEffectManager' fullname='happyfish.manager:SoundEffectManager' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\manager\SoundEffectManager.as' namespace='happyfish.manager' access='public' baseclass='Object' interfaces='happyfish.manager.module.interfaces:ISoundManager' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
</classRec>
<method name='SoundEffectManager' fullname='happyfish.manager:SoundEffectManager/SoundEffectManager' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='SoundEffectManager.as$59:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='getInstance' fullname='happyfish.manager:SoundEffectManager/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.manager:SoundEffectManager'>
</method>
<method name='playSound' fullname='happyfish.manager:SoundEffectManager/playSound' isStatic='false' isFinal='false' isOverride='false'  param_names='sound' param_types='flash.media:Sound' param_defaults='undefined' result_type='void'>
</method>
<method name='play_complete' fullname='happyfish.manager:SoundEffectManager/private:play_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<field name='instance' fullname='happyfish.manager:SoundEffectManager/private:instance' type='happyfish.manager:SoundEffectManager' isStatic='true' isConst='false' >
</field>
<field name='soundEffect' fullname='happyfish.manager:SoundEffectManager/soundEffect' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<classRec name='EventManager' fullname='happyfish.manager:EventManager' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\manager\EventManager.as' namespace='happyfish.manager' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
</classRec>
<method name='EventManager' fullname='happyfish.manager:EventManager/EventManager' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='EventManager.as$63:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='closeUiBg' fullname='happyfish.manager:EventManager/closeUiBg' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='getInstance' fullname='happyfish.manager:EventManager/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.manager:EventManager'>
</method>
<method name='hideLoading' fullname='happyfish.manager:EventManager/hideLoading' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='showLoading' fullname='happyfish.manager:EventManager/showLoading' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='showPiaoStr' fullname='happyfish.manager:EventManager/showPiaoStr' isStatic='false' isFinal='false' isOverride='false'  param_names='piao_type;content;p;now;justShow' param_types='uint;String;flash.geom:Point;Boolean;Boolean' param_defaults='undefined;undefined;null;false;false' result_type='void'>
<description><![CDATA[

		 显示一个飘屏

		 ]]></description>
<param><![CDATA[piao_type

		 ]]></param>
<param><![CDATA[content

		 ]]></param>
<param><![CDATA[p

		 ]]></param>
<param><![CDATA[now

		 ]]></param>
<param><![CDATA[justShow	只是显示一下,不表现飞向信息面板动画

		 ]]></param>
</method>
<method name='showSysMsg' fullname='happyfish.manager:EventManager/showSysMsg' isStatic='false' isFinal='false' isOverride='false'  param_names='str;type' param_types='String;uint' param_defaults='undefined;0' result_type='void'>
</method>
<method name='showUiBg' fullname='happyfish.manager:EventManager/showUiBg' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='instance' fullname='happyfish.manager:EventManager/private:instance' type='happyfish.manager:EventManager' isStatic='true' isConst='false' >
</field>
<classRec name='ActModuleManager' fullname='happyfish.manager.actModule:ActModuleManager' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\manager\actModule\ActModuleManager.as' namespace='happyfish.manager.actModule' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ActModuleManager' fullname='happyfish.manager.actModule:ActModuleManager/ActModuleManager' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='ActModuleManager.as$33:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='addActModule' fullname='happyfish.manager.actModule:ActModuleManager/addActModule' isStatic='false' isFinal='false' isOverride='false'  param_names='act' param_types='happyfish.manager.actModule.vo:ActVo' param_defaults='undefined' result_type='void'>
</method>
<method name='getInstance' fullname='happyfish.manager.actModule:ActModuleManager/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.manager.actModule:ActModuleManager'>
</method>
<method name='init' fullname='happyfish.manager.actModule:ActModuleManager/init' isStatic='false' isFinal='false' isOverride='false'  param_names='__container' param_types='flash.display:DisplayObjectContainer' param_defaults='undefined' result_type='void'>
</method>
<method name='removeActModule' fullname='happyfish.manager.actModule:ActModuleManager/removeActModule' isStatic='false' isFinal='false' isOverride='false'  param_names='actName' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='showActModule_complete' fullname='happyfish.manager.actModule:ActModuleManager/private:showActModule_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<field name='actModules' fullname='happyfish.manager.actModule:ActModuleManager/private:actModules' type='Object' isStatic='false' isConst='false' >
</field>
<field name='container' fullname='happyfish.manager.actModule:ActModuleManager/private:container' type='flash.display:DisplayObjectContainer' isStatic='false' isConst='false' >
</field>
<field name='instance' fullname='happyfish.manager.actModule:ActModuleManager/private:instance' type='happyfish.manager.actModule:ActModuleManager' isStatic='true' isConst='false' >
</field>
<classRec name='TextFieldTools' fullname='happyfish.utils.display:TextFieldTools' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\utils\display\TextFieldTools.as' namespace='happyfish.utils.display' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='TextFieldTools' fullname='happyfish.utils.display:TextFieldTools/TextFieldTools' isStatic='false' isFinal='false' isOverride='false'  param_names='_autoCenter' param_types='Boolean' param_defaults='false' result_type='*'>
</method>
<method name='stopTimer' fullname='happyfish.utils.display:TextFieldTools/stopTimer' isStatic='false' isFinal='false' isOverride='false'  param_names='toEnd' param_types='Boolean' param_defaults='false' result_type='void'>
</method>
<method name='timerFun' fullname='happyfish.utils.display:TextFieldTools/private:timerFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:TimerEvent' param_defaults='null' result_type='void'>
</method>
<method name='typeEffect' fullname='happyfish.utils.display:TextFieldTools/typeEffect' isStatic='false' isFinal='false' isOverride='false'  param_names='textField;str;delaytime' param_types='flash.text:TextField;String;uint' param_defaults='undefined;undefined;300' result_type='void'>
</method>
<field name='autoCenter' fullname='happyfish.utils.display:TextFieldTools/private:autoCenter' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='curIndex' fullname='happyfish.utils.display:TextFieldTools/private:curIndex' type='Number' isStatic='false' isConst='false' >
</field>
<field name='data' fullname='happyfish.utils.display:TextFieldTools/private:data' type='String' isStatic='false' isConst='false' >
</field>
<field name='rect' fullname='happyfish.utils.display:TextFieldTools/private:rect' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
</field>
<field name='timer' fullname='happyfish.utils.display:TextFieldTools/private:timer' type='flash.utils:Timer' isStatic='false' isConst='false' >
</field>
<field name='txt' fullname='happyfish.utils.display:TextFieldTools/private:txt' type='flash.text:TextField' isStatic='false' isConst='false' >
</field>
<field name='typeEnd' fullname='happyfish.utils.display:TextFieldTools/typeEnd' type='Boolean' isStatic='false' isConst='false' >
</field>
<classRec name='FiltersDomain' fullname='happyfish.utils.display:FiltersDomain' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\utils\display\FiltersDomain.as' namespace='happyfish.utils.display' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
</classRec>
<method name='FiltersDomain' fullname='happyfish.utils.display:FiltersDomain/FiltersDomain' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='blueGlow' fullname='happyfish.utils.display:FiltersDomain/blueGlow/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flash.filters:GlowFilter'>
</method>
<method name='grayFilter' fullname='happyfish.utils.display:FiltersDomain/grayFilter/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flash.filters:ColorMatrixFilter'>
</method>
<method name='redGlow' fullname='happyfish.utils.display:FiltersDomain/redGlow/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flash.filters:GlowFilter'>
</method>
<method name='textGlow' fullname='happyfish.utils.display:FiltersDomain/textGlow/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flash.filters:GlowFilter'>
</method>
<method name='yellowGlow' fullname='happyfish.utils.display:FiltersDomain/yellowGlow/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flash.filters:GlowFilter'>
</method>
<field name='_grayFilter' fullname='happyfish.utils.display:FiltersDomain/private:_grayFilter' type='flash.filters:ColorMatrixFilter' isStatic='true' isConst='false' >
</field>
<field name='blueGlowFilter' fullname='happyfish.utils.display:FiltersDomain/private:blueGlowFilter' type='flash.filters:GlowFilter' isStatic='true' isConst='false' >
</field>
<field name='redGlowFilter' fullname='happyfish.utils.display:FiltersDomain/private:redGlowFilter' type='flash.filters:GlowFilter' isStatic='true' isConst='false' >
</field>
<field name='textGlowFilter' fullname='happyfish.utils.display:FiltersDomain/private:textGlowFilter' type='flash.filters:GlowFilter' isStatic='true' isConst='false' >
</field>
<field name='yellowGlowFilter' fullname='happyfish.utils.display:FiltersDomain/private:yellowGlowFilter' type='flash.filters:GlowFilter' isStatic='true' isConst='false' >
</field>
<classRec name='BtnStateControl' fullname='happyfish.utils.display:BtnStateControl' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\utils\display\BtnStateControl.as' namespace='happyfish.utils.display' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='BtnStateControl' fullname='happyfish.utils.display:BtnStateControl/BtnStateControl' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='setBtnState' fullname='happyfish.utils.display:BtnStateControl/setBtnState' isStatic='true' isFinal='false' isOverride='false'  param_names='target;state;mouseFlag' param_types='flash.display:DisplayObject;Boolean;Boolean' param_defaults='undefined;undefined;false' result_type='void'>
</method>
<classRec name='ScaleControl' fullname='happyfish.utils.display:ScaleControl' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\utils\display\ScaleControl.as' namespace='happyfish.utils.display' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ScaleControl' fullname='happyfish.utils.display:ScaleControl/ScaleControl' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='size' fullname='happyfish.utils.display:ScaleControl/size' isStatic='true' isFinal='false' isOverride='false'  param_names='target;maxWidth;maxHeight;rect' param_types='flash.display:DisplayObject;Number;Number;flash.geom:Rectangle' param_defaults='undefined;undefined;undefined;null' result_type='void'>
</method>
<classRec name='McShower' fullname='happyfish.utils.display:McShower' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\utils\display\McShower.as' namespace='happyfish.utils.display' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='McShower' fullname='happyfish.utils.display:McShower/McShower' isStatic='false' isFinal='false' isOverride='false'  param_names='mcClass;_container;_label_actions;_type;_callBack;_autoRemove' param_types='*;flash.display:DisplayObjectContainer;Object;*;Function;Boolean' param_defaults='undefined;undefined;null;null;null;true' result_type='*'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[mcClass

		 ]]></param>
<param><![CDATA[_container

		 ]]></param>
<param><![CDATA[_label_actions	播放到某标签时调用的方法 例:{label1:label1Func,label2:label2Func}

		 ]]></param>
<param><![CDATA[_type 播放到位置,可传帧数\标签名\null表示播放完全

		 ]]></param>
<param><![CDATA[_callBack

		 ]]></param>
<param><![CDATA[_autoRemove

		 ]]></param>
</method>
<method name='checkMovieToEnd' fullname='happyfish.utils.display:McShower/checkMovieToEnd' isStatic='false' isFinal='false' isOverride='false'  param_names='target' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='void'>
</method>
<method name='checkMovie' fullname='happyfish.utils.display:McShower/private:checkMovie' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='classGeted' fullname='happyfish.utils.display:McShower/private:classGeted' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happyfish.events:SwfClassCacheEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='createMc' fullname='happyfish.utils.display:McShower/private:createMc' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='loadClass' fullname='happyfish.utils.display:McShower/private:loadClass' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='playEnd' fullname='happyfish.utils.display:McShower/private:playEnd' isStatic='false' isFinal='false' isOverride='false'  param_names='target' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='void'>
</method>
<method name='playSceneShark' fullname='happyfish.utils.display:McShower/private:playSceneShark' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='removeMe' fullname='happyfish.utils.display:McShower/removeMe' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='stopSceneShark' fullname='happyfish.utils.display:McShower/private:stopSceneShark' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='mouseEnabled' fullname='happyfish.utils.display:McShower/mouseEnabled/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='x' fullname='happyfish.utils.display:McShower/x/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='y' fullname='happyfish.utils.display:McShower/y/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='mouseEnabled' fullname='happyfish.utils.display:McShower/mouseEnabled/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='x' fullname='happyfish.utils.display:McShower/x/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='y' fullname='happyfish.utils.display:McShower/y/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='autoRemove' fullname='happyfish.utils.display:McShower/private:autoRemove' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='callBack' fullname='happyfish.utils.display:McShower/private:callBack' type='Function' isStatic='false' isConst='false' >
</field>
<field name='className' fullname='happyfish.utils.display:McShower/private:className' type='String' isStatic='false' isConst='false' >
</field>
<field name='container' fullname='happyfish.utils.display:McShower/private:container' type='flash.display:DisplayObjectContainer' isStatic='false' isConst='false' >
</field>
<field name='currentLabel' fullname='happyfish.utils.display:McShower/private:currentLabel' type='String' isStatic='false' isConst='false' >
</field>
<field name='label_actions' fullname='happyfish.utils.display:McShower/private:label_actions' type='Object' isStatic='false' isConst='false' >
</field>
<field name='mc' fullname='happyfish.utils.display:McShower/private:mc' type='flash.display:MovieClip' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='happyfish.utils.display:McShower/private:type' type='' isStatic='false' isConst='false' >
</field>
<classRec name='AlginControl' fullname='happyfish.utils.display:AlginControl' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\utils\display\AlginControl.as' namespace='happyfish.utils.display' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='AlginControl' fullname='happyfish.utils.display:AlginControl/AlginControl' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='alginInRect' fullname='happyfish.utils.display:AlginControl/alginInRect' isStatic='true' isFinal='false' isOverride='false'  param_names='target;rect' param_types='flash.display:DisplayObjectContainer;flash.geom:Rectangle' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='alginTxtInRect' fullname='happyfish.utils.display:AlginControl/alginTxtInRect' isStatic='true' isFinal='false' isOverride='false'  param_names='target;rect' param_types='flash.text:TextField;flash.geom:Rectangle' param_defaults='undefined;undefined' result_type='void'>
</method>
<classRec name='CameraSharkControl' fullname='happyfish.utils.display:CameraSharkControl' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\utils\display\CameraSharkControl.as' namespace='happyfish.utils.display' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='CameraSharkControl' fullname='happyfish.utils.display:CameraSharkControl/CameraSharkControl' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='addTarget' fullname='happyfish.utils.display:CameraSharkControl/private:addTarget' isStatic='true' isFinal='false' isOverride='false'  param_names='target;dist;time;callBack' param_types='flash.display:DisplayObject;uint;uint;Function' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
</method>
<method name='hasTarget' fullname='happyfish.utils.display:CameraSharkControl/hasTarget' isStatic='true' isFinal='false' isOverride='false'  param_names='target' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='sharkFun' fullname='happyfish.utils.display:CameraSharkControl/private:sharkFun' isStatic='true' isFinal='false' isOverride='false'  param_names='target;ox;oy;dist' param_types='flash.display:DisplayObject;int;int;uint' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
</method>
<method name='sharkTimeFun' fullname='happyfish.utils.display:CameraSharkControl/private:sharkTimeFun' isStatic='true' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='shark' fullname='happyfish.utils.display:CameraSharkControl/shark' isStatic='true' isFinal='false' isOverride='false'  param_names='target;dist;time;callBack;delay' param_types='flash.display:DisplayObject;uint;uint;Function;uint' param_defaults='undefined;undefined;undefined;null;0' result_type='void'>
<description><![CDATA[

		 增加一个物件进行抖动

		 ]]></description>
<param><![CDATA[target	目标

		 ]]></param>
<param><![CDATA[dist	抖动的范围

		 ]]></param>
<param><![CDATA[time	抖动的时间,以毫秒计

		 ]]></param>
<param><![CDATA[delay	延迟开始时间,以毫秒计

		 ]]></param>
</method>
<method name='startShark' fullname='happyfish.utils.display:CameraSharkControl/private:startShark' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='stopShark' fullname='happyfish.utils.display:CameraSharkControl/stopShark' isStatic='true' isFinal='false' isOverride='false'  param_names='targetObj' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='sharkTargets' fullname='happyfish.utils.display:CameraSharkControl/private:sharkTargets' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='sharkTimer' fullname='happyfish.utils.display:CameraSharkControl/private:sharkTimer' type='flash.utils:Timer' isStatic='true' isConst='false' >
</field>
<field name='timerTime' fullname='happyfish.utils.display:CameraSharkControl/private:timerTime' type='int' isStatic='true' isConst='true' defaultValue='33' >
</field>
<classRec name='GameWorld' fullname='happyfish.scene.world:GameWorld' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\world\GameWorld.as' namespace='happyfish.scene.world' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='GameWorld' fullname='happyfish.scene.world:GameWorld/GameWorld' isStatic='false' isFinal='false' isOverride='false'  param_names='$worldState' param_types='happyfish.scene.world:WorldState' param_defaults='undefined' result_type='*'>
</method>
<method name='addItem' fullname='happyfish.scene.world:GameWorld/addItem' isStatic='false' isFinal='false' isOverride='false'  param_names='$item' param_types='happyfish.scene.world.grid:BaseItem' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 将物件放入物件列表

		 ]]></description>
<param><![CDATA[$item

		 ]]></param>
</method>
<method name='addToGrid' fullname='happyfish.scene.world:GameWorld/addToGrid' isStatic='false' isFinal='false' isOverride='false'  param_names='$item' param_types='happyfish.scene.world.grid:BaseItem' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 加入格子,设置不可行走

		 ]]></description>
<param><![CDATA[$item

		 ]]></param>
</method>
<method name='clear' fullname='happyfish.scene.world:GameWorld/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='createItem' fullname='happyfish.scene.world:GameWorld/createItem' isStatic='false' isFinal='false' isOverride='false'  param_names='$gridItem' param_types='happyfish.scene.world.grid:BaseItem' param_defaults='undefined' result_type='void'>
</method>
<method name='create' fullname='happyfish.scene.world:GameWorld/create' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$init_flg' param_types='Object;Boolean' param_defaults='undefined;true' result_type='void'>
</method>
<method name='destroyItems' fullname='happyfish.scene.world:GameWorld/destroyItems' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='getDecorById' fullname='happyfish.scene.world:GameWorld/getDecorById' isStatic='false' isFinal='false' isOverride='false'  param_names='id' param_types='uint' param_defaults='undefined' result_type='happyfish.scene.world.grid:IsoItem'>
</method>
<method name='getFiddleOneStudent' fullname='happyfish.scene.world:GameWorld/getFiddleOneStudent' isStatic='false' isFinal='false' isOverride='false'  result_type='happymagic.scene.world.grid.person:Student'>
</method>
<method name='getWallByNode' fullname='happyfish.scene.world:GameWorld/getWallByNode' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y' param_types='int;int' param_defaults='undefined;undefined' result_type='happyfish.scene.world.grid:IsoItem'>
</method>
<method name='leaveEditMode' fullname='happyfish.scene.world:GameWorld/leaveEditMode' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 待继承

		 ]]></description>
</method>
<method name='openMagicList' fullname='happyfish.scene.world:GameWorld/openMagicList' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='removeItem' fullname='happyfish.scene.world:GameWorld/removeItem' isStatic='false' isFinal='false' isOverride='false'  param_names='$item' param_types='happyfish.scene.world.grid:BaseItem' param_defaults='undefined' result_type='void'>
</method>
<method name='removeNodeItems' fullname='happyfish.scene.world:GameWorld/removeNodeItems' isStatic='false' isFinal='false' isOverride='false'  param_names='$item' param_types='happyfish.scene.world.grid:BaseItem' param_defaults='undefined' result_type='void'>
</method>
<method name='removeToGrid' fullname='happyfish.scene.world:GameWorld/removeToGrid' isStatic='false' isFinal='false' isOverride='false'  param_names='$item' param_types='happyfish.scene.world.grid:BaseItem' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 回复物件下的格子的可行走和可DIY状态

		 ]]></description>
<param><![CDATA[$item

		 ]]></param>
</method>
<method name='saveNodeItems' fullname='happyfish.scene.world:GameWorld/saveNodeItems' isStatic='false' isFinal='false' isOverride='false'  param_names='$item' param_types='happyfish.scene.world.grid:BaseItem' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 记录格子上所对应的对象

		 ]]></description>
<param><![CDATA[$item

		 ]]></param>
</method>
<method name='saveWallTileNodeItem' fullname='happyfish.scene.world:GameWorld/saveWallTileNodeItem' isStatic='false' isFinal='false' isOverride='false'  param_names='$item' param_types='happyfish.scene.world.grid:BaseItem' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 记录墙纸物件到列表中

		 ]]></description>
<param><![CDATA[$item

		 ]]></param>
</method>
<method name='updateGroundBitmapData' fullname='happyfish.scene.world:GameWorld/updateGroundBitmapData' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='groundSprite' fullname='happyfish.scene.world:GameWorld/groundSprite/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:Sprite'>
</method>
<method name='items' fullname='happyfish.scene.world:GameWorld/items/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='nodeWallTileItems' fullname='happyfish.scene.world:GameWorld/nodeWallTileItems/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='player' fullname='happyfish.scene.world:GameWorld/player/get' isStatic='false' isFinal='false' isOverride='false'  result_type='happymagic.scene.world.grid.person:Player'>
</method>
<method name='userInfo' fullname='happyfish.scene.world:GameWorld/userInfo/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='nodeWallTileItems' fullname='happyfish.scene.world:GameWorld/nodeWallTileItems/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='_data' fullname='happyfish.scene.world:GameWorld/protected:_data' type='Object' isStatic='false' isConst='false' >
</field>
<field name='_groundGrid' fullname='happyfish.scene.world:GameWorld/protected:_groundGrid' type='Object' isStatic='false' isConst='false' >
</field>
<field name='_groundSprite' fullname='happyfish.scene.world:GameWorld/protected:_groundSprite' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='_items' fullname='happyfish.scene.world:GameWorld/protected:_items' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_nodeWallTileItems' fullname='happyfish.scene.world:GameWorld/private:_nodeWallTileItems' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_player' fullname='happyfish.scene.world:GameWorld/protected:_player' type='happymagic.scene.world.grid.person:Player' isStatic='false' isConst='false' >
</field>
<field name='_view' fullname='happyfish.scene.world:GameWorld/protected:_view' type='happyfish.scene.world:WorldView' isStatic='false' isConst='false' >
</field>
<field name='_worldState' fullname='happyfish.scene.world:GameWorld/protected:_worldState' type='happyfish.scene.world:WorldState' isStatic='false' isConst='false' >
</field>
<field name='backgroundColor' fullname='happyfish.scene.world:GameWorld/protected:backgroundColor' type='uint' isStatic='false' isConst='false' defaultValue='0x9355046' >
</field>
<field name='decorInstanceItems' fullname='happyfish.scene.world:GameWorld/decorInstanceItems' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='groundData' fullname='happyfish.scene.world:GameWorld/groundData' type='flash.display:BitmapData' isStatic='false' isConst='false' >
</field>
<field name='groundRect' fullname='happyfish.scene.world:GameWorld/groundRect' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
</field>
<field name='nodeItems' fullname='happyfish.scene.world:GameWorld/nodeItems' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='sceneLoading' fullname='happyfish.scene.world:GameWorld/sceneLoading' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='scenePlayer' fullname='happyfish.scene.world:GameWorld/scenePlayer' type='happymagic.scene.world.grid.person:Player' isStatic='false' isConst='false' >
</field>
<field name='table' fullname='happyfish.scene.world:GameWorld/table' type='happymagic.scene.world.grid.item:Table' isStatic='false' isConst='false' >
</field>
<classRec name='WorldState' fullname='happyfish.scene.world:WorldState' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\world\WorldState.as' namespace='happyfish.scene.world' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 存储世界对象

	 ]]></description>
<author><![CDATA[Beck Xu

	 ]]></author>
</classRec>
<method name='WorldState' fullname='happyfish.scene.world:WorldState/WorldState' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='checkInRoom' fullname='happyfish.scene.world:WorldState/checkInRoom' isStatic='false' isFinal='false' isOverride='false'  param_names='x;z' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='clearRoomWalkAbles' fullname='happyfish.scene.world:WorldState/clearRoomWalkAbles' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='closeRoomGrid' fullname='happyfish.scene.world:WorldState/closeRoomGrid' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 设置房间周边一圈格子为不可走

		 ]]></description>
</method>
<method name='createRoomWalkAbles' fullname='happyfish.scene.world:WorldState/createRoomWalkAbles' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='getCustomOutRoomWalkAbleNode' fullname='happyfish.scene.world:WorldState/getCustomOutRoomWalkAbleNode' isStatic='false' isFinal='false' isOverride='false'  result_type='happyfish.scene.astar:Node'>
</method>
<method name='getCustomRoomWalkAbleNode' fullname='happyfish.scene.world:WorldState/getCustomRoomWalkAbleNode' isStatic='false' isFinal='false' isOverride='false'  result_type='happyfish.scene.astar:Node'>
</method>
<method name='initGrid' fullname='happyfish.scene.world:WorldState/initGrid' isStatic='false' isFinal='false' isOverride='false'  param_names='tile_x_length;tile_z_length' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='init' fullname='happyfish.scene.world:WorldState/init' isStatic='false' isFinal='false' isOverride='false'  param_names='$view;$world;$physicsControl' param_types='happyfish.scene.world:WorldView;happyfish.scene.world:GameWorld;happyfish.scene.world.control:IsoPhysicsControl' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='isDoorArea' fullname='happyfish.scene.world:WorldState/isDoorArea' isStatic='false' isFinal='false' isOverride='false'  param_names='$x;$z' param_types='int;int' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='isWallArea' fullname='happyfish.scene.world:WorldState/isWallArea' isStatic='false' isFinal='false' isOverride='false'  param_names='$x;$z' param_types='int;int' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<field name='diy' fullname='happyfish.scene.world:WorldState/diy' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='doorRectLeft' fullname='happyfish.scene.world:WorldState/doorRectLeft' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
</field>
<field name='doorRectRight' fullname='happyfish.scene.world:WorldState/doorRectRight' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
</field>
<field name='grid' fullname='happyfish.scene.world:WorldState/grid' type='happyfish.scene.astar:Grid' isStatic='false' isConst='false' >
</field>
<field name='mouseAction' fullname='happyfish.scene.world:WorldState/mouseAction' type='happyfish.scene.world.control:MouseCursorAction' isStatic='false' isConst='false' >
</field>
<field name='outRoomWalkNodes' fullname='happyfish.scene.world:WorldState/private:outRoomWalkNodes' type='Array' isStatic='false' isConst='false' >
</field>
<field name='physicsControl' fullname='happyfish.scene.world:WorldState/physicsControl' type='happyfish.scene.world.control:IsoPhysicsControl' isStatic='false' isConst='false' >
</field>
<field name='roomRect' fullname='happyfish.scene.world:WorldState/roomRect' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
</field>
<field name='roomWalkNodes' fullname='happyfish.scene.world:WorldState/private:roomWalkNodes' type='Array' isStatic='false' isConst='false' >
</field>
<field name='view' fullname='happyfish.scene.world:WorldState/view' type='happyfish.scene.world:WorldView' isStatic='false' isConst='false' >
</field>
<field name='wallRectLeft' fullname='happyfish.scene.world:WorldState/wallRectLeft' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
</field>
<field name='wallRectRight' fullname='happyfish.scene.world:WorldState/wallRectRight' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
</field>
<field name='world' fullname='happyfish.scene.world:WorldState/world' type='happyfish.scene.world:GameWorld' isStatic='false' isConst='false' >
</field>
<classRec name='WorldView' fullname='happyfish.scene.world:WorldView' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\world\WorldView.as' namespace='happyfish.scene.world' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='WorldView' fullname='happyfish.scene.world:WorldView/WorldView' isStatic='false' isFinal='false' isOverride='false'  param_names='$worldState' param_types='happyfish.scene.world:WorldState' param_defaults='undefined' result_type='*'>
</method>
<method name='addIsoChild' fullname='happyfish.scene.world:WorldView/addIsoChild' isStatic='false' isFinal='false' isOverride='false'  param_names='$isoSprite' param_types='happyfish.scene.iso:IsoSprite' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 将IsoSprite对象放入容器

		 ]]></description>
<param><![CDATA[$isoSprite

		 ]]></param>
</method>
<method name='center' fullname='happyfish.scene.world:WorldView/center' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 居中

		 ]]></description>
</method>
<method name='onMouseMove' fullname='happyfish.scene.world:WorldView/onMouseMove' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='postMouseClick' fullname='happyfish.scene.world:WorldView/private:postMouseClick' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 后置监听,鼠标点击背景,派发游戏背景点击事件,主要用在diy模式,放下物品的时候

		 ]]></description>
<param><![CDATA[event

		 ]]></param>
</method>
<method name='preMouseClick' fullname='happyfish.scene.world:WorldView/private:preMouseClick' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 前置监听事件,取消冒泡

		 ]]></description>
<param><![CDATA[event

		 ]]></param>
</method>
<method name='resizeFun' fullname='happyfish.scene.world:WorldView/private:resizeFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='setBackground' fullname='happyfish.scene.world:WorldView/setBackground' isStatic='false' isFinal='false' isOverride='false'  param_names='$bdata;$x;$y' param_types='flash.display:BitmapData;int;int' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 将背景加入主sprite

		 ]]></description>
<param><![CDATA[param1

		 ]]></param>
</method>
<method name='setBigBg' fullname='happyfish.scene.world:WorldView/setBigBg' isStatic='false' isFinal='false' isOverride='false'  param_names='bitmap;$x;$y' param_types='flash.display:Bitmap;int;int' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='showLayer' fullname='happyfish.scene.world:WorldView/showLayer' isStatic='false' isFinal='false' isOverride='false'  param_names='$layer' param_types='flash.display:Sprite' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 显示编辑层

		 ]]></description>
<param><![CDATA[$layer

		 ]]></param>
</method>
<method name='targetGrid' fullname='happyfish.scene.world:WorldView/targetGrid' isStatic='false' isFinal='false' isOverride='false'  result_type='com.friendsofed.isometric:Point3D'>
<description><![CDATA[

		 将当前鼠标坐标转换为grid坐标

		 ]]></description>
<return><![CDATA[
		 ]]></return>
</method>
<method name='isoView' fullname='happyfish.scene.world:WorldView/isoView/get' isStatic='false' isFinal='false' isOverride='false'  result_type='happyfish.scene.iso:IsoView'>
</method>
<field name='LAYER_BOTTOM' fullname='happyfish.scene.world:WorldView/LAYER_BOTTOM' type='int' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='LAYER_FLYING' fullname='happyfish.scene.world:WorldView/LAYER_FLYING' type='int' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='LAYER_MV' fullname='happyfish.scene.world:WorldView/LAYER_MV' type='int' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='LAYER_REALTIME_SORT' fullname='happyfish.scene.world:WorldView/LAYER_REALTIME_SORT' type='int' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='WORLD_HEIGHT' fullname='happyfish.scene.world:WorldView/WORLD_HEIGHT' type='int' isStatic='true' isConst='true' defaultValue='1300' >
</field>
<field name='WORLD_WIDTH' fullname='happyfish.scene.world:WorldView/WORLD_WIDTH' type='int' isStatic='true' isConst='true' defaultValue='2000' >
</field>
<field name='_isoView' fullname='happyfish.scene.world:WorldView/private:_isoView' type='happyfish.scene.iso:IsoView' isStatic='false' isConst='false' >
</field>
<field name='_worldState' fullname='happyfish.scene.world:WorldView/protected:_worldState' type='happyfish.scene.world:WorldState' isStatic='false' isConst='false' >
</field>
<field name='defaultContainer' fullname='happyfish.scene.world:WorldView/defaultContainer' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='editContainer' fullname='happyfish.scene.world:WorldView/editContainer' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='mouseAction' fullname='happyfish.scene.world:WorldView/mouseAction' type='happyfish.scene.world.control:MouseCursorAction' isStatic='false' isConst='false' >
</field>
<field name='selectionContainer' fullname='happyfish.scene.world:WorldView/protected:selectionContainer' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='visibleLayer' fullname='happyfish.scene.world:WorldView/private:visibleLayer' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<classRec name='BasicVo' fullname='happymagic.model.vo:BasicVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\BasicVo.as' namespace='happymagic.model.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='BasicVo' fullname='happymagic.model.vo:BasicVo/BasicVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='setData' fullname='happymagic.model.vo:BasicVo/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='happymagic.model.vo:BasicVo'>
</method>
<classRec name='MixMagicVo' fullname='happymagic.model.vo:MixMagicVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\MixMagicVo.as' namespace='happymagic.model.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MixMagicVo' fullname='happymagic.model.vo:MixMagicVo/MixMagicVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='setData' fullname='happymagic.model.vo:MixMagicVo/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='happymagic.model.vo:MixMagicVo'>
</method>
<field name='blue' fullname='happymagic.model.vo:MixMagicVo/blue' type='uint' isStatic='false' isConst='false' >
</field>
<field name='d_id' fullname='happymagic.model.vo:MixMagicVo/d_id' type='uint' isStatic='false' isConst='false' >
</field>
<field name='decorId' fullname='happymagic.model.vo:MixMagicVo/decorId' type='Array' isStatic='false' isConst='false' >
</field>
<field name='exp' fullname='happymagic.model.vo:MixMagicVo/exp' type='uint' isStatic='false' isConst='false' >
</field>
<field name='gem' fullname='happymagic.model.vo:MixMagicVo/gem' type='uint' isStatic='false' isConst='false' >
</field>
<field name='green' fullname='happymagic.model.vo:MixMagicVo/green' type='uint' isStatic='false' isConst='false' >
</field>
<field name='itemId' fullname='happymagic.model.vo:MixMagicVo/itemId' type='Array' isStatic='false' isConst='false' >
</field>
<field name='mix_mid' fullname='happymagic.model.vo:MixMagicVo/mix_mid' type='uint' isStatic='false' isConst='false' >
</field>
<field name='mp' fullname='happymagic.model.vo:MixMagicVo/mp' type='uint' isStatic='false' isConst='false' >
</field>
<field name='name' fullname='happymagic.model.vo:MixMagicVo/name' type='String' isStatic='false' isConst='false' >
</field>
<field name='needLevel' fullname='happymagic.model.vo:MixMagicVo/needLevel' type='uint' isStatic='false' isConst='false' >
</field>
<field name='red' fullname='happymagic.model.vo:MixMagicVo/red' type='uint' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='happymagic.model.vo:MixMagicVo/type' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='MagicClassVo' fullname='happymagic.model.vo:MagicClassVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\MagicClassVo.as' namespace='happymagic.model.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 魔法基础表

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='MagicClassVo' fullname='happymagic.model.vo:MagicClassVo/MagicClassVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='setData' fullname='happymagic.model.vo:MagicClassVo/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='happymagic.model.vo:MagicClassVo'>
</method>
<method name='crystal' fullname='happymagic.model.vo:MagicClassVo/crystal/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='learn_crystal' fullname='happymagic.model.vo:MagicClassVo/learn_crystal/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='crystal' fullname='happymagic.model.vo:MagicClassVo/crystal/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='learn_crystal' fullname='happymagic.model.vo:MagicClassVo/learn_crystal/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<field name='actMovie' fullname='happymagic.model.vo:MagicClassVo/actMovie' type='String' isStatic='false' isConst='false' >
</field>
<field name='blue' fullname='happymagic.model.vo:MagicClassVo/blue' type='uint' isStatic='false' isConst='false' >
</field>
<field name='class_name' fullname='happymagic.model.vo:MagicClassVo/class_name' type='String' isStatic='false' isConst='false' >
</field>
<field name='content' fullname='happymagic.model.vo:MagicClassVo/content' type='String' isStatic='false' isConst='false' defaultValue='' >
</field>
<field name='exp' fullname='happymagic.model.vo:MagicClassVo/exp' type='int' isStatic='false' isConst='false' >
</field>
<field name='green' fullname='happymagic.model.vo:MagicClassVo/green' type='uint' isStatic='false' isConst='false' >
</field>
<field name='learn_blue' fullname='happymagic.model.vo:MagicClassVo/learn_blue' type='uint' isStatic='false' isConst='false' >
</field>
<field name='learn_gem' fullname='happymagic.model.vo:MagicClassVo/learn_gem' type='uint' isStatic='false' isConst='false' >
</field>
<field name='learn_green' fullname='happymagic.model.vo:MagicClassVo/learn_green' type='uint' isStatic='false' isConst='false' >
</field>
<field name='learn_red' fullname='happymagic.model.vo:MagicClassVo/learn_red' type='uint' isStatic='false' isConst='false' >
</field>
<field name='magic_id' fullname='happymagic.model.vo:MagicClassVo/magic_id' type='int' isStatic='false' isConst='false' >
</field>
<field name='magic_type' fullname='happymagic.model.vo:MagicClassVo/magic_type' type='int' isStatic='false' isConst='false' >
</field>
<field name='mp' fullname='happymagic.model.vo:MagicClassVo/mp' type='int' isStatic='false' isConst='false' >
</field>
<field name='name' fullname='happymagic.model.vo:MagicClassVo/name' type='String' isStatic='false' isConst='false' >
</field>
<field name='need_level' fullname='happymagic.model.vo:MagicClassVo/need_level' type='int' isStatic='false' isConst='false' >
</field>
<field name='red' fullname='happymagic.model.vo:MagicClassVo/red' type='uint' isStatic='false' isConst='false' >
</field>
<field name='time' fullname='happymagic.model.vo:MagicClassVo/time' type='int' isStatic='false' isConst='false' >
</field>
<classRec name='UserVo' fullname='happymagic.model.vo:UserVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\UserVo.as' namespace='happymagic.model.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='UserVo' fullname='happymagic.model.vo:UserVo/UserVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clone' fullname='happymagic.model.vo:UserVo/clone' isStatic='false' isFinal='false' isOverride='false'  result_type='happymagic.model.vo:UserVo'>
</method>
<method name='setData' fullname='happymagic.model.vo:UserVo/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='happymagic.model.vo:UserVo'>
</method>
<method name='toString' fullname='happymagic.model.vo:UserVo/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='avatar' fullname='happymagic.model.vo:UserVo/avatar' type='uint' isStatic='false' isConst='false' >
</field>
<field name='blue' fullname='happymagic.model.vo:UserVo/blue' type='uint' isStatic='false' isConst='false' >
</field>
<field name='canTrans_time' fullname='happymagic.model.vo:UserVo/canTrans_time' type='int' isStatic='false' isConst='false' >
</field>
<field name='className' fullname='happymagic.model.vo:UserVo/className' type='String' isStatic='false' isConst='false' >
</field>
<field name='currentSceneId' fullname='happymagic.model.vo:UserVo/currentSceneId' type='uint' isStatic='false' isConst='false' >
</field>
<field name='desk_limit' fullname='happymagic.model.vo:UserVo/desk_limit' type='int' isStatic='false' isConst='false' >
</field>
<field name='door_limit' fullname='happymagic.model.vo:UserVo/door_limit' type='int' isStatic='false' isConst='false' >
</field>
<field name='eat_limit' fullname='happymagic.model.vo:UserVo/eat_limit' type='int' isStatic='false' isConst='false' >
</field>
<field name='exp' fullname='happymagic.model.vo:UserVo/exp' type='int' isStatic='false' isConst='false' >
</field>
<field name='face' fullname='happymagic.model.vo:UserVo/face' type='String' isStatic='false' isConst='false' >
</field>
<field name='feedNum' fullname='happymagic.model.vo:UserVo/feedNum' type='uint' isStatic='false' isConst='false' >
</field>
<field name='gem' fullname='happymagic.model.vo:UserVo/gem' type='int' isStatic='false' isConst='false' >
</field>
<field name='green' fullname='happymagic.model.vo:UserVo/green' type='uint' isStatic='false' isConst='false' >
</field>
<field name='index' fullname='happymagic.model.vo:UserVo/index' type='uint' isStatic='false' isConst='false' >
</field>
<field name='level' fullname='happymagic.model.vo:UserVo/level' type='uint' isStatic='false' isConst='false' >
</field>
<field name='magic_type' fullname='happymagic.model.vo:UserVo/magic_type' type='uint' isStatic='false' isConst='false' >
</field>
<field name='max_exp' fullname='happymagic.model.vo:UserVo/max_exp' type='int' isStatic='false' isConst='false' >
</field>
<field name='max_mp' fullname='happymagic.model.vo:UserVo/max_mp' type='int' isStatic='false' isConst='false' >
</field>
<field name='mp' fullname='happymagic.model.vo:UserVo/mp' type='int' isStatic='false' isConst='false' >
</field>
<field name='name' fullname='happymagic.model.vo:UserVo/name' type='String' isStatic='false' isConst='false' >
</field>
<field name='popularity' fullname='happymagic.model.vo:UserVo/popularity' type='uint' isStatic='false' isConst='false' >
</field>
<field name='red' fullname='happymagic.model.vo:UserVo/red' type='uint' isStatic='false' isConst='false' >
</field>
<field name='replyMpPer' fullname='happymagic.model.vo:UserVo/replyMpPer' type='uint' isStatic='false' isConst='false' >
</field>
<field name='replyMpTime' fullname='happymagic.model.vo:UserVo/replyMpTime' type='int' isStatic='false' isConst='false' >
</field>
<field name='replyMp_time' fullname='happymagic.model.vo:UserVo/replyMp_time' type='int' isStatic='false' isConst='false' >
</field>
<field name='students_limit' fullname='happymagic.model.vo:UserVo/students_limit' type='int' isStatic='false' isConst='false' defaultValue='10' >
</field>
<field name='switchBagLevel' fullname='happymagic.model.vo:UserVo/switchBagLevel' type='uint' isStatic='false' isConst='false' >
</field>
<field name='tile_x_length' fullname='happymagic.model.vo:UserVo/tile_x_length' type='int' isStatic='false' isConst='false' >
</field>
<field name='tile_z_length' fullname='happymagic.model.vo:UserVo/tile_z_length' type='int' isStatic='false' isConst='false' >
</field>
<field name='trans_className' fullname='happymagic.model.vo:UserVo/trans_className' type='String' isStatic='false' isConst='false' >
</field>
<field name='trans_mid' fullname='happymagic.model.vo:UserVo/trans_mid' type='uint' isStatic='false' isConst='false' >
</field>
<field name='trans_time' fullname='happymagic.model.vo:UserVo/trans_time' type='int' isStatic='false' isConst='false' >
</field>
<field name='uid' fullname='happymagic.model.vo:UserVo/uid' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='StudentVo' fullname='happymagic.model.vo:StudentVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\StudentVo.as' namespace='happymagic.model.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='StudentVo' fullname='happymagic.model.vo:StudentVo/StudentVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='setValue' fullname='happymagic.model.vo:StudentVo/setValue' isStatic='false' isFinal='false' isOverride='false'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='happymagic.model.vo:StudentVo'>
</method>
<field name='avatar_id' fullname='happymagic.model.vo:StudentVo/avatar_id' type='int' isStatic='false' isConst='false' >
</field>
<field name='blue' fullname='happymagic.model.vo:StudentVo/blue' type='int' isStatic='false' isConst='false' >
</field>
<field name='can_steal' fullname='happymagic.model.vo:StudentVo/can_steal' type='int' isStatic='false' isConst='false' >
</field>
<field name='class_name' fullname='happymagic.model.vo:StudentVo/class_name' type='String' isStatic='false' isConst='false' >
</field>
<field name='crystal' fullname='happymagic.model.vo:StudentVo/crystal' type='int' isStatic='false' isConst='false' >
</field>
<field name='decor_id' fullname='happymagic.model.vo:StudentVo/decor_id' type='int' isStatic='false' isConst='false' >
</field>
<field name='event_time' fullname='happymagic.model.vo:StudentVo/event_time' type='int' isStatic='false' isConst='false' >
</field>
<field name='green' fullname='happymagic.model.vo:StudentVo/green' type='int' isStatic='false' isConst='false' >
</field>
<field name='magic_id' fullname='happymagic.model.vo:StudentVo/magic_id' type='int' isStatic='false' isConst='false' >
</field>
<field name='red' fullname='happymagic.model.vo:StudentVo/red' type='int' isStatic='false' isConst='false' >
</field>
<field name='state' fullname='happymagic.model.vo:StudentVo/state' type='int' isStatic='false' isConst='false' >
</field>
<field name='stone_time' fullname='happymagic.model.vo:StudentVo/stone_time' type='int' isStatic='false' isConst='false' >
</field>
<field name='time' fullname='happymagic.model.vo:StudentVo/time' type='int' isStatic='false' isConst='false' >
</field>
<field name='x' fullname='happymagic.model.vo:StudentVo/x' type='int' isStatic='false' isConst='false' >
</field>
<field name='y' fullname='happymagic.model.vo:StudentVo/y' type='int' isStatic='false' isConst='false' >
</field>
<field name='z' fullname='happymagic.model.vo:StudentVo/z' type='int' isStatic='false' isConst='false' >
</field>
<classRec name='ResultVo' fullname='happymagic.model.vo:ResultVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\ResultVo.as' namespace='happymagic.model.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ResultVo' fullname='happymagic.model.vo:ResultVo/ResultVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clone' fullname='happymagic.model.vo:ResultVo/clone' isStatic='false' isFinal='false' isOverride='false'  result_type='happymagic.model.vo:ResultVo'>
</method>
<method name='setValue' fullname='happymagic.model.vo:ResultVo/setValue' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='happymagic.model.vo:ResultVo'>
</method>
<method name='isSuccess' fullname='happymagic.model.vo:ResultVo/isSuccess/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<field name='SUCCESS' fullname='happymagic.model.vo:ResultVo/SUCCESS' type='int' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='blue' fullname='happymagic.model.vo:ResultVo/blue' type='int' isStatic='false' isConst='false' >
</field>
<field name='content' fullname='happymagic.model.vo:ResultVo/content' type='String' isStatic='false' isConst='false' >
</field>
<field name='exp' fullname='happymagic.model.vo:ResultVo/exp' type='int' isStatic='false' isConst='false' >
</field>
<field name='gem' fullname='happymagic.model.vo:ResultVo/gem' type='int' isStatic='false' isConst='false' >
</field>
<field name='green' fullname='happymagic.model.vo:ResultVo/green' type='int' isStatic='false' isConst='false' >
</field>
<field name='levelUP' fullname='happymagic.model.vo:ResultVo/levelUP' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='mp' fullname='happymagic.model.vo:ResultVo/mp' type='int' isStatic='false' isConst='false' >
</field>
<field name='red' fullname='happymagic.model.vo:ResultVo/red' type='int' isStatic='false' isConst='false' >
</field>
<field name='status' fullname='happymagic.model.vo:ResultVo/status' type='int' isStatic='false' isConst='false' >
</field>
<classRec name='MagicType' fullname='happymagic.model.vo:MagicType' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\MagicType.as' namespace='happymagic.model.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MagicType' fullname='happymagic.model.vo:MagicType/MagicType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='BLUE' fullname='happymagic.model.vo:MagicType/BLUE' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='GREEN' fullname='happymagic.model.vo:MagicType/GREEN' type='uint' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='RED' fullname='happymagic.model.vo:MagicType/RED' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<classRec name='MoneyType' fullname='happymagic.model.vo:MoneyType' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\MoneyType.as' namespace='happymagic.model.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MoneyType' fullname='happymagic.model.vo:MoneyType/MoneyType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='getPriceNum' fullname='happymagic.model.vo:MoneyType/getPriceNum' isStatic='true' isFinal='false' isOverride='false'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='uint'>
<description><![CDATA[

		 返回数据内价格值(默认为只有一个货币价)

		 ]]></description>
<param><![CDATA[obj

		 ]]></param>
<return><![CDATA[
		 ]]></return>
</method>
<method name='getPriceType' fullname='happymagic.model.vo:MoneyType/getPriceType' isStatic='true' isFinal='false' isOverride='false'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='uint'>
<description><![CDATA[

		 返回数据内价格类型(默认为只有一个货币价)

		 ]]></description>
<param><![CDATA[obj

		 ]]></param>
<return><![CDATA[
		 ]]></return>
</method>
<method name='getTypeName' fullname='happymagic.model.vo:MoneyType/getTypeName' isStatic='true' isFinal='false' isOverride='false'  param_names='type' param_types='uint' param_defaults='undefined' result_type='String'>
</method>
<field name='BLUE_NAME' fullname='happymagic.model.vo:MoneyType/BLUE_NAME' type='String' isStatic='true' isConst='true' defaultValue='crystal_blue' >
</field>
<field name='BLUE' fullname='happymagic.model.vo:MoneyType/BLUE' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='GEM_NAME' fullname='happymagic.model.vo:MoneyType/GEM_NAME' type='String' isStatic='true' isConst='true' defaultValue='crystal_gem' >
</field>
<field name='GEM' fullname='happymagic.model.vo:MoneyType/GEM' type='uint' isStatic='true' isConst='true' defaultValue='4' >
</field>
<field name='GREEN_NAME' fullname='happymagic.model.vo:MoneyType/GREEN_NAME' type='String' isStatic='true' isConst='true' defaultValue='crystal_green' >
</field>
<field name='GREEN' fullname='happymagic.model.vo:MoneyType/GREEN' type='uint' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='RED_NAME' fullname='happymagic.model.vo:MoneyType/RED_NAME' type='String' isStatic='true' isConst='true' defaultValue='crystal_red' >
</field>
<field name='RED' fullname='happymagic.model.vo:MoneyType/RED' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='typeNameArr' fullname='happymagic.model.vo:MoneyType/typeNameArr' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<classRec name='AvatarType' fullname='happymagic.model.vo:AvatarType' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\AvatarType.as' namespace='happymagic.model.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='AvatarType' fullname='happymagic.model.vo:AvatarType/AvatarType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='PLAYER' fullname='happymagic.model.vo:AvatarType/PLAYER' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='STUDENT' fullname='happymagic.model.vo:AvatarType/STUDENT' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<classRec name='SceneState' fullname='happymagic.model.vo:SceneState' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\SceneState.as' namespace='happymagic.model.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='SceneState' fullname='happymagic.model.vo:SceneState/SceneState' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='OPEN' fullname='happymagic.model.vo:SceneState/OPEN' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='UNOPEN' fullname='happymagic.model.vo:SceneState/UNOPEN' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='UNSHOW' fullname='happymagic.model.vo:SceneState/UNSHOW' type='uint' isStatic='true' isConst='true' defaultValue='3' >
</field>
<classRec name='ConditionType' fullname='happymagic.model.vo:ConditionType' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\ConditionType.as' namespace='happymagic.model.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ConditionType' fullname='happymagic.model.vo:ConditionType/ConditionType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='StringToInt' fullname='happymagic.model.vo:ConditionType/StringToInt' isStatic='true' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='uint'>
</method>
<field name='DECOR' fullname='happymagic.model.vo:ConditionType/DECOR' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='ITEM' fullname='happymagic.model.vo:ConditionType/ITEM' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='MAGIC_CLASS' fullname='happymagic.model.vo:ConditionType/MAGIC_CLASS' type='uint' isStatic='true' isConst='true' defaultValue='4' >
</field>
<field name='MIX' fullname='happymagic.model.vo:ConditionType/MIX' type='uint' isStatic='true' isConst='true' defaultValue='5' >
</field>
<field name='SCENE_UPGRADE' fullname='happymagic.model.vo:ConditionType/SCENE_UPGRADE' type='uint' isStatic='true' isConst='true' defaultValue='7' >
</field>
<field name='TRANS' fullname='happymagic.model.vo:ConditionType/TRANS' type='uint' isStatic='true' isConst='true' defaultValue='6' >
</field>
<field name='USER_BLUE' fullname='happymagic.model.vo:ConditionType/USER_BLUE' type='String' isStatic='true' isConst='true' defaultValue='blue' >
</field>
<field name='USER_DESK_LIMIT' fullname='happymagic.model.vo:ConditionType/USER_DESK_LIMIT' type='String' isStatic='true' isConst='true' defaultValue='deskLimit' >
</field>
<field name='USER_EXP' fullname='happymagic.model.vo:ConditionType/USER_EXP' type='String' isStatic='true' isConst='true' defaultValue='exp' >
</field>
<field name='USER_GEM' fullname='happymagic.model.vo:ConditionType/USER_GEM' type='String' isStatic='true' isConst='true' defaultValue='gmoney' >
</field>
<field name='USER_GREEN' fullname='happymagic.model.vo:ConditionType/USER_GREEN' type='String' isStatic='true' isConst='true' defaultValue='green' >
</field>
<field name='USER_MP_MAX' fullname='happymagic.model.vo:ConditionType/USER_MP_MAX' type='String' isStatic='true' isConst='true' defaultValue='mpMax' >
</field>
<field name='USER_MP' fullname='happymagic.model.vo:ConditionType/USER_MP' type='String' isStatic='true' isConst='true' defaultValue='mp' >
</field>
<field name='USER_POPULARITY' fullname='happymagic.model.vo:ConditionType/USER_POPULARITY' type='String' isStatic='true' isConst='true' defaultValue='popularity' >
</field>
<field name='USER_RED' fullname='happymagic.model.vo:ConditionType/USER_RED' type='String' isStatic='true' isConst='true' defaultValue='red' >
</field>
<field name='USER_STUDENT_LIMIT' fullname='happymagic.model.vo:ConditionType/USER_STUDENT_LIMIT' type='String' isStatic='true' isConst='true' defaultValue='student_limit' >
</field>
<field name='USER' fullname='happymagic.model.vo:ConditionType/USER' type='uint' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='idArr' fullname='happymagic.model.vo:ConditionType/idArr' type='Object' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<classRec name='StudentStateType' fullname='happymagic.model.vo:StudentStateType' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\StudentStateType.as' namespace='happymagic.model.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='StudentStateType' fullname='happymagic.model.vo:StudentStateType/StudentStateType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='FIDDLE' fullname='happymagic.model.vo:StudentStateType/FIDDLE' type='int' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='INTERRUPT' fullname='happymagic.model.vo:StudentStateType/INTERRUPT' type='uint' isStatic='true' isConst='true' defaultValue='4' >
</field>
<field name='NOTEACH' fullname='happymagic.model.vo:StudentStateType/NOTEACH' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='STUDYING' fullname='happymagic.model.vo:StudentStateType/STUDYING' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='TEACHOVER' fullname='happymagic.model.vo:StudentStateType/TEACHOVER' type='uint' isStatic='true' isConst='true' defaultValue='3' >
</field>
<classRec name='DecorType' fullname='happymagic.model.vo:DecorType' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\DecorType.as' namespace='happymagic.model.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='DecorType' fullname='happymagic.model.vo:DecorType/DecorType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='DECOR' fullname='happymagic.model.vo:DecorType/DECOR' type='uint' isStatic='true' isConst='true' defaultValue='5' >
</field>
<field name='DESK' fullname='happymagic.model.vo:DecorType/DESK' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='DOOR' fullname='happymagic.model.vo:DecorType/DOOR' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='FLOOR' fullname='happymagic.model.vo:DecorType/FLOOR' type='uint' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='TOOLS' fullname='happymagic.model.vo:DecorType/TOOLS' type='uint' isStatic='true' isConst='true' defaultValue='6' >
</field>
<field name='WALL_DECOR' fullname='happymagic.model.vo:DecorType/WALL_DECOR' type='uint' isStatic='true' isConst='true' defaultValue='7' >
</field>
<field name='WALL_PAPER' fullname='happymagic.model.vo:DecorType/WALL_PAPER' type='uint' isStatic='true' isConst='true' defaultValue='4' >
</field>
<classRec name='ItemType' fullname='happymagic.model.vo:ItemType' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\ItemType.as' namespace='happymagic.model.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ItemType' fullname='happymagic.model.vo:ItemType/ItemType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='FOOD' fullname='happymagic.model.vo:ItemType/FOOD' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='OTHER' fullname='happymagic.model.vo:ItemType/OTHER' type='uint' isStatic='true' isConst='true' defaultValue='4' >
</field>
<field name='SOLUTION' fullname='happymagic.model.vo:ItemType/SOLUTION' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='STUFF' fullname='happymagic.model.vo:ItemType/STUFF' type='uint' isStatic='true' isConst='true' defaultValue='3' >
</field>
<classRec name='DiaryType' fullname='happymagic.model.vo:DiaryType' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\DiaryType.as' namespace='happymagic.model.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='DiaryType' fullname='happymagic.model.vo:DiaryType/DiaryType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='FRIEND' fullname='happymagic.model.vo:DiaryType/FRIEND' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='SWITCH' fullname='happymagic.model.vo:DiaryType/SWITCH' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='SYSTEM' fullname='happymagic.model.vo:DiaryType/SYSTEM' type='uint' isStatic='true' isConst='true' defaultValue='3' >
</field>
<classRec name='TaskState' fullname='happymagic.model.vo:TaskState' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\TaskState.as' namespace='happymagic.model.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='TaskState' fullname='happymagic.model.vo:TaskState/TaskState' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='ACTIVED' fullname='happymagic.model.vo:TaskState/ACTIVED' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='CAN_FINISH' fullname='happymagic.model.vo:TaskState/CAN_FINISH' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<classRec name='FeedDict' fullname='happymagic.model.vo:FeedDict' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\FeedDict.as' namespace='happymagic.model.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='FeedDict' fullname='happymagic.model.vo:FeedDict/FeedDict' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='CONTINUOUS_LOGIN' fullname='happymagic.model.vo:FeedDict/CONTINUOUS_LOGIN' type='uint' isStatic='true' isConst='false' defaultValue='5' >
</field>
<field name='FIRST_IN' fullname='happymagic.model.vo:FeedDict/FIRST_IN' type='uint' isStatic='true' isConst='false' defaultValue='4' >
</field>
<field name='LEARNED_MAGIC' fullname='happymagic.model.vo:FeedDict/LEARNED_MAGIC' type='uint' isStatic='true' isConst='false' defaultValue='3' >
</field>
<field name='LEARNED_TRANS' fullname='happymagic.model.vo:FeedDict/LEARNED_TRANS' type='uint' isStatic='true' isConst='false' defaultValue='2' >
</field>
<field name='LEVELUP' fullname='happymagic.model.vo:FeedDict/LEVELUP' type='uint' isStatic='true' isConst='false' defaultValue='1' >
</field>
<classRec name='TransMagicVo' fullname='happymagic.model.vo:TransMagicVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\TransMagicVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:BasicVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='TransMagicVo' fullname='happymagic.model.vo:TransMagicVo/TransMagicVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='blue' fullname='happymagic.model.vo:TransMagicVo/blue' type='uint' isStatic='false' isConst='false' >
</field>
<field name='class_name' fullname='happymagic.model.vo:TransMagicVo/class_name' type='String' isStatic='false' isConst='false' >
</field>
<field name='content' fullname='happymagic.model.vo:TransMagicVo/content' type='String' isStatic='false' isConst='false' defaultValue='' >
</field>
<field name='decorId' fullname='happymagic.model.vo:TransMagicVo/decorId' type='Array' isStatic='false' isConst='false' >
</field>
<field name='exp' fullname='happymagic.model.vo:TransMagicVo/exp' type='uint' isStatic='false' isConst='false' >
</field>
<field name='gem' fullname='happymagic.model.vo:TransMagicVo/gem' type='uint' isStatic='false' isConst='false' >
</field>
<field name='green' fullname='happymagic.model.vo:TransMagicVo/green' type='uint' isStatic='false' isConst='false' >
</field>
<field name='itemId' fullname='happymagic.model.vo:TransMagicVo/itemId' type='Array' isStatic='false' isConst='false' >
</field>
<field name='mp' fullname='happymagic.model.vo:TransMagicVo/mp' type='uint' isStatic='false' isConst='false' >
</field>
<field name='name' fullname='happymagic.model.vo:TransMagicVo/name' type='String' isStatic='false' isConst='false' >
</field>
<field name='needLevel' fullname='happymagic.model.vo:TransMagicVo/needLevel' type='uint' isStatic='false' isConst='false' >
</field>
<field name='red' fullname='happymagic.model.vo:TransMagicVo/red' type='uint' isStatic='false' isConst='false' >
</field>
<field name='time' fullname='happymagic.model.vo:TransMagicVo/time' type='uint' isStatic='false' isConst='false' >
</field>
<field name='trans_mid' fullname='happymagic.model.vo:TransMagicVo/trans_mid' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='TaskClassVo' fullname='happymagic.model.vo:TaskClassVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\TaskClassVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:BasicVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='TaskClassVo' fullname='happymagic.model.vo:TaskClassVo/TaskClassVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='setData' fullname='happymagic.model.vo:TaskClassVo/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='happymagic.model.vo:BasicVo'>
</method>
<field name='awards' fullname='happymagic.model.vo:TaskClassVo/awards' type='Array' isStatic='false' isConst='false' >
</field>
<field name='content' fullname='happymagic.model.vo:TaskClassVo/content' type='String' isStatic='false' isConst='false' >
</field>
<field name='finishNpcId' fullname='happymagic.model.vo:TaskClassVo/finishNpcId' type='uint' isStatic='false' isConst='false' >
</field>
<field name='finishSceneId' fullname='happymagic.model.vo:TaskClassVo/finishSceneId' type='uint' isStatic='false' isConst='false' >
</field>
<field name='finish_condition' fullname='happymagic.model.vo:TaskClassVo/finish_condition' type='Array' isStatic='false' isConst='false' >
</field>
<field name='icon_class' fullname='happymagic.model.vo:TaskClassVo/icon_class' type='String' isStatic='false' isConst='false' >
</field>
<field name='index' fullname='happymagic.model.vo:TaskClassVo/index' type='int' isStatic='false' isConst='false' >
</field>
<field name='name' fullname='happymagic.model.vo:TaskClassVo/name' type='String' isStatic='false' isConst='false' >
</field>
<field name='npcId' fullname='happymagic.model.vo:TaskClassVo/npcId' type='uint' isStatic='false' isConst='false' >
</field>
<field name='quest_str' fullname='happymagic.model.vo:TaskClassVo/quest_str' type='String' isStatic='false' isConst='false' >
</field>
<field name='sceneId' fullname='happymagic.model.vo:TaskClassVo/sceneId' type='uint' isStatic='false' isConst='false' >
</field>
<field name='t_id' fullname='happymagic.model.vo:TaskClassVo/t_id' type='uint' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='happymagic.model.vo:TaskClassVo/type' type='int' isStatic='false' isConst='false' >
</field>
<classRec name='RoomSizeVo' fullname='happymagic.model.vo:RoomSizeVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\RoomSizeVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:BasicVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='RoomSizeVo' fullname='happymagic.model.vo:RoomSizeVo/RoomSizeVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='crystal' fullname='happymagic.model.vo:RoomSizeVo/crystal' type='uint' isStatic='false' isConst='false' >
</field>
<field name='gem' fullname='happymagic.model.vo:RoomSizeVo/gem' type='uint' isStatic='false' isConst='false' >
</field>
<field name='id' fullname='happymagic.model.vo:RoomSizeVo/id' type='uint' isStatic='false' isConst='false' >
</field>
<field name='needLevel' fullname='happymagic.model.vo:RoomSizeVo/needLevel' type='uint' isStatic='false' isConst='false' >
</field>
<field name='sizeX' fullname='happymagic.model.vo:RoomSizeVo/sizeX' type='uint' isStatic='false' isConst='false' >
</field>
<field name='sizeZ' fullname='happymagic.model.vo:RoomSizeVo/sizeZ' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='AvatarVo' fullname='happymagic.model.vo:AvatarVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\AvatarVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:BasicVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='AvatarVo' fullname='happymagic.model.vo:AvatarVo/AvatarVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='avatarId' fullname='happymagic.model.vo:AvatarVo/avatarId' type='uint' isStatic='false' isConst='false' >
</field>
<field name='className' fullname='happymagic.model.vo:AvatarVo/className' type='String' isStatic='false' isConst='false' >
</field>
<field name='name' fullname='happymagic.model.vo:AvatarVo/name' type='uint' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='happymagic.model.vo:AvatarVo/type' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='DecorClassVo' fullname='happymagic.model.vo:DecorClassVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\DecorClassVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:BasicVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='DecorClassVo' fullname='happymagic.model.vo:DecorClassVo/DecorClassVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='class_name' fullname='happymagic.model.vo:DecorClassVo/class_name' type='String' isStatic='false' isConst='false' >
</field>
<field name='d_id' fullname='happymagic.model.vo:DecorClassVo/d_id' type='uint' isStatic='false' isConst='false' >
</field>
<field name='door_guest_limit' fullname='happymagic.model.vo:DecorClassVo/door_guest_limit' type='int' isStatic='false' isConst='false' >
</field>
<field name='door_refresh_time' fullname='happymagic.model.vo:DecorClassVo/door_refresh_time' type='uint' isStatic='false' isConst='false' >
</field>
<field name='level' fullname='happymagic.model.vo:DecorClassVo/level' type='uint' isStatic='false' isConst='false' defaultValue='1' >
</field>
<field name='magic_type' fullname='happymagic.model.vo:DecorClassVo/magic_type' type='uint' isStatic='false' isConst='false' >
</field>
<field name='max_magic' fullname='happymagic.model.vo:DecorClassVo/max_magic' type='int' isStatic='false' isConst='false' >
</field>
<field name='name' fullname='happymagic.model.vo:DecorClassVo/name' type='String' isStatic='false' isConst='false' >
</field>
<field name='sale_blue' fullname='happymagic.model.vo:DecorClassVo/sale_blue' type='uint' isStatic='false' isConst='false' >
</field>
<field name='sale_green' fullname='happymagic.model.vo:DecorClassVo/sale_green' type='uint' isStatic='false' isConst='false' >
</field>
<field name='sale_red' fullname='happymagic.model.vo:DecorClassVo/sale_red' type='uint' isStatic='false' isConst='false' >
</field>
<field name='size_x' fullname='happymagic.model.vo:DecorClassVo/size_x' type='uint' isStatic='false' isConst='false' >
</field>
<field name='size_y' fullname='happymagic.model.vo:DecorClassVo/size_y' type='uint' isStatic='false' isConst='false' >
</field>
<field name='size_z' fullname='happymagic.model.vo:DecorClassVo/size_z' type='uint' isStatic='false' isConst='false' >
</field>
<field name='type_show' fullname='happymagic.model.vo:DecorClassVo/type_show' type='uint' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='happymagic.model.vo:DecorClassVo/type' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='FeedVo' fullname='happymagic.model.vo:FeedVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\FeedVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:BasicVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='FeedVo' fullname='happymagic.model.vo:FeedVo/FeedVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='setValue' fullname='happymagic.model.vo:FeedVo/setValue' isStatic='false' isFinal='false' isOverride='false'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='happymagic.model.vo:FeedVo'>
</method>
<field name='awards' fullname='happymagic.model.vo:FeedVo/awards' type='Array' isStatic='false' isConst='false' >
</field>
<field name='content' fullname='happymagic.model.vo:FeedVo/content' type='String' isStatic='false' isConst='false' >
</field>
<field name='id' fullname='happymagic.model.vo:FeedVo/id' type='uint' isStatic='false' isConst='false' >
</field>
<field name='value' fullname='happymagic.model.vo:FeedVo/value' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='EnemyClassVo' fullname='happymagic.model.vo:EnemyClassVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\EnemyClassVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:BasicVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='EnemyClassVo' fullname='happymagic.model.vo:EnemyClassVo/EnemyClassVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='setData' fullname='happymagic.model.vo:EnemyClassVo/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='happymagic.model.vo:BasicVo'>
</method>
<field name='avatarId' fullname='happymagic.model.vo:EnemyClassVo/avatarId' type='uint' isStatic='false' isConst='false' >
</field>
<field name='class_name' fullname='happymagic.model.vo:EnemyClassVo/class_name' type='String' isStatic='false' isConst='false' >
</field>
<field name='enemyCid' fullname='happymagic.model.vo:EnemyClassVo/enemyCid' type='uint' isStatic='false' isConst='false' >
</field>
<field name='heal' fullname='happymagic.model.vo:EnemyClassVo/heal' type='uint' isStatic='false' isConst='false' >
</field>
<field name='hp' fullname='happymagic.model.vo:EnemyClassVo/hp' type='int' isStatic='false' isConst='false' >
</field>
<field name='name' fullname='happymagic.model.vo:EnemyClassVo/name' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='LevelInfoVo' fullname='happymagic.model.vo:LevelInfoVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\LevelInfoVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:BasicVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='LevelInfoVo' fullname='happymagic.model.vo:LevelInfoVo/LevelInfoVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='blue' fullname='happymagic.model.vo:LevelInfoVo/blue' type='uint' isStatic='false' isConst='false' >
</field>
<field name='decors' fullname='happymagic.model.vo:LevelInfoVo/decors' type='Array' isStatic='false' isConst='false' >
</field>
<field name='desk_limit' fullname='happymagic.model.vo:LevelInfoVo/desk_limit' type='uint' isStatic='false' isConst='false' >
</field>
<field name='door_limit' fullname='happymagic.model.vo:LevelInfoVo/door_limit' type='uint' isStatic='false' isConst='false' >
</field>
<field name='gem' fullname='happymagic.model.vo:LevelInfoVo/gem' type='uint' isStatic='false' isConst='false' >
</field>
<field name='green' fullname='happymagic.model.vo:LevelInfoVo/green' type='uint' isStatic='false' isConst='false' >
</field>
<field name='items' fullname='happymagic.model.vo:LevelInfoVo/items' type='Array' isStatic='false' isConst='false' >
</field>
<field name='level' fullname='happymagic.model.vo:LevelInfoVo/level' type='uint' isStatic='false' isConst='false' >
</field>
<field name='magic_limit' fullname='happymagic.model.vo:LevelInfoVo/magic_limit' type='uint' isStatic='false' isConst='false' >
</field>
<field name='max_exp' fullname='happymagic.model.vo:LevelInfoVo/max_exp' type='uint' isStatic='false' isConst='false' >
</field>
<field name='red' fullname='happymagic.model.vo:LevelInfoVo/red' type='uint' isStatic='false' isConst='false' >
</field>
<field name='student_limit' fullname='happymagic.model.vo:LevelInfoVo/student_limit' type='uint' isStatic='false' isConst='false' >
</field>
<field name='tile_x_length' fullname='happymagic.model.vo:LevelInfoVo/tile_x_length' type='uint' isStatic='false' isConst='false' >
</field>
<field name='tile_z_length' fullname='happymagic.model.vo:LevelInfoVo/tile_z_length' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='SceneClassVo' fullname='happymagic.model.vo:SceneClassVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\SceneClassVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:BasicVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='SceneClassVo' fullname='happymagic.model.vo:SceneClassVo/SceneClassVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='addActions' fullname='happymagic.model.vo:SceneClassVo/private:addActions' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='getEntrancesNode' fullname='happymagic.model.vo:SceneClassVo/getEntrancesNode' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='setData' fullname='happymagic.model.vo:SceneClassVo/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='happymagic.model.vo:BasicVo'>
</method>
<field name='actions' fullname='happymagic.model.vo:SceneClassVo/actions' type='Array' isStatic='false' isConst='false' >
</field>
<field name='bgSound' fullname='happymagic.model.vo:SceneClassVo/bgSound' type='String' isStatic='false' isConst='false' >
</field>
<field name='bg' fullname='happymagic.model.vo:SceneClassVo/bg' type='String' isStatic='false' isConst='false' >
</field>
<field name='className' fullname='happymagic.model.vo:SceneClassVo/className' type='String' isStatic='false' isConst='false' >
</field>
<field name='content' fullname='happymagic.model.vo:SceneClassVo/content' type='String' isStatic='false' isConst='false' >
</field>
<field name='enemy_xy' fullname='happymagic.model.vo:SceneClassVo/enemy_xy' type='Array' isStatic='false' isConst='false' >
</field>
<field name='entrances' fullname='happymagic.model.vo:SceneClassVo/entrances' type='Array' isStatic='false' isConst='false' >
</field>
<field name='mp' fullname='happymagic.model.vo:SceneClassVo/mp' type='uint' isStatic='false' isConst='false' >
</field>
<field name='name' fullname='happymagic.model.vo:SceneClassVo/name' type='String' isStatic='false' isConst='false' >
</field>
<field name='needs1' fullname='happymagic.model.vo:SceneClassVo/needs1' type='Array' isStatic='false' isConst='false' >
</field>
<field name='needs2' fullname='happymagic.model.vo:SceneClassVo/needs2' type='Array' isStatic='false' isConst='false' >
</field>
<field name='nextMapId' fullname='happymagic.model.vo:SceneClassVo/nextMapId' type='Array' isStatic='false' isConst='false' >
</field>
<field name='nodeStr' fullname='happymagic.model.vo:SceneClassVo/nodeStr' type='String' isStatic='false' isConst='false' >
</field>
<field name='nodes' fullname='happymagic.model.vo:SceneClassVo/nodes' type='Array' isStatic='false' isConst='false' >
</field>
<field name='sceneId' fullname='happymagic.model.vo:SceneClassVo/sceneId' type='uint' isStatic='false' isConst='false' >
</field>
<field name='x' fullname='happymagic.model.vo:SceneClassVo/x' type='int' isStatic='false' isConst='false' >
</field>
<field name='y' fullname='happymagic.model.vo:SceneClassVo/y' type='int' isStatic='false' isConst='false' >
</field>
<classRec name='ItemClassVo' fullname='happymagic.model.vo:ItemClassVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\ItemClassVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:BasicVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 道具卡基础表

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='ItemClassVo' fullname='happymagic.model.vo:ItemClassVo/ItemClassVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='add_mp' fullname='happymagic.model.vo:ItemClassVo/add_mp' type='uint' isStatic='false' isConst='false' >
</field>
<field name='blue' fullname='happymagic.model.vo:ItemClassVo/blue' type='uint' isStatic='false' isConst='false' >
</field>
<field name='class_name' fullname='happymagic.model.vo:ItemClassVo/class_name' type='String' isStatic='false' isConst='false' >
</field>
<field name='content' fullname='happymagic.model.vo:ItemClassVo/content' type='String' isStatic='false' isConst='false' >
</field>
<field name='crystal' fullname='happymagic.model.vo:ItemClassVo/crystal' type='uint' isStatic='false' isConst='false' >
</field>
<field name='gem' fullname='happymagic.model.vo:ItemClassVo/gem' type='uint' isStatic='false' isConst='false' >
</field>
<field name='green' fullname='happymagic.model.vo:ItemClassVo/green' type='uint' isStatic='false' isConst='false' >
</field>
<field name='i_id' fullname='happymagic.model.vo:ItemClassVo/i_id' type='uint' isStatic='false' isConst='false' >
</field>
<field name='name' fullname='happymagic.model.vo:ItemClassVo/name' type='String' isStatic='false' isConst='false' >
</field>
<field name='red' fullname='happymagic.model.vo:ItemClassVo/red' type='uint' isStatic='false' isConst='false' >
</field>
<field name='sale' fullname='happymagic.model.vo:ItemClassVo/sale' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='happymagic.model.vo:ItemClassVo/type' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='NpcVo' fullname='happymagic.model.vo:NpcVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\NpcVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:BasicVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='NpcVo' fullname='happymagic.model.vo:NpcVo/NpcVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='class_name' fullname='happymagic.model.vo:NpcVo/class_name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='avatarId' fullname='happymagic.model.vo:NpcVo/avatarId' type='uint' isStatic='false' isConst='false' >
</field>
<field name='chats' fullname='happymagic.model.vo:NpcVo/chats' type='String' isStatic='false' isConst='false' >
</field>
<field name='name' fullname='happymagic.model.vo:NpcVo/name' type='String' isStatic='false' isConst='false' >
</field>
<field name='npcId' fullname='happymagic.model.vo:NpcVo/npcId' type='uint' isStatic='false' isConst='false' >
</field>
<field name='sceneId' fullname='happymagic.model.vo:NpcVo/sceneId' type='uint' isStatic='false' isConst='false' >
</field>
<field name='x' fullname='happymagic.model.vo:NpcVo/x' type='uint' isStatic='false' isConst='false' >
</field>
<field name='y' fullname='happymagic.model.vo:NpcVo/y' type='uint' isStatic='false' isConst='false' >
</field>
<field name='z' fullname='happymagic.model.vo:NpcVo/z' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='SwitchVo' fullname='happymagic.model.vo:SwitchVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\SwitchVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:BasicVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='SwitchVo' fullname='happymagic.model.vo:SwitchVo/SwitchVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clear' fullname='happymagic.model.vo:SwitchVo/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setValue' fullname='happymagic.model.vo:SwitchVo/setValue' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='happymagic.model.vo:SwitchVo'>
</method>
<method name='canGet' fullname='happymagic.model.vo:SwitchVo/canGet/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<field name='crystals' fullname='happymagic.model.vo:SwitchVo/crystals' type='Object' isStatic='false' isConst='false' >
</field>
<field name='currentPutNum' fullname='happymagic.model.vo:SwitchVo/currentPutNum' type='int' isStatic='false' isConst='false' >
</field>
<field name='switchList' fullname='happymagic.model.vo:SwitchVo/switchList' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='SwitchLevelVo' fullname='happymagic.model.vo:SwitchLevelVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\SwitchLevelVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:BasicVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='SwitchLevelVo' fullname='happymagic.model.vo:SwitchLevelVo/SwitchLevelVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='level' fullname='happymagic.model.vo:SwitchLevelVo/level' type='uint' isStatic='false' isConst='false' >
</field>
<field name='num' fullname='happymagic.model.vo:SwitchLevelVo/num' type='uint' isStatic='false' isConst='false' >
</field>
<field name='price' fullname='happymagic.model.vo:SwitchLevelVo/price' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='DiaryVo' fullname='happymagic.model.vo:DiaryVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\DiaryVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:BasicVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='DiaryVo' fullname='happymagic.model.vo:DiaryVo/DiaryVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='setData' fullname='happymagic.model.vo:DiaryVo/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='happymagic.model.vo:BasicVo'>
</method>
<field name='content' fullname='happymagic.model.vo:DiaryVo/content' type='String' isStatic='false' isConst='false' >
</field>
<field name='createTime' fullname='happymagic.model.vo:DiaryVo/createTime' type='Date' isStatic='false' isConst='false' >
</field>
<field name='icon' fullname='happymagic.model.vo:DiaryVo/icon' type='uint' isStatic='false' isConst='false' >
</field>
<field name='id' fullname='happymagic.model.vo:DiaryVo/id' type='uint' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='happymagic.model.vo:DiaryVo/type' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='ConditionVo' fullname='happymagic.model.vo:ConditionVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\ConditionVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:BasicVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ConditionVo' fullname='happymagic.model.vo:ConditionVo/ConditionVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='isCrystal' fullname='happymagic.model.vo:ConditionVo/isCrystal/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='isGem' fullname='happymagic.model.vo:ConditionVo/isGem/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='isCrystal' fullname='happymagic.model.vo:ConditionVo/isCrystal/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='isGem' fullname='happymagic.model.vo:ConditionVo/isGem/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='currentNum' fullname='happymagic.model.vo:ConditionVo/currentNum' type='uint' isStatic='false' isConst='false' >
</field>
<field name='id' fullname='happymagic.model.vo:ConditionVo/id' type='String' isStatic='false' isConst='false' >
</field>
<field name='num' fullname='happymagic.model.vo:ConditionVo/num' type='uint' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='happymagic.model.vo:ConditionVo/type' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='SwitchRecordVo' fullname='happymagic.model.vo:SwitchRecordVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\SwitchRecordVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:BasicVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='SwitchRecordVo' fullname='happymagic.model.vo:SwitchRecordVo/SwitchRecordVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='setData' fullname='happymagic.model.vo:SwitchRecordVo/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='happymagic.model.vo:BasicVo'>
</method>
<field name='crystalType' fullname='happymagic.model.vo:SwitchRecordVo/crystalType' type='uint' isStatic='false' isConst='false' >
</field>
<field name='num' fullname='happymagic.model.vo:SwitchRecordVo/num' type='uint' isStatic='false' isConst='false' >
</field>
<field name='status' fullname='happymagic.model.vo:SwitchRecordVo/status' type='uint' isStatic='false' isConst='false' >
</field>
<field name='time' fullname='happymagic.model.vo:SwitchRecordVo/time' type='Date' isStatic='false' isConst='false' >
</field>
<field name='uid' fullname='happymagic.model.vo:SwitchRecordVo/uid' type='uint' isStatic='false' isConst='false' >
</field>
<field name='uname' fullname='happymagic.model.vo:SwitchRecordVo/uname' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='TaskVo' fullname='happymagic.model.vo:TaskVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\TaskVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:TaskClassVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='TaskVo' fullname='happymagic.model.vo:TaskVo/TaskVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='setValue' fullname='happymagic.model.vo:TaskVo/setValue' isStatic='false' isFinal='false' isOverride='false'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='happymagic.model.vo:TaskVo'>
</method>
<field name='fc_curNums' fullname='happymagic.model.vo:TaskVo/fc_curNums' type='Array' isStatic='false' isConst='false' >
</field>
<field name='state' fullname='happymagic.model.vo:TaskVo/state' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='DecorVo' fullname='happymagic.model.vo:DecorVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\DecorVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:DecorClassVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='DecorVo' fullname='happymagic.model.vo:DecorVo/DecorVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='add' fullname='happymagic.model.vo:DecorVo/add' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happymagic.model.vo:DecorVo' param_defaults='undefined' result_type='void'>
</method>
<method name='clone' fullname='happymagic.model.vo:DecorVo/clone' isStatic='false' isFinal='false' isOverride='false'  result_type='happymagic.model.vo:DecorVo'>
</method>
<method name='createDefaultObj' fullname='happymagic.model.vo:DecorVo/createDefaultObj' isStatic='false' isFinal='false' isOverride='false'  param_names='$d_id;$x;$z' param_types='int;int;int' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='delNum' fullname='happymagic.model.vo:DecorVo/delNum' isStatic='false' isFinal='false' isOverride='false'  param_names='delnum' param_types='uint' param_defaults='1' result_type='Array'>
</method>
<method name='setClass' fullname='happymagic.model.vo:DecorVo/setClass' isStatic='false' isFinal='false' isOverride='false'  param_names='$decor_class_vo' param_types='happymagic.model.vo:DecorClassVo' param_defaults='undefined' result_type='void'>
</method>
<method name='setValue' fullname='happymagic.model.vo:DecorVo/setValue' isStatic='false' isFinal='false' isOverride='false'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='happymagic.model.vo:DecorVo'>
</method>
<method name='num' fullname='happymagic.model.vo:DecorVo/num/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='num' fullname='happymagic.model.vo:DecorVo/num/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<field name='_num' fullname='happymagic.model.vo:DecorVo/private:_num' type='int' isStatic='false' isConst='false' >
</field>
<field name='bag_type' fullname='happymagic.model.vo:DecorVo/bag_type' type='int' isStatic='false' isConst='false' >
</field>
<field name='door_left_students_num' fullname='happymagic.model.vo:DecorVo/door_left_students_num' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='door_left_time' fullname='happymagic.model.vo:DecorVo/door_left_time' type='int' isStatic='false' isConst='false' defaultValue='5' >
</field>
<field name='id' fullname='happymagic.model.vo:DecorVo/id' type='int' isStatic='false' isConst='false' >
</field>
<field name='ids' fullname='happymagic.model.vo:DecorVo/ids' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='mirror' fullname='happymagic.model.vo:DecorVo/mirror' type='int' isStatic='false' isConst='false' >
</field>
<field name='x' fullname='happymagic.model.vo:DecorVo/x' type='int' isStatic='false' isConst='false' >
</field>
<field name='y' fullname='happymagic.model.vo:DecorVo/y' type='int' isStatic='false' isConst='false' >
</field>
<field name='z' fullname='happymagic.model.vo:DecorVo/z' type='int' isStatic='false' isConst='false' >
</field>
<classRec name='EnemyVo' fullname='happymagic.model.vo:EnemyVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\EnemyVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:EnemyClassVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='EnemyVo' fullname='happymagic.model.vo:EnemyVo/EnemyVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='setValue' fullname='happymagic.model.vo:EnemyVo/setValue' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='happymagic.model.vo:EnemyVo'>
</method>
<field name='curHp' fullname='happymagic.model.vo:EnemyVo/curHp' type='int' isStatic='false' isConst='false' >
</field>
<field name='enemyId' fullname='happymagic.model.vo:EnemyVo/enemyId' type='String' isStatic='false' isConst='false' >
</field>
<field name='x' fullname='happymagic.model.vo:EnemyVo/x' type='Number' isStatic='false' isConst='false' >
</field>
<field name='y' fullname='happymagic.model.vo:EnemyVo/y' type='Number' isStatic='false' isConst='false' >
</field>
<field name='z' fullname='happymagic.model.vo:EnemyVo/z' type='Number' isStatic='false' isConst='false' >
</field>
<classRec name='SceneVo' fullname='happymagic.model.vo:SceneVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\SceneVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:SceneClassVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='SceneVo' fullname='happymagic.model.vo:SceneVo/SceneVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='state' fullname='happymagic.model.vo:SceneVo/state' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='ItemVo' fullname='happymagic.model.vo:ItemVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\vo\ItemVo.as' namespace='happymagic.model.vo' access='public' baseclass='happymagic.model.vo:ItemClassVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ItemVo' fullname='happymagic.model.vo:ItemVo/ItemVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='setValue' fullname='happymagic.model.vo:ItemVo/setValue' isStatic='false' isFinal='false' isOverride='false'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='happymagic.model.vo:ItemVo'>
</method>
<field name='id' fullname='happymagic.model.vo:ItemVo/id' type='uint' isStatic='false' isConst='false' >
</field>
<field name='num' fullname='happymagic.model.vo:ItemVo/num' type='uint' isStatic='false' isConst='false' defaultValue='1' >
</field>
<classRec name='IsoUtils' fullname='com.friendsofed.isometric:IsoUtils' sourcefile='E:\work\happyMagic\src\client\libs\com\friendsofed\isometric\IsoUtils.as' namespace='com.friendsofed.isometric' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='isoToScreen' fullname='com.friendsofed.isometric:IsoUtils/isoToScreen' isStatic='true' isFinal='false' isOverride='false'  param_names='pos' param_types='com.friendsofed.isometric:Point3D' param_defaults='undefined' result_type='flash.geom:Point'>
<description><![CDATA[
		 Converts a 3D point in isometric space to a 2D screen position.
		 ]]></description>
<arg><![CDATA[pos the 3D point.
		 ]]></arg>
</method>
<method name='screenToIso' fullname='com.friendsofed.isometric:IsoUtils/screenToIso' isStatic='true' isFinal='false' isOverride='false'  param_names='point' param_types='flash.geom:Point' param_defaults='undefined' result_type='com.friendsofed.isometric:Point3D'>
<description><![CDATA[
		 Converts a 2D screen position to a 3D point in isometric space, assuming y = 0.
		 ]]></description>
<arg><![CDATA[point the 2D point.
		 ]]></arg>
</method>
<field name='Y_CORRECT' fullname='com.friendsofed.isometric:IsoUtils/Y_CORRECT' type='Number' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<classRec name='Point3D' fullname='com.friendsofed.isometric:Point3D' sourcefile='E:\work\happyMagic\src\client\libs\com\friendsofed\isometric\Point3D.as' namespace='com.friendsofed.isometric' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='Point3D' fullname='com.friendsofed.isometric:Point3D/Point3D' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;z' param_types='Number;Number;Number' param_defaults='0;0;0' result_type='*'>
</method>
<method name='clone' fullname='com.friendsofed.isometric:Point3D/clone' isStatic='false' isFinal='false' isOverride='false'  result_type='com.friendsofed.isometric:Point3D'>
</method>
<method name='toString' fullname='com.friendsofed.isometric:Point3D/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='x' fullname='com.friendsofed.isometric:Point3D/x' type='Number' isStatic='false' isConst='false' >
</field>
<field name='y' fullname='com.friendsofed.isometric:Point3D/y' type='Number' isStatic='false' isConst='false' >
</field>
<field name='z' fullname='com.friendsofed.isometric:Point3D/z' type='Number' isStatic='false' isConst='false' >
</field>
<classRec name='IsoObject' fullname='com.friendsofed.isometric:IsoObject' sourcefile='E:\work\happyMagic\src\client\libs\com\friendsofed\isometric\IsoObject.as' namespace='com.friendsofed.isometric' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
</classRec>
<method name='IsoObject' fullname='com.friendsofed.isometric:IsoObject/IsoObject' isStatic='false' isFinal='false' isOverride='false'  param_names='size;__sprite' param_types='Number;happyfish.scene.iso:IsoSprite' param_defaults='undefined;null' result_type='*'>
</method>
<method name='setXY' fullname='com.friendsofed.isometric:IsoObject/setXY' isStatic='false' isFinal='false' isOverride='false'  param_names='_x;_y' param_types='Number;Number' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='toString' fullname='com.friendsofed.isometric:IsoObject/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[
		 String representation of this object.
		 ]]></description>
</method>
<method name='updataIsoPosition' fullname='com.friendsofed.isometric:IsoObject/private:updataIsoPosition' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 更新位置数据
		 ]]></description>
</method>
<method name='updateScreenPosition' fullname='com.friendsofed.isometric:IsoObject/protected:updateScreenPosition' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Converts current 3d position to a screen position 
		 and places this display object at that position.
		 ]]></description>
</method>
<method name='depth' fullname='com.friendsofed.isometric:IsoObject/depth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
		 Returns the transformed 3D depth of this object.
		 ]]></description>
</method>
<method name='moreDepth' fullname='com.friendsofed.isometric:IsoObject/moreDepth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='physics' fullname='com.friendsofed.isometric:IsoObject/physics/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='positionNodePoint' fullname='com.friendsofed.isometric:IsoObject/positionNodePoint/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Point'>
</method>
<method name='position' fullname='com.friendsofed.isometric:IsoObject/position/get' isStatic='false' isFinal='false' isOverride='false'  result_type='com.friendsofed.isometric:Point3D'>
</method>
<method name='rect' fullname='com.friendsofed.isometric:IsoObject/rect/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Rectangle'>
<description><![CDATA[
		 Returns the square area on the x-z plane that this object takes up.
		 ]]></description>
</method>
<method name='screenX' fullname='com.friendsofed.isometric:IsoObject/screenX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='screenY' fullname='com.friendsofed.isometric:IsoObject/screenY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='size' fullname='com.friendsofed.isometric:IsoObject/size/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
		 Returns the size of this object.
		 ]]></description>
</method>
<method name='vx' fullname='com.friendsofed.isometric:IsoObject/vx/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='vy' fullname='com.friendsofed.isometric:IsoObject/vy/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='vz' fullname='com.friendsofed.isometric:IsoObject/vz/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='walkable' fullname='com.friendsofed.isometric:IsoObject/walkable/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='x' fullname='com.friendsofed.isometric:IsoObject/x/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
</method>
<method name='y' fullname='com.friendsofed.isometric:IsoObject/y/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
</method>
<method name='z' fullname='com.friendsofed.isometric:IsoObject/z/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
</method>
<method name='physics' fullname='com.friendsofed.isometric:IsoObject/physics/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='position' fullname='com.friendsofed.isometric:IsoObject/position/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='com.friendsofed.isometric:Point3D' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Sets / gets the position in 3D space as a Point3D.
		 ]]></description>
</method>
<method name='screenX' fullname='com.friendsofed.isometric:IsoObject/screenX/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='screenY' fullname='com.friendsofed.isometric:IsoObject/screenY/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='vx' fullname='com.friendsofed.isometric:IsoObject/vx/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Sets / gets the velocity on the x axis.
		 ]]></description>
</method>
<method name='vy' fullname='com.friendsofed.isometric:IsoObject/vy/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Sets / gets the velocity on the y axis.
		 ]]></description>
</method>
<method name='vz' fullname='com.friendsofed.isometric:IsoObject/vz/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Sets / gets the velocity on the z axis.
		 ]]></description>
</method>
<method name='walkable' fullname='com.friendsofed.isometric:IsoObject/walkable/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Indicates whether the space occupied by this object can be occupied by another object.
		 ]]></description>
</method>
<method name='x' fullname='com.friendsofed.isometric:IsoObject/x/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Sets / gets the x position in 3D space.
		 ]]></description>
</method>
<method name='y' fullname='com.friendsofed.isometric:IsoObject/y/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Sets / gets the y position in 3D space.
		 ]]></description>
</method>
<method name='z' fullname='com.friendsofed.isometric:IsoObject/z/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Sets / gets the z position in 3D space.
		 ]]></description>
</method>
<field name='Y_CORRECT' fullname='com.friendsofed.isometric:IsoObject/Y_CORRECT' type='Number' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='_physics' fullname='com.friendsofed.isometric:IsoObject/protected:_physics' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='_position' fullname='com.friendsofed.isometric:IsoObject/protected:_position' type='com.friendsofed.isometric:Point3D' isStatic='false' isConst='false' >
</field>
<field name='_size' fullname='com.friendsofed.isometric:IsoObject/protected:_size' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_vx' fullname='com.friendsofed.isometric:IsoObject/protected:_vx' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_vy' fullname='com.friendsofed.isometric:IsoObject/protected:_vy' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_vz' fullname='com.friendsofed.isometric:IsoObject/protected:_vz' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_walkable' fullname='com.friendsofed.isometric:IsoObject/protected:_walkable' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='nodes' fullname='com.friendsofed.isometric:IsoObject/nodes' type='Array' isStatic='false' isConst='false' >
</field>
<field name='sortPriority' fullname='com.friendsofed.isometric:IsoObject/sortPriority' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='sprite' fullname='com.friendsofed.isometric:IsoObject/sprite' type='happyfish.scene.iso:IsoSprite' isStatic='false' isConst='false' >
</field>
<classRec name='DrawnIsoTile' fullname='com.friendsofed.isometric:DrawnIsoTile' sourcefile='E:\work\happyMagic\src\client\libs\com\friendsofed\isometric\DrawnIsoTile.as' namespace='com.friendsofed.isometric' access='public' baseclass='com.friendsofed.isometric:IsoObject' isFinal='false' isDynamic='false' >
</classRec>
<method name='DrawnIsoTile' fullname='com.friendsofed.isometric:DrawnIsoTile/DrawnIsoTile' isStatic='false' isFinal='false' isOverride='false'  param_names='size;color;height' param_types='Number;uint;Number' param_defaults='undefined;undefined;0' result_type='*'>
</method>
<method name='draw' fullname='com.friendsofed.isometric:DrawnIsoTile/protected:draw' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Draws the tile.
		 ]]></description>
</method>
<method name='color' fullname='com.friendsofed.isometric:DrawnIsoTile/color/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='height' fullname='com.friendsofed.isometric:DrawnIsoTile/height/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
</method>
<method name='color' fullname='com.friendsofed.isometric:DrawnIsoTile/color/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Sets / gets the color of this tile.
		 ]]></description>
</method>
<method name='height' fullname='com.friendsofed.isometric:DrawnIsoTile/height/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Sets / gets the height of this object. Not used in this class, but can be used in subclasses.
		 ]]></description>
</method>
<field name='_color' fullname='com.friendsofed.isometric:DrawnIsoTile/protected:_color' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_height' fullname='com.friendsofed.isometric:DrawnIsoTile/protected:_height' type='Number' isStatic='false' isConst='false' >
</field>
<interfaceRec name='ISoundManager' fullname='happyfish.manager.module.interfaces:ISoundManager' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\manager\module\interfaces\ISoundManager.as' namespace='happyfish.manager.module.interfaces' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</interfaceRec>
<method name='playSound' fullname='happyfish.manager.module.interfaces:ISoundManager/happyfish.manager.module.interfaces:ISoundManager:playSound' isStatic='false' isFinal='false' isOverride='false'  param_names='sound' param_types='flash.media:Sound' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='IModule' fullname='happyfish.manager.module.interfaces:IModule' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\manager\module\interfaces\IModule.as' namespace='happyfish.manager.module.interfaces' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</interfaceRec>
<method name='init' fullname='happyfish.manager.module.interfaces:IModule/happyfish.manager.module.interfaces:IModule:init' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='maskbg' fullname='happyfish.manager.module.interfaces:IModule/happyfish.manager.module.interfaces:IModule:maskbg/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:DisplayObject'>
</method>
<method name='name' fullname='happyfish.manager.module.interfaces:IModule/happyfish.manager.module.interfaces:IModule:name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='scaleX' fullname='happyfish.manager.module.interfaces:IModule/happyfish.manager.module.interfaces:IModule:scaleX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='scaleY' fullname='happyfish.manager.module.interfaces:IModule/happyfish.manager.module.interfaces:IModule:scaleY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='state' fullname='happyfish.manager.module.interfaces:IModule/happyfish.manager.module.interfaces:IModule:state/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='view' fullname='happyfish.manager.module.interfaces:IModule/happyfish.manager.module.interfaces:IModule:view/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:MovieClip'>
</method>
<method name='x' fullname='happyfish.manager.module.interfaces:IModule/happyfish.manager.module.interfaces:IModule:x/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='y' fullname='happyfish.manager.module.interfaces:IModule/happyfish.manager.module.interfaces:IModule:y/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='maskbg' fullname='happyfish.manager.module.interfaces:IModule/happyfish.manager.module.interfaces:IModule:maskbg/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='happyfish.manager.module.interfaces:IModule/happyfish.manager.module.interfaces:IModule:name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='scaleX' fullname='happyfish.manager.module.interfaces:IModule/happyfish.manager.module.interfaces:IModule:scaleX/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='scaleY' fullname='happyfish.manager.module.interfaces:IModule/happyfish.manager.module.interfaces:IModule:scaleY/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='state' fullname='happyfish.manager.module.interfaces:IModule/happyfish.manager.module.interfaces:IModule:state/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='x' fullname='happyfish.manager.module.interfaces:IModule/happyfish.manager.module.interfaces:IModule:x/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='y' fullname='happyfish.manager.module.interfaces:IModule/happyfish.manager.module.interfaces:IModule:y/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='IClassManager' fullname='happyfish.manager.module.interfaces:IClassManager' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\manager\module\interfaces\IClassManager.as' namespace='happyfish.manager.module.interfaces' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</interfaceRec>
<method name='getClass' fullname='happyfish.manager.module.interfaces:IClassManager/happyfish.manager.module.interfaces:IClassManager:getClass' isStatic='false' isFinal='false' isOverride='false'  param_names='className' param_types='String' param_defaults='undefined' result_type='Class'>
</method>
<method name='hasClass' fullname='happyfish.manager.module.interfaces:IClassManager/happyfish.manager.module.interfaces:IClassManager:hasClass' isStatic='false' isFinal='false' isOverride='false'  param_names='className' param_types='String' param_defaults='undefined' result_type='Boolean'>
</method>
<classRec name='Node' fullname='happyfish.scene.astar:Node' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\astar\Node.as' namespace='happyfish.scene.astar' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Represents a specific node evaluated as part of a pathfinding algorithm.
	 ]]></description>
</classRec>
<method name='Node' fullname='happyfish.scene.astar:Node/Node' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y' param_types='int;int' param_defaults='0;0' result_type='*'>
</method>
<method name='toString' fullname='happyfish.scene.astar:Node/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='costMultiplier' fullname='happyfish.scene.astar:Node/costMultiplier' type='Number' isStatic='false' isConst='false' defaultValue='1.0' >
</field>
<field name='diyable' fullname='happyfish.scene.astar:Node/diyable' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='f' fullname='happyfish.scene.astar:Node/f' type='Number' isStatic='false' isConst='false' >
</field>
<field name='g' fullname='happyfish.scene.astar:Node/g' type='Number' isStatic='false' isConst='false' >
</field>
<field name='h' fullname='happyfish.scene.astar:Node/h' type='Number' isStatic='false' isConst='false' >
</field>
<field name='parent' fullname='happyfish.scene.astar:Node/parent' type='happyfish.scene.astar:Node' isStatic='false' isConst='false' >
</field>
<field name='walkable' fullname='happyfish.scene.astar:Node/walkable' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='x' fullname='happyfish.scene.astar:Node/x' type='int' isStatic='false' isConst='false' >
</field>
<field name='y' fullname='happyfish.scene.astar:Node/y' type='int' isStatic='false' isConst='false' >
</field>
<classRec name='Grid' fullname='happyfish.scene.astar:Grid' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\astar\Grid.as' namespace='happyfish.scene.astar' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Holds a two-dimensional array of Nodes methods to manipulate them, start node and end node for finding a path.
	 ]]></description>
</classRec>
<method name='Grid' fullname='happyfish.scene.astar:Grid/Grid' isStatic='false' isFinal='false' isOverride='false'  param_names='numCols;numRows' param_types='int;int' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[
		 Constructor.
		 ]]></description>
</method>
<method name='clear' fullname='happyfish.scene.astar:Grid/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='getCustomDiyAbleNode' fullname='happyfish.scene.astar:Grid/getCustomDiyAbleNode' isStatic='false' isFinal='false' isOverride='false'  result_type='happyfish.scene.astar:Node'>
</method>
<method name='getCustomNode' fullname='happyfish.scene.astar:Grid/getCustomNode' isStatic='false' isFinal='false' isOverride='false'  result_type='happyfish.scene.astar:Node'>
</method>
<method name='getCustomWalkAbleNode' fullname='happyfish.scene.astar:Grid/getCustomWalkAbleNode' isStatic='false' isFinal='false' isOverride='false'  result_type='happyfish.scene.astar:Node'>
</method>
<method name='getNode' fullname='happyfish.scene.astar:Grid/getNode' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y' param_types='int;int' param_defaults='undefined;undefined' result_type='happyfish.scene.astar:Node'>
<description><![CDATA[
		 Returns the node at the given coords.
		 ]]></description>
<param><![CDATA[x The x coord.
		 ]]></param>
<param><![CDATA[y The y coord.
		 ]]></param>
</method>
<method name='hasNode' fullname='happyfish.scene.astar:Grid/hasNode' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y' param_types='int;int' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='setDiyable' fullname='happyfish.scene.astar:Grid/setDiyable' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;value' param_types='int;int;Boolean' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 Sets the node at the given coords as walkable or not.
		 ]]></description>
<param><![CDATA[x The x coord.
		 ]]></param>
<param><![CDATA[y The y coord.
		 ]]></param>
</method>
<method name='setEndNode' fullname='happyfish.scene.astar:Grid/setEndNode' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 Sets the node at the given coords as the end node.
		 ]]></description>
<param><![CDATA[x The x coord.
		 ]]></param>
<param><![CDATA[y The y coord.
		 ]]></param>
</method>
<method name='setStartNode' fullname='happyfish.scene.astar:Grid/setStartNode' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 Sets the node at the given coords as the start node.
		 ]]></description>
<param><![CDATA[x The x coord.
		 ]]></param>
<param><![CDATA[y The y coord.
		 ]]></param>
</method>
<method name='setWalkable' fullname='happyfish.scene.astar:Grid/setWalkable' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;value' param_types='int;int;Boolean' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 Sets the node at the given coords as walkable or not.
		 ]]></description>
<param><![CDATA[x The x coord.
		 ]]></param>
<param><![CDATA[y The y coord.
		 ]]></param>
</method>
<method name='endNode' fullname='happyfish.scene.astar:Grid/endNode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='happyfish.scene.astar:Node'>
<description><![CDATA[
		 Returns the end node.
		 ]]></description>
</method>
<method name='numCols' fullname='happyfish.scene.astar:Grid/numCols/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
		 Returns the number of columns in the grid.
		 ]]></description>
</method>
<method name='numRows' fullname='happyfish.scene.astar:Grid/numRows/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
		 Returns the number of rows in the grid.
		 ]]></description>
</method>
<method name='startNode' fullname='happyfish.scene.astar:Grid/startNode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='happyfish.scene.astar:Node'>
<description><![CDATA[
		 Returns the start node.
		 ]]></description>
</method>
<method name='walkAbleList' fullname='happyfish.scene.astar:Grid/walkAbleList/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='walkAbleList' fullname='happyfish.scene.astar:Grid/walkAbleList/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<field name='_diyAbleList' fullname='happyfish.scene.astar:Grid/private:_diyAbleList' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_endNode' fullname='happyfish.scene.astar:Grid/private:_endNode' type='happyfish.scene.astar:Node' isStatic='false' isConst='false' >
</field>
<field name='_nodes' fullname='happyfish.scene.astar:Grid/private:_nodes' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_numCols' fullname='happyfish.scene.astar:Grid/private:_numCols' type='int' isStatic='false' isConst='false' >
</field>
<field name='_numRows' fullname='happyfish.scene.astar:Grid/private:_numRows' type='int' isStatic='false' isConst='false' >
</field>
<field name='_startNode' fullname='happyfish.scene.astar:Grid/private:_startNode' type='happyfish.scene.astar:Node' isStatic='false' isConst='false' >
</field>
<field name='_walkAbleList' fullname='happyfish.scene.astar:Grid/private:_walkAbleList' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='AStar' fullname='happyfish.scene.astar:AStar' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\astar\AStar.as' namespace='happyfish.scene.astar' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='AStar' fullname='happyfish.scene.astar:AStar/AStar' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='buildPath' fullname='happyfish.scene.astar:AStar/private:buildPath' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='diagonal' fullname='happyfish.scene.astar:AStar/private:diagonal' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='happyfish.scene.astar:Node' param_defaults='undefined' result_type='Number'>
</method>
<method name='euclidian' fullname='happyfish.scene.astar:AStar/private:euclidian' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='happyfish.scene.astar:Node' param_defaults='undefined' result_type='Number'>
</method>
<method name='findPath' fullname='happyfish.scene.astar:AStar/findPath' isStatic='false' isFinal='false' isOverride='false'  param_names='grid;mustGo' param_types='happyfish.scene.astar:Grid;Boolean' param_defaults='undefined;false' result_type='Boolean'>
</method>
<method name='isClosed' fullname='happyfish.scene.astar:AStar/private:isClosed' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='happyfish.scene.astar:Node' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='isOpen' fullname='happyfish.scene.astar:AStar/private:isOpen' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='happyfish.scene.astar:Node' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='manhattan' fullname='happyfish.scene.astar:AStar/private:manhattan' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='happyfish.scene.astar:Node' param_defaults='undefined' result_type='Number'>
</method>
<method name='search' fullname='happyfish.scene.astar:AStar/search' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='path' fullname='happyfish.scene.astar:AStar/path/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='visited' fullname='happyfish.scene.astar:AStar/visited/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<field name='_closed' fullname='happyfish.scene.astar:AStar/private:_closed' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_diagCost' fullname='happyfish.scene.astar:AStar/private:_diagCost' type='Number' isStatic='false' isConst='false' defaultValue='1.4142135623730951' >
</field>
<field name='_endNode' fullname='happyfish.scene.astar:AStar/private:_endNode' type='happyfish.scene.astar:Node' isStatic='false' isConst='false' >
</field>
<field name='_grid' fullname='happyfish.scene.astar:AStar/private:_grid' type='happyfish.scene.astar:Grid' isStatic='false' isConst='false' >
</field>
<field name='_heuristic' fullname='happyfish.scene.astar:AStar/private:_heuristic' type='Function' isStatic='false' isConst='false' defaultValue='' >
</field>
<field name='_open' fullname='happyfish.scene.astar:AStar/private:_open' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_path' fullname='happyfish.scene.astar:AStar/private:_path' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_startNode' fullname='happyfish.scene.astar:AStar/private:_startNode' type='happyfish.scene.astar:Node' isStatic='false' isConst='false' >
</field>
<field name='_straightCost' fullname='happyfish.scene.astar:AStar/private:_straightCost' type='Number' isStatic='false' isConst='false' defaultValue='1.0' >
</field>
<classRec name='NodesUtil' fullname='happyfish.scene.astar:NodesUtil' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\astar\NodesUtil.as' namespace='happyfish.scene.astar' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
</classRec>
<method name='NodesUtil' fullname='happyfish.scene.astar:NodesUtil/NodesUtil' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='checkPathThrowNode' fullname='happyfish.scene.astar:NodesUtil/checkPathThrowNode' isStatic='true' isFinal='false' isOverride='false'  param_names='path;node' param_types='Array;happyfish.scene.astar:Node' param_defaults='undefined;undefined' result_type='int'>
<description><![CDATA[

		 判断路径中是否有指定的NODE,如果有返回INDEX,如果没有返回-1

		 ]]></description>
<param><![CDATA[path

		 ]]></param>
<param><![CDATA[node

		 ]]></param>
<return><![CDATA[
		 ]]></return>
</method>
<method name='getAroundNodes' fullname='happyfish.scene.astar:NodesUtil/getAroundNodes' isStatic='true' isFinal='false' isOverride='false'  param_names='nodes;offsetPos' param_types='Array;flash.geom:Point' param_defaults='undefined;null' result_type='Array'>
</method>
<method name='getLine2PointNodes' fullname='happyfish.scene.astar:NodesUtil/private:getLine2PointNodes' isStatic='true' isFinal='false' isOverride='false'  param_names='nodes;lineIndex' param_types='Array;int' param_defaults='undefined;undefined' result_type='Array'>
</method>
<method name='getLineAllNodes' fullname='happyfish.scene.astar:NodesUtil/private:getLineAllNodes' isStatic='true' isFinal='false' isOverride='false'  param_names='nodes;lineIndex' param_types='Array;int' param_defaults='undefined;undefined' result_type='Array'>
</method>
<method name='getNodePosition' fullname='happyfish.scene.astar:NodesUtil/getNodePosition' isStatic='true' isFinal='false' isOverride='false'  param_names='node' param_types='happyfish.scene.astar:Node' param_defaults='undefined' result_type='flash.geom:Point'>
</method>
<method name='getRectNodes' fullname='happyfish.scene.astar:NodesUtil/getRectNodes' isStatic='true' isFinal='false' isOverride='false'  param_names='rect' param_types='flash.geom:Rectangle' param_defaults='undefined' result_type='Array'>
</method>
<method name='isSamePosition' fullname='happyfish.scene.astar:NodesUtil/isSamePosition' isStatic='true' isFinal='false' isOverride='false'  param_names='node1;node2' param_types='happyfish.scene.astar:Node;happyfish.scene.astar:Node' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='ofsetNodes' fullname='happyfish.scene.astar:NodesUtil/private:ofsetNodes' isStatic='true' isFinal='false' isOverride='false'  param_names='nodes;ofsetPos' param_types='Array;flash.geom:Point' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='outArroundNodes' fullname='happyfish.scene.astar:NodesUtil/outArroundNodes' isStatic='true' isFinal='false' isOverride='false'  param_names='nodes' param_types='Array' param_defaults='undefined' result_type='Array'>
</method>
<field name='boxSize' fullname='happyfish.scene.astar:NodesUtil/boxSize' type='Number' isStatic='true' isConst='false' defaultValue='22' >
</field>
<classRec name='BaseItem' fullname='happyfish.scene.world.grid:BaseItem' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\world\grid\BaseItem.as' namespace='happyfish.scene.world.grid' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='BaseItem' fullname='happyfish.scene.world.grid:BaseItem/BaseItem' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$worldState' param_types='Object;happyfish.scene.world:WorldState' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[$data  这个东西的数据

		 ]]></param>
</method>
<method name='remove' fullname='happyfish.scene.world.grid:BaseItem/remove' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='data' fullname='happyfish.scene.world.grid:BaseItem/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<field name='_data' fullname='happyfish.scene.world.grid:BaseItem/protected:_data' type='Object' isStatic='false' isConst='false' >
</field>
<field name='_worldState' fullname='happyfish.scene.world.grid:BaseItem/protected:_worldState' type='happyfish.scene.world:WorldState' isStatic='false' isConst='false' >
</field>
<classRec name='IsoItem' fullname='happyfish.scene.world.grid:IsoItem' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\world\grid\IsoItem.as' namespace='happyfish.scene.world.grid' access='public' baseclass='happyfish.scene.world.grid:BaseItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='IsoItem' fullname='happyfish.scene.world.grid:IsoItem/IsoItem' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$worldState' param_types='Object;happyfish.scene.world:WorldState' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[$data	[Object] class_name,x,z

		 ]]></param>
<param><![CDATA[$worldState

		 ]]></param>
</method>
<method name='addIsoTile' fullname='happyfish.scene.world.grid:IsoItem/addIsoTile' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 当物品被拿起的时候,显示底层的tile框

		 ]]></description>
</method>
<method name='checkPoint' fullname='happyfish.scene.world.grid:IsoItem/checkPoint' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 返回是否碰撞到

		 ]]></description>
<return><![CDATA[
		 ]]></return>
</method>
<method name='commonFinish' fullname='happyfish.scene.world.grid:IsoItem/commonFinish' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='finishMove' fullname='happyfish.scene.world.grid:IsoItem/finishMove' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='hideGlow' fullname='happyfish.scene.world.grid:IsoItem/hideGlow' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 滤镜消除

		 ]]></description>
</method>
<method name='isDoorArea' fullname='happyfish.scene.world.grid:IsoItem/isDoorArea' isStatic='false' isFinal='false' isOverride='false'  param_names='$x;$z' param_types='int;int' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='isWallArea' fullname='happyfish.scene.world.grid:IsoItem/isWallArea' isStatic='false' isFinal='false' isOverride='false'  param_names='$x;$z' param_types='int;int' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='landed' fullname='happyfish.scene.world.grid:IsoItem/landed' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 落地后

		 ]]></description>
</method>
<method name='makeView' fullname='happyfish.scene.world.grid:IsoItem/protected:makeView' isStatic='false' isFinal='false' isOverride='false'  result_type='happyfish.scene.iso:IsoSprite'>
</method>
<method name='move' fullname='happyfish.scene.world.grid:IsoItem/move' isStatic='false' isFinal='false' isOverride='false'  param_names='$grid_pos' param_types='com.friendsofed.isometric:Point3D' param_defaults='undefined' result_type='void'>
</method>
<method name='onClick' fullname='happyfish.scene.world.grid:IsoItem/protected:onClick' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onMouseOut' fullname='happyfish.scene.world.grid:IsoItem/onMouseOut' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='null' result_type='void'>
</method>
<method name='onMouseOverMove' fullname='happyfish.scene.world.grid:IsoItem/protected:onMouseOverMove' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onMouseOver' fullname='happyfish.scene.world.grid:IsoItem/protected:onMouseOver' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='outOfArea' fullname='happyfish.scene.world.grid:IsoItem/outOfArea' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 判断是否在房屋外

		 ]]></description>
<return><![CDATA[
		 ]]></return>
</method>
<method name='positionIsValid' fullname='happyfish.scene.world.grid:IsoItem/positionIsValid' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='removeIsoTile' fullname='happyfish.scene.world.grid:IsoItem/removeIsoTile' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 移除物件自身内的占格格子表现

		 ]]></description>
</method>
<method name='removeIsoUiSprite' fullname='happyfish.scene.world.grid:IsoItem/removeIsoUiSprite' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 移除DIY拖动时用的ui层上的显示对象

		 ]]></description>
</method>
<method name='remove' fullname='happyfish.scene.world.grid:IsoItem/remove' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='resetView' fullname='happyfish.scene.world.grid:IsoItem/resetView' isStatic='false' isFinal='false' isOverride='false'  param_names='className;_callBack' param_types='String;Function' param_defaults='undefined;null' result_type='void'>
</method>
<method name='rorate' fullname='happyfish.scene.world.grid:IsoItem/rorate' isStatic='false' isFinal='false' isOverride='false'  param_names='$flag' param_types='Boolean' param_defaults='true' result_type='void'>
</method>
<method name='setData' fullname='happyfish.scene.world.grid:IsoItem/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='$data' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='showGlow' fullname='happyfish.scene.world.grid:IsoItem/showGlow' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 滤镜

		 ]]></description>
</method>
<method name='view_complete' fullname='happyfish.scene.world.grid:IsoItem/protected:view_complete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='bodyCompleteCallBack' fullname='happyfish.scene.world.grid:IsoItem/bodyCompleteCallBack/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
</method>
<method name='mouseEnabled' fullname='happyfish.scene.world.grid:IsoItem/mouseEnabled/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='view' fullname='happyfish.scene.world.grid:IsoItem/view/get' isStatic='false' isFinal='false' isOverride='false'  result_type='happyfish.scene.iso:IsoSprite'>
</method>
<method name='visible' fullname='happyfish.scene.world.grid:IsoItem/visible/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='alpha' fullname='happyfish.scene.world.grid:IsoItem/alpha/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='bodyCompleteCallBack' fullname='happyfish.scene.world.grid:IsoItem/bodyCompleteCallBack/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='mouseEnabled' fullname='happyfish.scene.world.grid:IsoItem/mouseEnabled/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='visible' fullname='happyfish.scene.world.grid:IsoItem/visible/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='_bodyCompleteCallBack' fullname='happyfish.scene.world.grid:IsoItem/protected:_bodyCompleteCallBack' type='Function' isStatic='false' isConst='false' >
</field>
<field name='_isoTiles' fullname='happyfish.scene.world.grid:IsoItem/protected:_isoTiles' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_view' fullname='happyfish.scene.world.grid:IsoItem/protected:_view' type='happyfish.scene.iso:IsoSprite' isStatic='false' isConst='false' >
</field>
<field name='alive' fullname='happyfish.scene.world.grid:IsoItem/protected:alive' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='asset' fullname='happyfish.scene.world.grid:IsoItem/asset' type='happyfish.cacher:CacheSprite' isStatic='false' isConst='false' >
</field>
<field name='gridPos' fullname='happyfish.scene.world.grid:IsoItem/gridPos' type='com.friendsofed.isometric:Point3D' isStatic='false' isConst='false' >
</field>
<field name='grid_size_x' fullname='happyfish.scene.world.grid:IsoItem/grid_size_x' type='int' isStatic='false' isConst='false' >
</field>
<field name='grid_size_z' fullname='happyfish.scene.world.grid:IsoItem/grid_size_z' type='int' isStatic='false' isConst='false' >
</field>
<field name='isoUiSprite' fullname='happyfish.scene.world.grid:IsoItem/isoUiSprite' type='happyfish.cacher:CacheSprite' isStatic='false' isConst='false' >
</field>
<field name='mirror' fullname='happyfish.scene.world.grid:IsoItem/mirror' type='int' isStatic='false' isConst='false' >
</field>
<field name='newasset' fullname='happyfish.scene.world.grid:IsoItem/private:newasset' type='happyfish.cacher:CacheSprite' isStatic='false' isConst='false' >
</field>
<field name='typeName' fullname='happyfish.scene.world.grid:IsoItem/protected:typeName' type='String' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='happyfish.scene.world.grid:IsoItem/type' type='int' isStatic='false' isConst='false' >
</field>
<field name='x' fullname='happyfish.scene.world.grid:IsoItem/x' type='int' isStatic='false' isConst='false' >
</field>
<field name='y' fullname='happyfish.scene.world.grid:IsoItem/y' type='int' isStatic='false' isConst='false' >
</field>
<field name='z' fullname='happyfish.scene.world.grid:IsoItem/z' type='int' isStatic='false' isConst='false' >
</field>
<classRec name='SolidObject' fullname='happyfish.scene.world.grid:SolidObject' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\world\grid\SolidObject.as' namespace='happyfish.scene.world.grid' access='public' baseclass='happyfish.scene.world.grid:IsoItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='SolidObject' fullname='happyfish.scene.world.grid:SolidObject/SolidObject' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$worldState' param_types='Object;happyfish.scene.world:WorldState' param_defaults='undefined;undefined' result_type='*'>
</method>
<method name='basicPositionValid' fullname='happyfish.scene.world.grid:SolidObject/protected:basicPositionValid' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='bodyComplete' fullname='happyfish.scene.world.grid:SolidObject/protected:bodyComplete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 位置缓存对象完成时调用

		 ]]></description>
</method>
<method name='makeView' fullname='happyfish.scene.world.grid:SolidObject/protected:makeView' isStatic='false' isFinal='false' isOverride='true'  result_type='happyfish.scene.iso:IsoSprite'>
</method>
<method name='onSpriteLoaded' fullname='happyfish.scene.world.grid:SolidObject/private:onSpriteLoaded' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='playAnimation' fullname='happyfish.scene.world.grid:SolidObject/playAnimation' isStatic='false' isFinal='false' isOverride='false'  param_names='$label;isTmp' param_types='String;Boolean' param_defaults='undefined;false' result_type='void'>
<description><![CDATA[

		 让显示对象播放某个标签的动画

		 ]]></description>
<param><![CDATA[$label

		 ]]></param>
<param><![CDATA[isTmp	是否临时更换动画,区别是只更换动画,不修改movieLable,下次可以直接用这个标签回到原来的动画片段

		 ]]></param>
</method>
<method name='positionIsValid' fullname='happyfish.scene.world.grid:SolidObject/positionIsValid' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[

		 验证位置是否可以放置

		 ]]></description>
<return><![CDATA[
		 ]]></return>
</method>
<method name='setData' fullname='happyfish.scene.world.grid:SolidObject/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='$data' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='updateAnimation' fullname='happyfish.scene.world.grid:SolidObject/protected:updateAnimation' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 播放动画

		 ]]></description>
</method>
<method name='layer' fullname='happyfish.scene.world.grid:SolidObject/protected:layer/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='diyState' fullname='happyfish.scene.world.grid:SolidObject/diyState/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 设置是否在DIY状态

		 ]]></description>
</method>
<method name='layer' fullname='happyfish.scene.world.grid:SolidObject/protected:layer/set' isStatic='false' isFinal='false' isOverride='false'  param_names='$layer' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<field name='_diyState' fullname='happyfish.scene.world.grid:SolidObject/protected:_diyState' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_diy' fullname='happyfish.scene.world.grid:SolidObject/private:_diy' type='int' isStatic='false' isConst='false' >
</field>
<field name='_layer' fullname='happyfish.scene.world.grid:SolidObject/private:_layer' type='int' isStatic='false' isConst='false' >
</field>
<field name='mouse_over' fullname='happyfish.scene.world.grid:SolidObject/protected:mouse_over' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='movieLable' fullname='happyfish.scene.world.grid:SolidObject/protected:movieLable' type='String' isStatic='false' isConst='false' >
</field>
<field name='nodes' fullname='happyfish.scene.world.grid:SolidObject/nodes' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='stopLabel' fullname='happyfish.scene.world.grid:SolidObject/stopLabel' type='String' isStatic='false' isConst='false' defaultValue='' >
</field>
<classRec name='Tile' fullname='happyfish.scene.world.grid:Tile' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\world\grid\Tile.as' namespace='happyfish.scene.world.grid' access='public' baseclass='happyfish.scene.world.grid:IsoItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='Tile' fullname='happyfish.scene.world.grid:Tile/Tile' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$worldState;_callBack' param_types='Object;happyfish.scene.world:WorldState;Function' param_defaults='undefined;undefined;null' result_type='*'>
</method>
<method name='bodyComplete' fullname='happyfish.scene.world.grid:Tile/protected:bodyComplete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 位置缓存对象完成时调用

		 ]]></description>
</method>
<method name='finishMove' fullname='happyfish.scene.world.grid:Tile/finishMove' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='makeView' fullname='happyfish.scene.world.grid:Tile/protected:makeView' isStatic='false' isFinal='false' isOverride='true'  result_type='happyfish.scene.iso:IsoSprite'>
</method>
<method name='move' fullname='happyfish.scene.world.grid:Tile/move' isStatic='false' isFinal='false' isOverride='true'  param_names='$grid_pos' param_types='com.friendsofed.isometric:Point3D' param_defaults='undefined' result_type='void'>
</method>
<method name='positionIsValid' fullname='happyfish.scene.world.grid:Tile/positionIsValid' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[

		 判断是否在房屋外

		 ]]></description>
<return><![CDATA[
		 ]]></return>
</method>
<method name='setData' fullname='happyfish.scene.world.grid:Tile/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='$data' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='decorVo' fullname='happyfish.scene.world.grid:Tile/decorVo' type='happymagic.model.vo:DecorVo' isStatic='false' isConst='false' >
</field>
<classRec name='Person' fullname='happyfish.scene.world.grid:Person' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\world\grid\Person.as' namespace='happyfish.scene.world.grid' access='public' baseclass='happyfish.scene.world.grid:IsoItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='Person' fullname='happyfish.scene.world.grid:Person/Person' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$worldState;__callBack' param_types='Object;happyfish.scene.world:WorldState;Function' param_defaults='undefined;undefined;null' result_type='*'>
</method>
<method name='addCommand' fullname='happyfish.scene.world.grid:Person/addCommand' isStatic='false' isFinal='false' isOverride='false'  param_names='$avatar_command' param_types='happymagic.scene.world.control:AvatarCommand' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 添加一条队列命令

		 ]]></description>
<param><![CDATA[$avatar_command

		 ]]></param>
</method>
<method name='faceTowardsSpace' fullname='happyfish.scene.world.grid:Person/faceTowardsSpace' isStatic='false' isFinal='false' isOverride='false'  param_names='$forward;$action' param_types='com.friendsofed.isometric:Point3D;String' param_defaults='undefined;null' result_type='void'>
</method>
<method name='findPath' fullname='happyfish.scene.world.grid:Person/private:findPath' isStatic='false' isFinal='false' isOverride='false'  param_names='mustGo' param_types='Boolean' param_defaults='false' result_type='void'>
<description><![CDATA[

		 Creates an instance of AStar and uses it to find a path.

		 ]]></description>
</method>
<method name='go' fullname='happyfish.scene.world.grid:Person/go' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='null' result_type='void'>
</method>
<method name='makeView' fullname='happyfish.scene.world.grid:Person/protected:makeView' isStatic='false' isFinal='false' isOverride='true'  result_type='happyfish.scene.iso:IsoSprite'>
</method>
<method name='onEnterFrame' fullname='happyfish.scene.world.grid:Person/private:onEnterFrame' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Finds the next node on the path and eases to it.

		 ]]></description>
</method>
<method name='performCommand' fullname='happyfish.scene.world.grid:Person/performCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 执行一条队列命令

		 ]]></description>
</method>
<method name='playAnimation' fullname='happyfish.scene.world.grid:Person/playAnimation' isStatic='false' isFinal='false' isOverride='false'  param_names='$prefix' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='reachedGoal' fullname='happyfish.scene.world.grid:Person/protected:reachedGoal' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 下一条command

		 ]]></description>
</method>
<method name='removeMood' fullname='happyfish.scene.world.grid:Person/removeMood' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='remove' fullname='happyfish.scene.world.grid:Person/remove' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='setDirection' fullname='happyfish.scene.world.grid:Person/setDirection' isStatic='false' isFinal='false' isOverride='false'  param_names='dx;dy' param_types='Number;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 取得行走方向，水平向右为0，顺时针旋转

		 (注意：在tile的宽=2时，右下 左下 左上 右上并非是45度)

		 0 -- 右		0度

		 1 -- 右下		45度

		 2 -- 下		90度

		 3 -- 左下		135度

		 4 -- 左		180度

		 5 -- 左上		-135度

		 6 -- 上		-90度

		 7 -- 右上		-45度

		 ]]></description>
</method>
<method name='setGoal' fullname='happyfish.scene.world.grid:Person/setGoal' isStatic='false' isFinal='false' isOverride='false'  param_names='target;mustGo' param_types='com.friendsofed.isometric:Point3D;Boolean' param_defaults='undefined;false' result_type='void'>
<description><![CDATA[

		 设置目标

		 ]]></description>
<param><![CDATA[target

		 ]]></param>
</method>
<method name='shiftCommand' fullname='happyfish.scene.world.grid:Person/shiftCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 移除一条队列命令

		 ]]></description>
</method>
<method name='showMood' fullname='happyfish.scene.world.grid:Person/showMood' isStatic='false' isFinal='false' isOverride='false'  param_names='iconClass' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='showName' fullname='happyfish.scene.world.grid:Person/showName' isStatic='false' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='stopAnimation' fullname='happyfish.scene.world.grid:Person/stopAnimation' isStatic='false' isFinal='false' isOverride='false'  param_names='$prefix' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='view_complete' fullname='happyfish.scene.world.grid:Person/protected:view_complete' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='free' fullname='happyfish.scene.world.grid:Person/free/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='layer' fullname='happyfish.scene.world.grid:Person/protected:layer/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='path' fullname='happyfish.scene.world.grid:Person/path/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='free' fullname='happyfish.scene.world.grid:Person/free/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='layer' fullname='happyfish.scene.world.grid:Person/protected:layer/set' isStatic='false' isFinal='false' isOverride='false'  param_names='$layer' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<field name='DOWN' fullname='happyfish.scene.world.grid:Person/private:DOWN' type='String' isStatic='true' isConst='true' defaultValue='down' >
</field>
<field name='LEFT' fullname='happyfish.scene.world.grid:Person/private:LEFT' type='String' isStatic='true' isConst='true' defaultValue='left' >
</field>
<field name='MAGIC' fullname='happyfish.scene.world.grid:Person/protected:MAGIC' type='String' isStatic='true' isConst='true' defaultValue='magic' >
</field>
<field name='MOVE' fullname='happyfish.scene.world.grid:Person/protected:MOVE' type='String' isStatic='true' isConst='true' defaultValue='move' >
</field>
<field name='RIGHT' fullname='happyfish.scene.world.grid:Person/private:RIGHT' type='String' isStatic='true' isConst='true' defaultValue='right' >
</field>
<field name='UP' fullname='happyfish.scene.world.grid:Person/private:UP' type='String' isStatic='true' isConst='true' defaultValue='up' >
</field>
<field name='_cellSize' fullname='happyfish.scene.world.grid:Person/private:_cellSize' type='int' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_curDir' fullname='happyfish.scene.world.grid:Person/private:_curDir' type='String' isStatic='false' isConst='false' defaultValue='down' >
</field>
<field name='_drawFrame' fullname='happyfish.scene.world.grid:Person/_drawFrame' type='uint' isStatic='false' isConst='false' defaultValue='2' >
</field>
<field name='_free' fullname='happyfish.scene.world.grid:Person/private:_free' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='_grid' fullname='happyfish.scene.world.grid:Person/private:_grid' type='happyfish.scene.astar:Grid' isStatic='false' isConst='false' >
</field>
<field name='_index' fullname='happyfish.scene.world.grid:Person/private:_index' type='int' isStatic='false' isConst='false' >
</field>
<field name='_layer' fullname='happyfish.scene.world.grid:Person/private:_layer' type='int' isStatic='false' isConst='false' >
</field>
<field name='_path' fullname='happyfish.scene.world.grid:Person/private:_path' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_player' fullname='happyfish.scene.world.grid:Person/private:_player' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='_speed' fullname='happyfish.scene.world.grid:Person/_speed' type='Number' isStatic='false' isConst='false' defaultValue='4' >
</field>
<field name='_worldView' fullname='happyfish.scene.world.grid:Person/private:_worldView' type='happyfish.scene.world:WorldView' isStatic='false' isConst='false' >
</field>
<field name='bubbleUI' fullname='happyfish.scene.world.grid:Person/protected:bubbleUI' type='happymagic.display.view.ui:PersonPaoView' isStatic='false' isConst='false' >
</field>
<field name='commandQueue' fullname='happyfish.scene.world.grid:Person/protected:commandQueue' type='Array' isStatic='false' isConst='false' >
</field>
<field name='moviePrefix' fullname='happyfish.scene.world.grid:Person/private:moviePrefix' type='String' isStatic='false' isConst='false' >
</field>
<field name='nameTxt' fullname='happyfish.scene.world.grid:Person/private:nameTxt' type='flash.text:TextField' isStatic='false' isConst='false' >
</field>
<field name='targetPoint' fullname='happyfish.scene.world.grid:Person/protected:targetPoint' type='com.friendsofed.isometric:Point3D' isStatic='false' isConst='false' >
</field>
<classRec name='Wall' fullname='happyfish.scene.world.grid:Wall' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\world\grid\Wall.as' namespace='happyfish.scene.world.grid' access='public' baseclass='happyfish.scene.world.grid:SolidObject' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='Wall' fullname='happyfish.scene.world.grid:Wall/Wall' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$worldState;__callBack' param_types='Object;happyfish.scene.world:WorldState;Function' param_defaults='undefined;undefined;null' result_type='*'>
</method>
<method name='bodyComplete' fullname='happyfish.scene.world.grid:Wall/protected:bodyComplete' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='cutBitmap' fullname='happyfish.scene.world.grid:Wall/private:cutBitmap' isStatic='false' isFinal='false' isOverride='false'  param_names='souce;souceBmd;cutTarget;cutBmd' param_types='flash.display:DisplayObject;flash.display:BitmapData;flash.display:DisplayObject;flash.display:BitmapData' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
</method>
<method name='cutDoor' fullname='happyfish.scene.world.grid:Wall/cutDoor' isStatic='false' isFinal='false' isOverride='false'  param_names='doorMap' param_types='happyfish.cacher.bitmapMc.display:BitmapMovieMc' param_defaults='undefined' result_type='void'>
</method>
<method name='finishMove' fullname='happyfish.scene.world.grid:Wall/finishMove' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='makeView' fullname='happyfish.scene.world.grid:Wall/protected:makeView' isStatic='false' isFinal='false' isOverride='true'  result_type='happyfish.scene.iso:IsoSprite'>
</method>
<method name='move' fullname='happyfish.scene.world.grid:Wall/move' isStatic='false' isFinal='false' isOverride='true'  param_names='$grid_pos' param_types='com.friendsofed.isometric:Point3D' param_defaults='undefined' result_type='void'>
</method>
<method name='positionIsValid' fullname='happyfish.scene.world.grid:Wall/positionIsValid' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
</method>
<method name='remove' fullname='happyfish.scene.world.grid:Wall/remove' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='resetWallView' fullname='happyfish.scene.world.grid:Wall/resetWallView' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 重设墙的显示

		 ]]></description>
</method>
<method name='setMirror' fullname='happyfish.scene.world.grid:Wall/setMirror' isStatic='false' isFinal='false' isOverride='false'  param_names='$x' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 镜像处理

		 ]]></description>
</method>
<method name='view_complete' fullname='happyfish.scene.world.grid:Wall/protected:view_complete' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='layer' fullname='happyfish.scene.world.grid:Wall/protected:layer/get' isStatic='false' isFinal='false' isOverride='true'  result_type='int'>
<description><![CDATA[

		 重写,设置层

		 ]]></description>
</method>
<field name='decorVo' fullname='happyfish.scene.world.grid:Wall/decorVo' type='happymagic.model.vo:DecorVo' isStatic='false' isConst='false' >
</field>
<classRec name='DoorStateControl' fullname='happymagic.scene.world.control:DoorStateControl' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\control\DoorStateControl.as' namespace='happymagic.scene.world.control' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='DoorStateControl' fullname='happymagic.scene.world.control:DoorStateControl/DoorStateControl' isStatic='false' isFinal='false' isOverride='false'  param_names='__state' param_types='happyfish.scene.world:WorldState' param_defaults='undefined' result_type='*'>
</method>
<method name='addPerson' fullname='happymagic.scene.world.control:DoorStateControl/addPerson' isStatic='false' isFinal='false' isOverride='false'  param_names='person' param_types='happyfish.scene.world.grid:Person' param_defaults='undefined' result_type='void'>
</method>
<method name='closeDoor' fullname='happymagic.scene.world.control:DoorStateControl/closeDoor' isStatic='false' isFinal='false' isOverride='false'  param_names='door' param_types='happymagic.scene.world.grid.item:Door' param_defaults='undefined' result_type='void'>
</method>
<method name='getAllDoorNodes' fullname='happymagic.scene.world.control:DoorStateControl/getAllDoorNodes' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 整理获取当前场景内所有的门

		 ]]></description>
</method>
<method name='openDoor' fullname='happymagic.scene.world.control:DoorStateControl/private:openDoor' isStatic='false' isFinal='false' isOverride='false'  param_names='door' param_types='happymagic.scene.world.grid.item:Door' param_defaults='undefined' result_type='void'>
</method>
<method name='removePerson' fullname='happymagic.scene.world.control:DoorStateControl/removePerson' isStatic='false' isFinal='false' isOverride='false'  param_names='person' param_types='happyfish.scene.world.grid:Person' param_defaults='undefined' result_type='void'>
</method>
<field name='_state' fullname='happymagic.scene.world.control:DoorStateControl/private:_state' type='happyfish.scene.world:WorldState' isStatic='false' isConst='false' >
</field>
<field name='checkDooring' fullname='happymagic.scene.world.control:DoorStateControl/private:checkDooring' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='disableList' fullname='happymagic.scene.world.control:DoorStateControl/private:disableList' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='doorArr' fullname='happymagic.scene.world.control:DoorStateControl/private:doorArr' type='Array' isStatic='false' isConst='false' >
</field>
<field name='doorNodes' fullname='happymagic.scene.world.control:DoorStateControl/private:doorNodes' type='Object' isStatic='false' isConst='false' >
</field>
<field name='openTimes' fullname='happymagic.scene.world.control:DoorStateControl/private:openTimes' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='FriendsHome' fullname='happymagic.scene.world.control:FriendsHome' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\control\FriendsHome.as' namespace='happymagic.scene.world.control' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='FriendsHome' fullname='happymagic.scene.world.control:FriendsHome/FriendsHome' isStatic='false' isFinal='false' isOverride='false'  param_names='$uid' param_types='int' param_defaults='undefined' result_type='*'>
</method>
<method name='init' fullname='happymagic.scene.world.control:FriendsHome/init' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='loadCompleted' fullname='happymagic.scene.world.control:FriendsHome/private:loadCompleted' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<field name='single' fullname='happymagic.scene.world.control:FriendsHome/private:single' type='happymagic.scene.world.control:FriendsHome' isStatic='true' isConst='false' >
</field>
<field name='uid' fullname='happymagic.scene.world.control:FriendsHome/private:uid' type='int' isStatic='false' isConst='false' >
</field>
<classRec name='AvatarCommand' fullname='happymagic.scene.world.control:AvatarCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\control\AvatarCommand.as' namespace='happymagic.scene.world.control' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='AvatarCommand' fullname='happymagic.scene.world.control:AvatarCommand/AvatarCommand' isStatic='false' isFinal='false' isOverride='false'  param_names='$destination;$func;$fiddleTowards;$fiddleDuration;$fiddleAnimation;$end_func;$type;_mustGo;_callbackParams' param_types='com.friendsofed.isometric:Point3D;Function;com.friendsofed.isometric:Point3D;Number;String;Function;String;Boolean;Array' param_defaults='undefined;null;null;0;null;null;;false;null' result_type='*'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[$destination	目标位置

		 ]]></param>
<param><![CDATA[$func	完成后的回调方法

		 ]]></param>
<param><![CDATA[$fiddleTowards	到达后人物朝向位置

		 ]]></param>
<param><![CDATA[$fiddleDuration	到达后表现动画时间

		 ]]></param>
<param><![CDATA[$fiddleAnimation	动画标签

		 ]]></param>
<param><![CDATA[$end_func		最后动画表现完成后回调方法

		 ]]></param>
</method>
<method name='doIt' fullname='happymagic.scene.world.control:AvatarCommand/doIt' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 开始队列处理

		 ]]></description>
</method>
<method name='fiddleDoIt' fullname='happymagic.scene.world.control:AvatarCommand/fiddleDoIt' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='callbackParams' fullname='happymagic.scene.world.control:AvatarCommand/private:callbackParams' type='Array' isStatic='false' isConst='false' >
</field>
<field name='callback' fullname='happymagic.scene.world.control:AvatarCommand/private:callback' type='Function' isStatic='false' isConst='false' >
</field>
<field name='destination' fullname='happymagic.scene.world.control:AvatarCommand/destination' type='com.friendsofed.isometric:Point3D' isStatic='false' isConst='false' >
</field>
<field name='fiddleAnimation' fullname='happymagic.scene.world.control:AvatarCommand/fiddleAnimation' type='String' isStatic='false' isConst='false' >
</field>
<field name='fiddleCallback' fullname='happymagic.scene.world.control:AvatarCommand/fiddleCallback' type='Function' isStatic='false' isConst='false' >
</field>
<field name='fiddleDuration' fullname='happymagic.scene.world.control:AvatarCommand/fiddleDuration' type='Number' isStatic='false' isConst='false' >
</field>
<field name='fiddleTowards' fullname='happymagic.scene.world.control:AvatarCommand/fiddleTowards' type='com.friendsofed.isometric:Point3D' isStatic='false' isConst='false' >
</field>
<field name='mustGo' fullname='happymagic.scene.world.control:AvatarCommand/mustGo' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='happymagic.scene.world.control:AvatarCommand/type' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='MouseMagicAction' fullname='happymagic.scene.world.control:MouseMagicAction' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\control\MouseMagicAction.as' namespace='happymagic.scene.world.control' access='public' baseclass='happyfish.scene.world.control:MouseCursorAction' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='MouseMagicAction' fullname='happymagic.scene.world.control:MouseMagicAction/MouseMagicAction' isStatic='false' isFinal='false' isOverride='false'  param_names='$state;$stack_flg' param_types='happyfish.scene.world:WorldState;Boolean' param_defaults='undefined;false' result_type='*'>
</method>
<method name='onBackgroundClick' fullname='happymagic.scene.world.control:MouseMagicAction/onBackgroundClick' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDecorClick' fullname='happymagic.scene.world.control:MouseMagicAction/onDecorClick' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDecorOut' fullname='happymagic.scene.world.control:MouseMagicAction/onDecorOut' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDecorOver' fullname='happymagic.scene.world.control:MouseMagicAction/onDecorOver' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDeskClick' fullname='happymagic.scene.world.control:MouseMagicAction/onDeskClick' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDeskOut' fullname='happymagic.scene.world.control:MouseMagicAction/onDeskOut' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDeskOver' fullname='happymagic.scene.world.control:MouseMagicAction/onDeskOver' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDoorClick' fullname='happymagic.scene.world.control:MouseMagicAction/onDoorClick' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onEnemyClick' fullname='happymagic.scene.world.control:MouseMagicAction/onEnemyClick' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onMassesClick' fullname='happymagic.scene.world.control:MouseMagicAction/onMassesClick' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onNpcClick' fullname='happymagic.scene.world.control:MouseMagicAction/onNpcClick' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onNpcOut' fullname='happymagic.scene.world.control:MouseMagicAction/onNpcOut' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onNpcOver' fullname='happymagic.scene.world.control:MouseMagicAction/onNpcOver' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onPlayerClick' fullname='happymagic.scene.world.control:MouseMagicAction/onPlayerClick' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onPlayerOut' fullname='happymagic.scene.world.control:MouseMagicAction/onPlayerOut' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onPlayerOver' fullname='happymagic.scene.world.control:MouseMagicAction/onPlayerOver' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onStudentClick' fullname='happymagic.scene.world.control:MouseMagicAction/onStudentClick' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onStudentOut' fullname='happymagic.scene.world.control:MouseMagicAction/onStudentOut' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onStudentOver' fullname='happymagic.scene.world.control:MouseMagicAction/onStudentOver' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onWallDecorClick' fullname='happymagic.scene.world.control:MouseMagicAction/onWallDecorClick' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onWallDecorOut' fullname='happymagic.scene.world.control:MouseMagicAction/onWallDecorOut' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onWallDecorOver' fullname='happymagic.scene.world.control:MouseMagicAction/onWallDecorOver' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='recordBagChangeData' fullname='happymagic.scene.world.control:MouseMagicAction/protected:recordBagChangeData' isStatic='false' isFinal='false' isOverride='false'  param_names='$$data;$is_add' param_types='Object;Boolean' param_defaults='undefined;true' result_type='void'>
<description><![CDATA[

		 记录有DIY道具变更要放入背包

		 ]]></description>
<param><![CDATA[$$data	要放入背包的装饰物

		 ]]></param>
<param><![CDATA[$is_add	是否增加道具到场景上

		 ]]></param>
</method>
<method name='recordChangeData' fullname='happymagic.scene.world.control:MouseMagicAction/protected:recordChangeData' isStatic='false' isFinal='false' isOverride='false'  param_names='$isoItem' param_types='happyfish.scene.world.grid:IsoItem' param_defaults='undefined' result_type='void'>
</method>
<field name='skipBackgroundClick' fullname='happymagic.scene.world.control:MouseMagicAction/protected:skipBackgroundClick' type='Boolean' isStatic='false' isConst='false' >
</field>
<classRec name='MouseDefaultAction' fullname='happymagic.scene.world.control:MouseDefaultAction' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\control\MouseDefaultAction.as' namespace='happymagic.scene.world.control' access='public' baseclass='happymagic.scene.world.control:MouseMagicAction' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='MouseDefaultAction' fullname='happymagic.scene.world.control:MouseDefaultAction/MouseDefaultAction' isStatic='false' isFinal='false' isOverride='false'  param_names='$state;$stack_flg' param_types='happyfish.scene.world:WorldState;Boolean' param_defaults='undefined;false' result_type='*'>
</method>
<method name='onAwardItemClick' fullname='happymagic.scene.world.control:MouseDefaultAction/onAwardItemClick' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onAwardItemOut' fullname='happymagic.scene.world.control:MouseDefaultAction/onAwardItemOut' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onBackgroundClick' fullname='happymagic.scene.world.control:MouseDefaultAction/onBackgroundClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDecorClick' fullname='happymagic.scene.world.control:MouseDefaultAction/onDecorClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDecorOut' fullname='happymagic.scene.world.control:MouseDefaultAction/onDecorOut' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDecorOver' fullname='happymagic.scene.world.control:MouseDefaultAction/onDecorOver' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDeskClick' fullname='happymagic.scene.world.control:MouseDefaultAction/onDeskClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 点击课桌

		 ]]></description>
<param><![CDATA[event

		 ]]></param>
</method>
<method name='onDeskOut' fullname='happymagic.scene.world.control:MouseDefaultAction/onDeskOut' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDeskOver' fullname='happymagic.scene.world.control:MouseDefaultAction/onDeskOver' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDoorClick' fullname='happymagic.scene.world.control:MouseDefaultAction/onDoorClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 点击门

		 ]]></description>
<param><![CDATA[event

		 ]]></param>
</method>
<method name='onEnemyClick' fullname='happymagic.scene.world.control:MouseDefaultAction/onEnemyClick' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onMassesClick' fullname='happymagic.scene.world.control:MouseDefaultAction/onMassesClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onNpcClick' fullname='happymagic.scene.world.control:MouseDefaultAction/onNpcClick' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onNpcOut' fullname='happymagic.scene.world.control:MouseDefaultAction/onNpcOut' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onNpcOver' fullname='happymagic.scene.world.control:MouseDefaultAction/onNpcOver' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onRoomUpItemClick' fullname='happymagic.scene.world.control:MouseDefaultAction/onRoomUpItemClick' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onRoomUpItemOut' fullname='happymagic.scene.world.control:MouseDefaultAction/onRoomUpItemOut' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onRoomUpItemOver' fullname='happymagic.scene.world.control:MouseDefaultAction/onRoomUpItemOver' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onStudentClick' fullname='happymagic.scene.world.control:MouseDefaultAction/onStudentClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 点击学生

		 ]]></description>
<param><![CDATA[event

		 ]]></param>
</method>
<method name='onStudentOut' fullname='happymagic.scene.world.control:MouseDefaultAction/onStudentOut' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 学生鼠标out事件

		 ]]></description>
<param><![CDATA[event

		 ]]></param>
</method>
<method name='onStudentOver' fullname='happymagic.scene.world.control:MouseDefaultAction/onStudentOver' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 鼠标over学生

		 ]]></description>
<param><![CDATA[event

		 ]]></param>
</method>
<method name='onWallDecorOut' fullname='happymagic.scene.world.control:MouseDefaultAction/onWallDecorOut' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 墙上道具out事件

		 ]]></description>
<param><![CDATA[event

		 ]]></param>
</method>
<method name='onWallDecorOver' fullname='happymagic.scene.world.control:MouseDefaultAction/onWallDecorOver' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 墙上道具over事件

		 ]]></description>
<param><![CDATA[event

		 ]]></param>
</method>
<classRec name='FriendHomeAction' fullname='happymagic.scene.world.control:FriendHomeAction' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\control\FriendHomeAction.as' namespace='happymagic.scene.world.control' access='public' baseclass='happymagic.scene.world.control:MouseMagicAction' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='FriendHomeAction' fullname='happymagic.scene.world.control:FriendHomeAction/FriendHomeAction' isStatic='false' isFinal='false' isOverride='false'  param_names='$state' param_types='happyfish.scene.world:WorldState' param_defaults='undefined' result_type='*'>
</method>
<method name='onBackgroundClick' fullname='happymagic.scene.world.control:FriendHomeAction/onBackgroundClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDeskClick' fullname='happymagic.scene.world.control:FriendHomeAction/onDeskClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 点击课桌

		 ]]></description>
<param><![CDATA[event

		 ]]></param>
</method>
<method name='onStudentClick' fullname='happymagic.scene.world.control:FriendHomeAction/onStudentClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 点击学生

		 ]]></description>
<param><![CDATA[event

		 ]]></param>
</method>
<method name='onStudentOut' fullname='happymagic.scene.world.control:FriendHomeAction/onStudentOut' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 学生鼠标out事件

		 ]]></description>
<param><![CDATA[event

		 ]]></param>
</method>
<method name='onStudentOver' fullname='happymagic.scene.world.control:FriendHomeAction/onStudentOver' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 鼠标over学生

		 ]]></description>
<param><![CDATA[event

		 ]]></param>
</method>
<method name='onWallDecorOut' fullname='happymagic.scene.world.control:FriendHomeAction/onWallDecorOut' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 墙上道具out事件

		 ]]></description>
<param><![CDATA[event

		 ]]></param>
</method>
<method name='onWallDecorOver' fullname='happymagic.scene.world.control:FriendHomeAction/onWallDecorOver' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 墙上道具over事件

		 ]]></description>
<param><![CDATA[event

		 ]]></param>
</method>
<classRec name='MouseEditAction' fullname='happymagic.scene.world.control:MouseEditAction' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\control\MouseEditAction.as' namespace='happymagic.scene.world.control' access='public' baseclass='happymagic.scene.world.control:MouseMagicAction' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='MouseEditAction' fullname='happymagic.scene.world.control:MouseEditAction/MouseEditAction' isStatic='false' isFinal='false' isOverride='false'  param_names='$state' param_types='happyfish.scene.world:WorldState' param_defaults='undefined' result_type='*'>
</method>
<method name='onBackgroundClick' fullname='happymagic.scene.world.control:MouseEditAction/onBackgroundClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDecorClick' fullname='happymagic.scene.world.control:MouseEditAction/onDecorClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDecorOut' fullname='happymagic.scene.world.control:MouseEditAction/onDecorOut' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDecorOver' fullname='happymagic.scene.world.control:MouseEditAction/onDecorOver' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDeskClick' fullname='happymagic.scene.world.control:MouseEditAction/onDeskClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDeskOut' fullname='happymagic.scene.world.control:MouseEditAction/onDeskOut' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDeskOver' fullname='happymagic.scene.world.control:MouseEditAction/onDeskOver' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onDoorClick' fullname='happymagic.scene.world.control:MouseEditAction/onDoorClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onWallDecorClick' fullname='happymagic.scene.world.control:MouseEditAction/onWallDecorClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onWallDecorOut' fullname='happymagic.scene.world.control:MouseEditAction/onWallDecorOut' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onWallDecorOver' fullname='happymagic.scene.world.control:MouseEditAction/onWallDecorOver' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='setItem' fullname='happymagic.scene.world.control:MouseEditAction/setItem' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happyfish.scene.world.grid:IsoItem' param_defaults='undefined' result_type='void'>
</method>
<field name='item' fullname='happymagic.scene.world.control:MouseEditAction/private:item' type='happyfish.scene.world.grid:IsoItem' isStatic='false' isConst='false' >
</field>
<classRec name='MouseStudentAction' fullname='happymagic.scene.world.control:MouseStudentAction' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\control\MouseStudentAction.as' namespace='happymagic.scene.world.control' access='public' baseclass='happymagic.scene.world.control:MouseMagicAction' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 学生魔法学习时的逻辑

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='MouseStudentAction' fullname='happymagic.scene.world.control:MouseStudentAction/MouseStudentAction' isStatic='false' isFinal='false' isOverride='false'  param_names='$state;$item_render;$stack_flg' param_types='happyfish.scene.world:WorldState;happyfish.display.view:ItemRender;Boolean' param_defaults='undefined;undefined;false' result_type='*'>
</method>
<method name='liuchenComplete' fullname='happymagic.scene.world.control:MouseStudentAction/private:liuchenComplete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='onStudentClick' fullname='happymagic.scene.world.control:MouseStudentAction/onStudentClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 点击学生

		 ]]></description>
<param><![CDATA[event

		 ]]></param>
</method>
<method name='onStudentOut' fullname='happymagic.scene.world.control:MouseStudentAction/onStudentOut' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onStudentOver' fullname='happymagic.scene.world.control:MouseStudentAction/onStudentOver' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='remove' fullname='happymagic.scene.world.control:MouseStudentAction/remove' isStatic='false' isFinal='false' isOverride='true'  param_names='$stack_flg' param_types='Boolean' param_defaults='true' result_type='void'>
</method>
<method name='requestTeach' fullname='happymagic.scene.world.control:MouseStudentAction/private:requestTeach' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setMagic' fullname='happymagic.scene.world.control:MouseStudentAction/setMagic' isStatic='false' isFinal='false' isOverride='false'  param_names='mIcon' param_types='flash.display:Sprite' param_defaults='undefined' result_type='void'>
</method>
<method name='studentShow' fullname='happymagic.scene.world.control:MouseStudentAction/private:studentShow' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<field name='itemRender' fullname='happymagic.scene.world.control:MouseStudentAction/protected:itemRender' type='happyfish.display.view:ItemRender' isStatic='false' isConst='false' >
</field>
<field name='remove_flg' fullname='happymagic.scene.world.control:MouseStudentAction/private:remove_flg' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='student' fullname='happymagic.scene.world.control:MouseStudentAction/private:student' type='happymagic.scene.world.grid.person:Student' isStatic='false' isConst='false' >
</field>
<classRec name='MouseCarryIsoAction' fullname='happymagic.scene.world.control:MouseCarryIsoAction' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\control\MouseCarryIsoAction.as' namespace='happymagic.scene.world.control' access='public' baseclass='happymagic.scene.world.control:MouseMagicAction' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 移动场景中已有的物品

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='MouseCarryIsoAction' fullname='happymagic.scene.world.control:MouseCarryIsoAction/MouseCarryIsoAction' isStatic='false' isFinal='false' isOverride='false'  param_names='$iso_item;$state' param_types='happyfish.scene.world.grid:IsoItem;happyfish.scene.world:WorldState' param_defaults='undefined;undefined' result_type='*'>
</method>
<method name='onBackgroundClick' fullname='happymagic.scene.world.control:MouseCarryIsoAction/onBackgroundClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onMouseMove' fullname='happymagic.scene.world.control:MouseCarryIsoAction/onMouseMove' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='remove' fullname='happymagic.scene.world.control:MouseCarryIsoAction/remove' isStatic='false' isFinal='false' isOverride='true'  param_names='$stack_flg' param_types='Boolean' param_defaults='true' result_type='void'>
</method>
<field name='_isoItem' fullname='happymagic.scene.world.control:MouseCarryIsoAction/private:_isoItem' type='happyfish.scene.world.grid:IsoItem' isStatic='false' isConst='false' >
</field>
<classRec name='MouseStampAction' fullname='happymagic.scene.world.control:MouseStampAction' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\control\MouseStampAction.as' namespace='happymagic.scene.world.control' access='public' baseclass='happymagic.scene.world.control:MouseMagicAction' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 印章基类,将一个新物品放入场景中

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='MouseStampAction' fullname='happymagic.scene.world.control:MouseStampAction/MouseStampAction' isStatic='false' isFinal='false' isOverride='false'  param_names='$state;$item_render;$stack_flg' param_types='happyfish.scene.world:WorldState;happyfish.display.ui:GridItem;Boolean' param_defaults='undefined;undefined;false' result_type='*'>
</method>
<method name='init' fullname='happymagic.scene.world.control:MouseStampAction/init' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='onBackgroundClick' fullname='happymagic.scene.world.control:MouseStampAction/onBackgroundClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onMouseMove' fullname='happymagic.scene.world.control:MouseStampAction/onMouseMove' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='remove' fullname='happymagic.scene.world.control:MouseStampAction/remove' isStatic='false' isFinal='false' isOverride='true'  param_names='$stack_flg' param_types='Boolean' param_defaults='true' result_type='void'>
<description><![CDATA[

		 放置成功

		 ]]></description>
<param><![CDATA[$stack_flg

		 ]]></param>
</method>
<method name='superRemove' fullname='happymagic.scene.world.control:MouseStampAction/superRemove' isStatic='false' isFinal='false' isOverride='false'  param_names='$stack_flg' param_types='Boolean' param_defaults='true' result_type='void'>
</method>
<field name='_isoItem' fullname='happymagic.scene.world.control:MouseStampAction/protected:_isoItem' type='happyfish.scene.world.grid:IsoItem' isStatic='false' isConst='false' >
</field>
<field name='itemRender' fullname='happymagic.scene.world.control:MouseStampAction/protected:itemRender' type='happyfish.display.ui:GridItem' isStatic='false' isConst='false' >
</field>
<classRec name='MouseTransAction' fullname='happymagic.scene.world.control:MouseTransAction' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\control\MouseTransAction.as' namespace='happymagic.scene.world.control' access='public' baseclass='happymagic.scene.world.control:MouseMagicAction' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MouseTransAction' fullname='happymagic.scene.world.control:MouseTransAction/MouseTransAction' isStatic='false' isFinal='false' isOverride='false'  param_names='$state;$transVo;$stack_flg' param_types='happyfish.scene.world:WorldState;happymagic.model.vo:TransMagicVo;Boolean' param_defaults='undefined;undefined;false' result_type='*'>
</method>
<method name='learnMvEnd' fullname='happymagic.scene.world.control:MouseTransAction/private:learnMvEnd' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='onBackgroundClick' fullname='happymagic.scene.world.control:MouseTransAction/onBackgroundClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onPlayerClick' fullname='happymagic.scene.world.control:MouseTransAction/onPlayerClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 点击学生

		 ]]></description>
<param><![CDATA[event

		 ]]></param>
</method>
<method name='onPlayerOut' fullname='happymagic.scene.world.control:MouseTransAction/onPlayerOut' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onPlayerOver' fullname='happymagic.scene.world.control:MouseTransAction/onPlayerOver' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onStudentOut' fullname='happymagic.scene.world.control:MouseTransAction/onStudentOut' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='remove' fullname='happymagic.scene.world.control:MouseTransAction/remove' isStatic='false' isFinal='false' isOverride='true'  param_names='$stack_flg' param_types='Boolean' param_defaults='true' result_type='void'>
</method>
<method name='setMagic' fullname='happymagic.scene.world.control:MouseTransAction/setMagic' isStatic='false' isFinal='false' isOverride='false'  param_names='paopao' param_types='flash.display:Sprite' param_defaults='undefined' result_type='void'>
</method>
<method name='startTransMv' fullname='happymagic.scene.world.control:MouseTransAction/private:startTransMv' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='transMouseComplete' fullname='happymagic.scene.world.control:MouseTransAction/private:transMouseComplete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='trans_complete' fullname='happymagic.scene.world.control:MouseTransAction/private:trans_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='trans' fullname='happymagic.scene.world.control:MouseTransAction/private:trans' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='playPoint' fullname='happymagic.scene.world.control:MouseTransAction/private:playPoint' type='com.friendsofed.isometric:Point3D' isStatic='false' isConst='false' >
</field>
<field name='player' fullname='happymagic.scene.world.control:MouseTransAction/private:player' type='happymagic.scene.world.grid.person:Player' isStatic='false' isConst='false' >
</field>
<field name='remove_flg' fullname='happymagic.scene.world.control:MouseTransAction/private:remove_flg' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='transVo' fullname='happymagic.scene.world.control:MouseTransAction/private:transVo' type='happymagic.model.vo:TransMagicVo' isStatic='false' isConst='false' >
</field>
<classRec name='MouseFloorStampAction' fullname='happymagic.scene.world.control:MouseFloorStampAction' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\control\MouseFloorStampAction.as' namespace='happymagic.scene.world.control' access='public' baseclass='happymagic.scene.world.control:MouseStampAction' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='MouseFloorStampAction' fullname='happymagic.scene.world.control:MouseFloorStampAction/MouseFloorStampAction' isStatic='false' isFinal='false' isOverride='false'  param_names='$state;$item_render;$stack_flg' param_types='happyfish.scene.world:WorldState;happyfish.display.ui:GridItem;Boolean' param_defaults='undefined;undefined;false' result_type='*'>
</method>
<method name='onBackgroundClick' fullname='happymagic.scene.world.control:MouseFloorStampAction/onBackgroundClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='remove' fullname='happymagic.scene.world.control:MouseFloorStampAction/remove' isStatic='false' isFinal='false' isOverride='true'  param_names='$stack_flg' param_types='Boolean' param_defaults='true' result_type='void'>
</method>
<classRec name='MouseDoorStampAction' fullname='happymagic.scene.world.control:MouseDoorStampAction' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\control\MouseDoorStampAction.as' namespace='happymagic.scene.world.control' access='public' baseclass='happymagic.scene.world.control:MouseStampAction' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='MouseDoorStampAction' fullname='happymagic.scene.world.control:MouseDoorStampAction/MouseDoorStampAction' isStatic='false' isFinal='false' isOverride='false'  param_names='$state;$item_render;$stack_flg' param_types='happyfish.scene.world:WorldState;happyfish.display.ui:GridItem;Boolean' param_defaults='undefined;undefined;false' result_type='*'>
</method>
<classRec name='MouseDecorStampAction' fullname='happymagic.scene.world.control:MouseDecorStampAction' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\control\MouseDecorStampAction.as' namespace='happymagic.scene.world.control' access='public' baseclass='happymagic.scene.world.control:MouseStampAction' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 Decor对象印章

	 

	 ]]></author>
</classRec>
<method name='MouseDecorStampAction' fullname='happymagic.scene.world.control:MouseDecorStampAction/MouseDecorStampAction' isStatic='false' isFinal='false' isOverride='false'  param_names='$state;$item_render;$stack_flg' param_types='happyfish.scene.world:WorldState;happyfish.display.ui:GridItem;Boolean' param_defaults='undefined;undefined;false' result_type='*'>
</method>
<classRec name='MouseWallDecorStampAction' fullname='happymagic.scene.world.control:MouseWallDecorStampAction' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\control\MouseWallDecorStampAction.as' namespace='happymagic.scene.world.control' access='public' baseclass='happymagic.scene.world.control:MouseStampAction' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='MouseWallDecorStampAction' fullname='happymagic.scene.world.control:MouseWallDecorStampAction/MouseWallDecorStampAction' isStatic='false' isFinal='false' isOverride='false'  param_names='$state;$item_render;$stack_flg' param_types='happyfish.scene.world:WorldState;happyfish.display.ui:GridItem;Boolean' param_defaults='undefined;undefined;false' result_type='*'>
</method>
<classRec name='MouseWallStampAction' fullname='happymagic.scene.world.control:MouseWallStampAction' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\control\MouseWallStampAction.as' namespace='happymagic.scene.world.control' access='public' baseclass='happymagic.scene.world.control:MouseStampAction' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='MouseWallStampAction' fullname='happymagic.scene.world.control:MouseWallStampAction/MouseWallStampAction' isStatic='false' isFinal='false' isOverride='false'  param_names='$state;$item_render;$stack_flg' param_types='happyfish.scene.world:WorldState;happyfish.display.ui:GridItem;Boolean' param_defaults='undefined;undefined;false' result_type='*'>
</method>
<method name='remove' fullname='happymagic.scene.world.control:MouseWallStampAction/remove' isStatic='false' isFinal='false' isOverride='true'  param_names='$stack_flg' param_types='Boolean' param_defaults='true' result_type='void'>
</method>
<classRec name='ModuleVo' fullname='happyfish.manager.module.vo:ModuleVo' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\manager\module\vo\ModuleVo.as' namespace='happyfish.manager.module.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ModuleVo' fullname='happyfish.manager.module.vo:ModuleVo/ModuleVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='setValue' fullname='happyfish.manager.module.vo:ModuleVo/setValue' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='happyfish.manager.module.vo:ModuleVo'>
</method>
<field name='algin' fullname='happyfish.manager.module.vo:ModuleVo/algin' type='String' isStatic='false' isConst='false' defaultValue='alginNone' >
</field>
<field name='className' fullname='happyfish.manager.module.vo:ModuleVo/className' type='String' isStatic='false' isConst='false' >
</field>
<field name='fx' fullname='happyfish.manager.module.vo:ModuleVo/fx' type='int' isStatic='false' isConst='false' >
</field>
<field name='fy' fullname='happyfish.manager.module.vo:ModuleVo/fy' type='int' isStatic='false' isConst='false' >
</field>
<field name='mvTime' fullname='happyfish.manager.module.vo:ModuleVo/mvTime' type='Number' isStatic='false' isConst='false' defaultValue='.3' >
</field>
<field name='mvType' fullname='happyfish.manager.module.vo:ModuleVo/mvType' type='String' isStatic='false' isConst='false' defaultValue='none' >
</field>
<field name='name' fullname='happyfish.manager.module.vo:ModuleVo/name' type='String' isStatic='false' isConst='false' >
</field>
<field name='x' fullname='happyfish.manager.module.vo:ModuleVo/x' type='int' isStatic='false' isConst='false' >
</field>
<field name='y' fullname='happyfish.manager.module.vo:ModuleVo/y' type='int' isStatic='false' isConst='false' >
</field>
<classRec name='ModuleStateType' fullname='happyfish.manager.module.vo:ModuleStateType' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\manager\module\vo\ModuleStateType.as' namespace='happyfish.manager.module.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ModuleStateType' fullname='happyfish.manager.module.vo:ModuleStateType/ModuleStateType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='HIDEING' fullname='happyfish.manager.module.vo:ModuleStateType/HIDEING' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='PREPAIR_SHOWING' fullname='happyfish.manager.module.vo:ModuleStateType/PREPAIR_SHOWING' type='uint' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='SHOWING' fullname='happyfish.manager.module.vo:ModuleStateType/SHOWING' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<classRec name='PerBarView' fullname='happyfish.display.view:PerBarView' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\display\view\PerBarView.as' namespace='happyfish.display.view' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='PerBarView' fullname='happyfish.display.view:PerBarView/PerBarView' isStatic='false' isFinal='false' isOverride='false'  param_names='ui;_maxW;__maxValue' param_types='flash.display:MovieClip;Number;uint' param_defaults='undefined;undefined;100' result_type='*'>
</method>
<method name='setData' fullname='happyfish.display.view:PerBarView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='_value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='maxValue' fullname='happyfish.display.view:PerBarView/maxValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='maxValue' fullname='happyfish.display.view:PerBarView/maxValue/set' isStatic='false' isFinal='false' isOverride='false'  param_names='_value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<field name='_maxValue' fullname='happyfish.display.view:PerBarView/private:_maxValue' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_view' fullname='happyfish.display.view:PerBarView/_view' type='flash.display:MovieClip' isStatic='false' isConst='false' >
</field>
<field name='barView' fullname='happyfish.display.view:PerBarView/private:barView' type='flash.display:MovieClip' isStatic='false' isConst='false' >
</field>
<field name='maxW' fullname='happyfish.display.view:PerBarView/private:maxW' type='Number' isStatic='false' isConst='false' >
</field>
<field name='minW' fullname='happyfish.display.view:PerBarView/minW' type='uint' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='per' fullname='happyfish.display.view:PerBarView/private:per' type='Number' isStatic='false' isConst='false' >
</field>
<field name='value' fullname='happyfish.display.view:PerBarView/private:value' type='Number' isStatic='false' isConst='false' >
</field>
<classRec name='ItemRender' fullname='happyfish.display.view:ItemRender' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\display\view\ItemRender.as' namespace='happyfish.display.view' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck Xu

	 ]]></author>
</classRec>
<method name='ItemRender' fullname='happyfish.display.view:ItemRender/ItemRender' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='data' fullname='happyfish.display.view:ItemRender/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='view' fullname='happyfish.display.view:ItemRender/view/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:MovieClip'>
</method>
<method name='data' fullname='happyfish.display.view:ItemRender/data/set' isStatic='false' isFinal='false' isOverride='false'  param_names='$data' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='numDiff' fullname='happyfish.display.view:ItemRender/numDiff/set' isStatic='false' isFinal='false' isOverride='false'  param_names='$vl' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<field name='_data' fullname='happyfish.display.view:ItemRender/protected:_data' type='Object' isStatic='false' isConst='false' >
</field>
<field name='_view' fullname='happyfish.display.view:ItemRender/protected:_view' type='flash.display:MovieClip' isStatic='false' isConst='false' >
</field>
<classRec name='UISprite' fullname='happyfish.display.view:UISprite' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\display\view\UISprite.as' namespace='happyfish.display.view' access='public' baseclass='flash.events:EventDispatcher' interfaces='happyfish.manager.module.interfaces:IModule' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='UISprite' fullname='happyfish.display.view:UISprite/UISprite' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='closeMe' fullname='happyfish.display.view:UISprite/closeMe' isStatic='false' isFinal='false' isOverride='false'  param_names='del' param_types='Boolean' param_defaults='false' result_type='void'>
</method>
<method name='init' fullname='happyfish.display.view:UISprite/init' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='maskbg' fullname='happyfish.display.view:UISprite/maskbg/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:DisplayObject'>
</method>
<method name='name' fullname='happyfish.display.view:UISprite/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='scaleX' fullname='happyfish.display.view:UISprite/scaleX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='scaleY' fullname='happyfish.display.view:UISprite/scaleY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='state' fullname='happyfish.display.view:UISprite/state/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='view' fullname='happyfish.display.view:UISprite/view/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:MovieClip'>
</method>
<method name='x' fullname='happyfish.display.view:UISprite/x/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='y' fullname='happyfish.display.view:UISprite/y/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='maskbg' fullname='happyfish.display.view:UISprite/maskbg/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='happyfish.display.view:UISprite/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='scaleX' fullname='happyfish.display.view:UISprite/scaleX/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='scaleY' fullname='happyfish.display.view:UISprite/scaleY/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='state' fullname='happyfish.display.view:UISprite/state/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='x' fullname='happyfish.display.view:UISprite/x/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='y' fullname='happyfish.display.view:UISprite/y/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='_maskbg' fullname='happyfish.display.view:UISprite/private:_maskbg' type='flash.display:DisplayObject' isStatic='false' isConst='false' >
</field>
<field name='_state' fullname='happyfish.display.view:UISprite/private:_state' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_view' fullname='happyfish.display.view:UISprite/protected:_view' type='flash.display:MovieClip' isStatic='false' isConst='false' >
</field>
<classRec name='IconView' fullname='happyfish.display.view:IconView' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\display\view\IconView.as' namespace='happyfish.display.view' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='IconView' fullname='happyfish.display.view:IconView/IconView' isStatic='false' isFinal='false' isOverride='false'  param_names='_w;_h;_rect' param_types='Number;Number;flash.geom:Rectangle' param_defaults='0;0;null' result_type='*'>
</method>
<method name='classGeted' fullname='happyfish.display.view:IconView/private:classGeted' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happyfish.events:SwfClassCacheEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='createIcon' fullname='happyfish.display.view:IconView/private:createIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='layoutBody' fullname='happyfish.display.view:IconView/layoutBody' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='loadIcon' fullname='happyfish.display.view:IconView/private:loadIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setData' fullname='happyfish.display.view:IconView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='className' fullname='happyfish.display.view:IconView/private:className' type='String' isStatic='false' isConst='false' >
</field>
<field name='container' fullname='happyfish.display.view:IconView/private:container' type='flash.display:DisplayObjectContainer' isStatic='false' isConst='false' >
</field>
<field name='icon' fullname='happyfish.display.view:IconView/icon' type='flash.display:MovieClip' isStatic='false' isConst='false' >
</field>
<field name='maxHeight' fullname='happyfish.display.view:IconView/maxHeight' type='Number' isStatic='false' isConst='false' >
</field>
<field name='maxWidth' fullname='happyfish.display.view:IconView/maxWidth' type='Number' isStatic='false' isConst='false' >
</field>
<field name='rect' fullname='happyfish.display.view:IconView/private:rect' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
</field>
<classRec name='PageList' fullname='happyfish.display.view:PageList' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\display\view\PageList.as' namespace='happyfish.display.view' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 通用的滚动翻页列表类

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='PageList' fullname='happyfish.display.view:PageList/PageList' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='addRenderList' fullname='happyfish.display.view:PageList/addRenderList' isStatic='false' isFinal='false' isOverride='false'  param_names='$item_data' param_types='happymagic.model.vo:DecorVo' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 根据新项重新渲染列表(新加项)

		 ]]></description>
</method>
<method name='createPage' fullname='happyfish.display.view:PageList/private:createPage' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='create' fullname='happyfish.display.view:PageList/create' isStatic='false' isFinal='false' isOverride='false'  param_names='$item_data;$list_class;$tab_index' param_types='Array;Class;int' param_defaults='undefined;undefined;1' result_type='void'>
</method>
<method name='nextPage' fullname='happyfish.display.view:PageList/nextPage' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='prevPage' fullname='happyfish.display.view:PageList/prevPage' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='reRenderList' fullname='happyfish.display.view:PageList/reRenderList' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='removeAllChildFun' fullname='happyfish.display.view:PageList/removeAllChildFun' isStatic='true' isFinal='false' isOverride='false'  param_names='con' param_types='flash.display:Sprite' param_defaults='undefined' result_type='void'>
</method>
<method name='removeAllChild' fullname='happyfish.display.view:PageList/removeAllChild' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='removeRenderList' fullname='happyfish.display.view:PageList/removeRenderList' isStatic='false' isFinal='false' isOverride='false'  param_names='$item_data;$vl' param_types='happymagic.model.vo:DecorVo;int' param_defaults='undefined;-1' result_type='void'>
<description><![CDATA[

		 将物品拖到界面中,如果此物品<0,删除背包中的物项

		 ]]></description>
</method>
<field name='_width' fullname='happyfish.display.view:PageList/_width' type='int' isStatic='false' isConst='false' defaultValue='80' >
</field>
<field name='class_name' fullname='happyfish.display.view:PageList/private:class_name' type='String' isStatic='false' isConst='false' >
</field>
<field name='curItemNum' fullname='happyfish.display.view:PageList/private:curItemNum' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='curPage' fullname='happyfish.display.view:PageList/private:curPage' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='horizontalGap' fullname='happyfish.display.view:PageList/horizontalGap' type='int' isStatic='false' isConst='false' defaultValue='12' >
</field>
<field name='itemData' fullname='happyfish.display.view:PageList/private:itemData' type='Array' isStatic='false' isConst='false' >
</field>
<field name='itemListRender' fullname='happyfish.display.view:PageList/private:itemListRender' type='happyfish.display.view:ItemRender' isStatic='false' isConst='false' >
</field>
<field name='items' fullname='happyfish.display.view:PageList/items' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='listClass' fullname='happyfish.display.view:PageList/private:listClass' type='Class' isStatic='false' isConst='false' >
</field>
<field name='pageItemNum' fullname='happyfish.display.view:PageList/pageItemNum' type='int' isStatic='false' isConst='false' defaultValue='6' >
</field>
<field name='startX' fullname='happyfish.display.view:PageList/startX' type='int' isStatic='false' isConst='false' defaultValue='80' >
</field>
<field name='tabIndexName' fullname='happyfish.display.view:PageList/private:tabIndexName' type='int' isStatic='false' isConst='false' >
</field>
<classRec name='LoadingStateView' fullname='happyfish.display.view:LoadingStateView' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\display\view\LoadingStateView.as' namespace='happyfish.display.view' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='LoadingStateView' fullname='happyfish.display.view:LoadingStateView/LoadingStateView' isStatic='false' isFinal='false' isOverride='false'  param_names='__container;__w;__h' param_types='flash.display:DisplayObjectContainer;Number;Number' param_defaults='undefined;undefined;undefined' result_type='*'>
</method>
<method name='closeMe' fullname='happyfish.display.view:LoadingStateView/closeMe' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='initBg' fullname='happyfish.display.view:LoadingStateView/initBg' isStatic='false' isFinal='false' isOverride='false'  param_names='__w;__h' param_types='Number;Number' param_defaults='0;0' result_type='void'>
</method>
<method name='resize_fun' fullname='happyfish.display.view:LoadingStateView/private:resize_fun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='showMe' fullname='happyfish.display.view:LoadingStateView/showMe' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='body' fullname='happyfish.display.view:LoadingStateView/body/set' isStatic='false' isFinal='false' isOverride='false'  param_names='__mv' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='void'>
</method>
<field name='_container' fullname='happyfish.display.view:LoadingStateView/private:_container' type='flash.display:DisplayObjectContainer' isStatic='false' isConst='false' >
</field>
<field name='_h' fullname='happyfish.display.view:LoadingStateView/private:_h' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_w' fullname='happyfish.display.view:LoadingStateView/private:_w' type='Number' isStatic='false' isConst='false' >
</field>
<field name='bg' fullname='happyfish.display.view:LoadingStateView/private:bg' type='flash.display:Shape' isStatic='false' isConst='false' >
</field>
<field name='mv' fullname='happyfish.display.view:LoadingStateView/private:mv' type='flash.display:MovieClip' isStatic='false' isConst='false' >
</field>
<field name='showing' fullname='happyfish.display.view:LoadingStateView/showing' type='Boolean' isStatic='false' isConst='false' >
</field>
<classRec name='WorldMapSceneIconView' fullname='happymagic.display.view.worldMap:WorldMapSceneIconView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\worldMap\WorldMapSceneIconView.as' namespace='happymagic.display.view.worldMap' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='WorldMapSceneIconView' fullname='happymagic.display.view.worldMap:WorldMapSceneIconView/WorldMapSceneIconView' isStatic='false' isFinal='false' isOverride='false'  param_names='_sceneVo;_container;_offPoint' param_types='happymagic.model.vo:SceneVo;flash.display:DisplayObjectContainer;flash.geom:Point' param_defaults='undefined;undefined;null' result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.worldMap:WorldMapSceneIconView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='loadIcon' fullname='happymagic.display.view.worldMap:WorldMapSceneIconView/loadIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='outFun' fullname='happymagic.display.view.worldMap:WorldMapSceneIconView/private:outFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='overFun' fullname='happymagic.display.view.worldMap:WorldMapSceneIconView/private:overFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<field name='container' fullname='happymagic.display.view.worldMap:WorldMapSceneIconView/private:container' type='flash.display:DisplayObjectContainer' isStatic='false' isConst='false' >
</field>
<field name='data' fullname='happymagic.display.view.worldMap:WorldMapSceneIconView/data' type='happymagic.model.vo:SceneVo' isStatic='false' isConst='false' >
</field>
<field name='icon' fullname='happymagic.display.view.worldMap:WorldMapSceneIconView/icon' type='happyfish.display.view:IconView' isStatic='false' isConst='false' >
</field>
<field name='offPoint' fullname='happymagic.display.view.worldMap:WorldMapSceneIconView/private:offPoint' type='flash.geom:Point' isStatic='false' isConst='false' >
</field>
<classRec name='WorldMap' fullname='happymagic.display.view.worldMap:WorldMap' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\worldMap\WorldMap.as' namespace='happymagic.display.view.worldMap' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='WorldMap' fullname='happymagic.display.view.worldMap:WorldMap/WorldMap' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.worldMap:WorldMap/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='createSceneIcon' fullname='happymagic.display.view.worldMap:WorldMap/private:createSceneIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='createUserMsg' fullname='happymagic.display.view.worldMap:WorldMap/private:createUserMsg' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='init' fullname='happymagic.display.view.worldMap:WorldMap/init' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='loadBg' fullname='happymagic.display.view.worldMap:WorldMap/private:loadBg' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='mouseClickFun' fullname='happymagic.display.view.worldMap:WorldMap/private:mouseClickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.display.view.worldMap.events:WorldMapEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.worldMap:WorldMap/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='_bg;_scenes;_currentSceneId' param_types='String;Array;uint' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<field name='bg' fullname='happymagic.display.view.worldMap:WorldMap/private:bg' type='String' isStatic='false' isConst='false' >
</field>
<field name='bgview' fullname='happymagic.display.view.worldMap:WorldMap/private:bgview' type='happymagic.scene.world.bigScene:BigSceneBg' isStatic='false' isConst='false' >
</field>
<field name='currentSceneId' fullname='happymagic.display.view.worldMap:WorldMap/private:currentSceneId' type='uint' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.worldMap:WorldMap/private:iview' type='worldMapUi' isStatic='false' isConst='false' >
</field>
<field name='offX' fullname='happymagic.display.view.worldMap:WorldMap/private:offX' type='Number' isStatic='false' isConst='false' defaultValue='-294' >
</field>
<field name='offY' fullname='happymagic.display.view.worldMap:WorldMap/private:offY' type='Number' isStatic='false' isConst='false' defaultValue='-233' >
</field>
<field name='sceneIconMc' fullname='happymagic.display.view.worldMap:WorldMap/private:sceneIconMc' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='scenes' fullname='happymagic.display.view.worldMap:WorldMap/private:scenes' type='Array' isStatic='false' isConst='false' >
</field>
<field name='userMsg' fullname='happymagic.display.view.worldMap:WorldMap/private:userMsg' type='happymagic.display.view.worldMap:WorldMapMsgView' isStatic='false' isConst='false' >
</field>
<field name='worldMapSceneIcons' fullname='happymagic.display.view.worldMap:WorldMap/private:worldMapSceneIcons' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='WorldMapSceneInfoView' fullname='happymagic.display.view.worldMap:WorldMapSceneInfoView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\worldMap\WorldMapSceneInfoView.as' namespace='happymagic.display.view.worldMap' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='WorldMapSceneInfoView' fullname='happymagic.display.view.worldMap:WorldMapSceneInfoView/WorldMapSceneInfoView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='changeSceneView_complete' fullname='happymagic.display.view.worldMap:WorldMapSceneInfoView/private:changeSceneView_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='changeSceneView' fullname='happymagic.display.view.worldMap:WorldMapSceneInfoView/private:changeSceneView' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clickFun' fullname='happymagic.display.view.worldMap:WorldMapSceneInfoView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='moveScene_complete' fullname='happymagic.display.view.worldMap:WorldMapSceneInfoView/private:moveScene_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='moveScene' fullname='happymagic.display.view.worldMap:WorldMapSceneInfoView/private:moveScene' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.worldMap:WorldMapSceneInfoView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='_sceneVo' param_types='happymagic.model.vo:SceneVo' param_defaults='undefined' result_type='void'>
</method>
<method name='unLockScene_complete' fullname='happymagic.display.view.worldMap:WorldMapSceneInfoView/private:unLockScene_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='unLockScene' fullname='happymagic.display.view.worldMap:WorldMapSceneInfoView/private:unLockScene' isStatic='false' isFinal='false' isOverride='false'  param_names='unLockType' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<field name='data' fullname='happymagic.display.view.worldMap:WorldMapSceneInfoView/private:data' type='happymagic.model.vo:SceneVo' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.worldMap:WorldMapSceneInfoView/private:iview' type='sceneInfoUi' isStatic='false' isConst='false' >
</field>
<classRec name='WorldMapMsgView' fullname='happymagic.display.view.worldMap:WorldMapMsgView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\worldMap\WorldMapMsgView.as' namespace='happymagic.display.view.worldMap' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='WorldMapMsgView' fullname='happymagic.display.view.worldMap:WorldMapMsgView/WorldMapMsgView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='loadFace' fullname='happymagic.display.view.worldMap:WorldMapMsgView/loadFace' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.worldMap:WorldMapMsgView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happymagic.model.vo:UserVo' param_defaults='undefined' result_type='void'>
</method>
<method name='mirro' fullname='happymagic.display.view.worldMap:WorldMapMsgView/mirro/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='bg' fullname='happymagic.display.view.worldMap:WorldMapMsgView/private:bg' type='worldMapMsgUi' isStatic='false' isConst='false' >
</field>
<field name='data' fullname='happymagic.display.view.worldMap:WorldMapMsgView/data' type='happymagic.model.vo:UserVo' isStatic='false' isConst='false' >
</field>
<field name='face' fullname='happymagic.display.view.worldMap:WorldMapMsgView/private:face' type='happyfish.display.ui:FaceView' isStatic='false' isConst='false' >
</field>
<classRec name='NumSelecterView' fullname='happyfish.display.ui:NumSelecterView' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\display\ui\NumSelecterView.as' namespace='happyfish.display.ui' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='NumSelecterView' fullname='happyfish.display.ui:NumSelecterView/NumSelecterView' isStatic='false' isFinal='false' isOverride='false'  param_names='__uiview;startNum;maxLength' param_types='flash.display:MovieClip;uint;uint' param_defaults='undefined;1;5' result_type='*'>
</method>
<method name='checkNum' fullname='happyfish.display.ui:NumSelecterView/private:checkNum' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clickFun' fullname='happyfish.display.ui:NumSelecterView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='setNumLength' fullname='happyfish.display.ui:NumSelecterView/setNumLength' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='setNum' fullname='happyfish.display.ui:NumSelecterView/setNum' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='textInput' fullname='happyfish.display.ui:NumSelecterView/private:textInput' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='maxNum' fullname='happyfish.display.ui:NumSelecterView/maxNum/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='minNum' fullname='happyfish.display.ui:NumSelecterView/minNum/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='text' fullname='happyfish.display.ui:NumSelecterView/text/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='x' fullname='happyfish.display.ui:NumSelecterView/x/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='y' fullname='happyfish.display.ui:NumSelecterView/y/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='maxNum' fullname='happyfish.display.ui:NumSelecterView/maxNum/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='minNum' fullname='happyfish.display.ui:NumSelecterView/minNum/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='text' fullname='happyfish.display.ui:NumSelecterView/text/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='x' fullname='happyfish.display.ui:NumSelecterView/x/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='y' fullname='happyfish.display.ui:NumSelecterView/y/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='_maxNum' fullname='happyfish.display.ui:NumSelecterView/private:_maxNum' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_minNum' fullname='happyfish.display.ui:NumSelecterView/private:_minNum' type='uint' isStatic='false' isConst='false' >
</field>
<field name='addButton' fullname='happyfish.display.ui:NumSelecterView/private:addButton' type='flash.display:SimpleButton' isStatic='false' isConst='false' >
</field>
<field name='changeing' fullname='happyfish.display.ui:NumSelecterView/private:changeing' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='checkDelay' fullname='happyfish.display.ui:NumSelecterView/checkDelay' type='uint' isStatic='false' isConst='false' >
</field>
<field name='checkTimeId' fullname='happyfish.display.ui:NumSelecterView/private:checkTimeId' type='uint' isStatic='false' isConst='false' >
</field>
<field name='numTxt' fullname='happyfish.display.ui:NumSelecterView/private:numTxt' type='flash.text:TextField' isStatic='false' isConst='false' >
</field>
<field name='num' fullname='happyfish.display.ui:NumSelecterView/num' type='uint' isStatic='false' isConst='false' >
</field>
<field name='subButton' fullname='happyfish.display.ui:NumSelecterView/private:subButton' type='flash.display:SimpleButton' isStatic='false' isConst='false' >
</field>
<field name='view' fullname='happyfish.display.ui:NumSelecterView/view' type='flash.display:MovieClip' isStatic='false' isConst='false' >
</field>
<classRec name='Tooltips' fullname='happyfish.display.ui:Tooltips' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\display\ui\Tooltips.as' namespace='happyfish.display.ui' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='Tooltips' fullname='happyfish.display.ui:Tooltips/Tooltips' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='Tooltips.as$174:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='alginTips' fullname='happyfish.display.ui:Tooltips/private:alginTips' isStatic='false' isFinal='false' isOverride='false'  param_names='point' param_types='flash.geom:Point' param_defaults='undefined' result_type='void'>
</method>
<method name='beRemovedFun' fullname='happyfish.display.ui:Tooltips/private:beRemovedFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='createTips' fullname='happyfish.display.ui:Tooltips/private:createTips' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='dragFun' fullname='happyfish.display.ui:Tooltips/private:dragFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='getBg' fullname='happyfish.display.ui:Tooltips/getBg' isStatic='false' isFinal='false' isOverride='false'  param_names='bgname' param_types='String' param_defaults='undefined' result_type='flash.display:MovieClip'>
</method>
<method name='getInstance' fullname='happyfish.display.ui:Tooltips/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.display.ui:Tooltips'>
</method>
<method name='initTips' fullname='happyfish.display.ui:Tooltips/private:initTips' isStatic='false' isFinal='false' isOverride='false'  param_names='str;point;type;_bg' param_types='String;flash.geom:Point;String;flash.display:MovieClip' param_defaults='undefined;undefined;undefined;null' result_type='void'>
</method>
<method name='outFun' fullname='happyfish.display.ui:Tooltips/private:outFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='overFun' fullname='happyfish.display.ui:Tooltips/private:overFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='register' fullname='happyfish.display.ui:Tooltips/register' isStatic='false' isFinal='false' isOverride='false'  param_names='target;content;_bg;type;_standPoint' param_types='flash.display:DisplayObject;String;flash.display:MovieClip;String;flash.geom:Point' param_defaults='undefined;;null;unknown;null' result_type='void'>
</method>
<method name='saveBg' fullname='happyfish.display.ui:Tooltips/saveBg' isStatic='false' isFinal='false' isOverride='false'  param_names='bgname;dis' param_types='String;flash.display:MovieClip' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='setBg' fullname='happyfish.display.ui:Tooltips/setBg' isStatic='false' isFinal='false' isOverride='false'  param_names='_bg' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='void'>
</method>
<method name='setContainer' fullname='happyfish.display.ui:Tooltips/setContainer' isStatic='false' isFinal='false' isOverride='false'  param_names='_Container' param_types='flash.display:DisplayObjectContainer' param_defaults='undefined' result_type='void'>
</method>
<method name='setMaxSize' fullname='happyfish.display.ui:Tooltips/setMaxSize' isStatic='false' isFinal='false' isOverride='false'  param_names='_w;_h' param_types='uint;uint' param_defaults='undefined;0' result_type='void'>
</method>
<method name='unRegister' fullname='happyfish.display.ui:Tooltips/unRegister' isStatic='false' isFinal='false' isOverride='false'  param_names='target' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='void'>
</method>
<field name='TYPE_DRAG' fullname='happyfish.display.ui:Tooltips/TYPE_DRAG' type='String' isStatic='true' isConst='true' defaultValue='dragTips' >
</field>
<field name='TYPE_STAND' fullname='happyfish.display.ui:Tooltips/TYPE_STAND' type='String' isStatic='true' isConst='true' defaultValue='standTips' >
</field>
<field name='bg' fullname='happyfish.display.ui:Tooltips/private:bg' type='flash.display:MovieClip' isStatic='false' isConst='false' >
</field>
<field name='bgs' fullname='happyfish.display.ui:Tooltips/private:bgs' type='Object' isStatic='false' isConst='false' >
</field>
<field name='buffer' fullname='happyfish.display.ui:Tooltips/buffer' type='int' isStatic='false' isConst='false' defaultValue='5' >
</field>
<field name='container' fullname='happyfish.display.ui:Tooltips/private:container' type='flash.display:DisplayObjectContainer' isStatic='false' isConst='false' >
</field>
<field name='delay' fullname='happyfish.display.ui:Tooltips/delay' type='uint' isStatic='false' isConst='false' defaultValue='300' >
</field>
<field name='instance' fullname='happyfish.display.ui:Tooltips/private:instance' type='happyfish.display.ui:Tooltips' isStatic='true' isConst='false' >
</field>
<field name='map' fullname='happyfish.display.ui:Tooltips/private:map' type='flash.utils:Dictionary' isStatic='false' isConst='false' >
</field>
<field name='maxHeight' fullname='happyfish.display.ui:Tooltips/private:maxHeight' type='uint' isStatic='false' isConst='false' defaultValue='30' >
</field>
<field name='maxWidth' fullname='happyfish.display.ui:Tooltips/private:maxWidth' type='uint' isStatic='false' isConst='false' defaultValue='120' >
</field>
<field name='showTimeId' fullname='happyfish.display.ui:Tooltips/private:showTimeId' type='uint' isStatic='false' isConst='false' >
</field>
<field name='tipsTxt' fullname='happyfish.display.ui:Tooltips/private:tipsTxt' type='flash.text:TextField' isStatic='false' isConst='false' >
</field>
<field name='tips' fullname='happyfish.display.ui:Tooltips/private:tips' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='tipsformat' fullname='happyfish.display.ui:Tooltips/private:tipsformat' type='flash.text:TextFormat' isStatic='false' isConst='false' >
</field>
<classRec name='GridItem' fullname='happyfish.display.ui:GridItem' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\display\ui\GridItem.as' namespace='happyfish.display.ui' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='GridItem' fullname='happyfish.display.ui:GridItem/GridItem' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='*'>
</method>
<method name='add' fullname='happyfish.display.ui:GridItem/add' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='delNum' fullname='happyfish.display.ui:GridItem/delNum' isStatic='false' isFinal='false' isOverride='false'  param_names='num' param_types='uint' param_defaults='undefined' result_type='Array'>
</method>
<method name='itemSelectFun' fullname='happyfish.display.ui:GridItem/protected:itemSelectFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='setData' fullname='happyfish.display.ui:GridItem/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='index' fullname='happyfish.display.ui:GridItem/index' type='uint' isStatic='false' isConst='false' >
</field>
<field name='view' fullname='happyfish.display.ui:GridItem/view' type='flash.display:MovieClip' isStatic='false' isConst='false' >
</field>
<classRec name='RoundLayout' fullname='happyfish.display.ui:RoundLayout' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\display\ui\RoundLayout.as' namespace='happyfish.display.ui' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='RoundLayout' fullname='happyfish.display.ui:RoundLayout/RoundLayout' isStatic='false' isFinal='false' isOverride='false'  param_names='__dist' param_types='Number' param_defaults='undefined' result_type='*'>
</method>
<method name='TweenFrom' fullname='happyfish.display.ui:RoundLayout/TweenFrom' isStatic='false' isFinal='false' isOverride='false'  param_names='_dist;__rotation;time' param_types='Number;Number;Number' param_defaults='undefined;undefined;1' result_type='void'>
</method>
<method name='TweenTo' fullname='happyfish.display.ui:RoundLayout/TweenTo' isStatic='false' isFinal='false' isOverride='false'  param_names='_dist;__rotation;time' param_types='Number;Number;Number' param_defaults='undefined;undefined;1' result_type='void'>
</method>
<method name='addObjects' fullname='happyfish.display.ui:RoundLayout/addObjects' isStatic='false' isFinal='false' isOverride='false'  param_names='args' param_types='restParam' param_defaults='undefined' result_type='void'>
</method>
<method name='clear' fullname='happyfish.display.ui:RoundLayout/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='layout' fullname='happyfish.display.ui:RoundLayout/layout' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setDist' fullname='happyfish.display.ui:RoundLayout/setDist' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='setRotation' fullname='happyfish.display.ui:RoundLayout/setRotation' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='dist' fullname='happyfish.display.ui:RoundLayout/dist/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='rotation' fullname='happyfish.display.ui:RoundLayout/rotation/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='dist' fullname='happyfish.display.ui:RoundLayout/dist/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='rotation' fullname='happyfish.display.ui:RoundLayout/rotation/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='_dist' fullname='happyfish.display.ui:RoundLayout/private:_dist' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_rotation' fullname='happyfish.display.ui:RoundLayout/private:_rotation' type='Number' isStatic='false' isConst='false' >
</field>
<field name='autoLayout' fullname='happyfish.display.ui:RoundLayout/autoLayout' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='objects' fullname='happyfish.display.ui:RoundLayout/objects' type='Array' isStatic='false' isConst='false' >
</field>
<field name='tweener' fullname='happyfish.display.ui:RoundLayout/private:tweener' type='com.greensock:TweenLite' isStatic='false' isConst='false' >
</field>
<classRec name='GridPage' fullname='happyfish.display.ui:GridPage' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\display\ui\GridPage.as' namespace='happyfish.display.ui' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='GridPage' fullname='happyfish.display.ui:GridPage/GridPage' isStatic='false' isFinal='false' isOverride='false'  param_names='ui;_container' param_types='flash.display:Sprite;flash.display:DisplayObjectContainer' param_defaults='undefined;undefined' result_type='*'>
</method>
<method name='addItem' fullname='happyfish.display.ui:GridPage/addItem' isStatic='false' isFinal='false' isOverride='false'  param_names='value;reDraw' param_types='Object;Boolean' param_defaults='undefined;true' result_type='void'>
<description><![CDATA[

		 增加item

		 ]]></description>
<param><![CDATA[value

		 ]]></param>
<param><![CDATA[reDraw

		 ]]></param>
</method>
<method name='clear' fullname='happyfish.display.ui:GridPage/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clickFun' fullname='happyfish.display.ui:GridPage/protected:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='createBlankItem' fullname='happyfish.display.ui:GridPage/protected:createBlankItem' isStatic='false' isFinal='false' isOverride='false'  result_type='happyfish.display.ui:GridItem'>
</method>
<method name='createItem' fullname='happyfish.display.ui:GridPage/protected:createItem' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='happyfish.display.ui:GridItem'>
</method>
<method name='filterData' fullname='happyfish.display.ui:GridPage/private:filterData' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='getItemByIndex' fullname='happyfish.display.ui:GridPage/getItemByIndex' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='uint' param_defaults='undefined' result_type='happyfish.display.ui:GridItem'>
<description><![CDATA[

		 获取指定index的项

		 ]]></description>
<param><![CDATA[index

		 ]]></param>
<return><![CDATA[
		 ]]></return>
</method>
<method name='getItemByKey' fullname='happyfish.display.ui:GridPage/getItemByKey' isStatic='false' isFinal='false' isOverride='false'  param_names='key;value' param_types='String;*' param_defaults='undefined;undefined' result_type='happyfish.display.ui:GridItem'>
</method>
<method name='initPage' fullname='happyfish.display.ui:GridPage/initPage' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='init' fullname='happyfish.display.ui:GridPage/init' isStatic='false' isFinal='false' isOverride='false'  param_names='gridWidth;gridHeight;tileWidth;tileHeight;gridX;gridY;tileAlgin;algin' param_types='Number;Number;Number;Number;Number;Number;String;String' param_defaults='undefined;undefined;undefined;undefined;0;0;TL;TL' result_type='void'>
</method>
<method name='itemSelectFun' fullname='happyfish.display.ui:GridPage/protected:itemSelectFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happyfish.display.ui.events:GridPageEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='jumpToItem' fullname='happyfish.display.ui:GridPage/jumpToItem' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='nextPage' fullname='happyfish.display.ui:GridPage/nextPage' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='prevPage' fullname='happyfish.display.ui:GridPage/prevPage' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='removeItem' fullname='happyfish.display.ui:GridPage/removeItem' isStatic='false' isFinal='false' isOverride='false'  param_names='cid;num;reDraw' param_types='uint;uint;Boolean' param_defaults='undefined;undefined;true' result_type='void'>
<description><![CDATA[

		 删除item

		 ]]></description>
<param><![CDATA[cid

		 ]]></param>
<param><![CDATA[num

		 ]]></param>
<param><![CDATA[reDraw

		 ]]></param>
</method>
<method name='setBtnVisible' fullname='happyfish.display.ui:GridPage/private:setBtnVisible' isStatic='false' isFinal='false' isOverride='false'  param_names='target;value' param_types='flash.display:DisplayObject;Boolean' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='setData' fullname='happyfish.display.ui:GridPage/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value;key;keyV;saveCurrentPage' param_types='Array;String;*;Boolean' param_defaults='undefined;;null;false' result_type='void'>
<description><![CDATA[

		 设置数据,并依key保留数据

		 ]]></description>
<param><![CDATA[value			数据组

		 ]]></param>
<param><![CDATA[key				数据过滤依据字段

		 ]]></param>
<param><![CDATA[keyV			key为该值的数据保留

		 ]]></param>
<param><![CDATA[saveCurrentPage	是否还停在当前页页

		 ]]></param>
</method>
<method name='x' fullname='happyfish.display.ui:GridPage/x/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='y' fullname='happyfish.display.ui:GridPage/y/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='useBounds' fullname='happyfish.display.ui:GridPage/useBounds/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='x' fullname='happyfish.display.ui:GridPage/x/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='y' fullname='happyfish.display.ui:GridPage/y/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='addNumFunc' fullname='happyfish.display.ui:GridPage/addNumFunc' type='String' isStatic='false' isConst='false' >
</field>
<field name='blankItemUi' fullname='happyfish.display.ui:GridPage/blankItemUi' type='Class' isStatic='false' isConst='false' >
</field>
<field name='cidKey' fullname='happyfish.display.ui:GridPage/cidKey' type='String' isStatic='false' isConst='false' >
</field>
<field name='container' fullname='happyfish.display.ui:GridPage/protected:container' type='flash.display:DisplayObjectContainer' isStatic='false' isConst='false' >
</field>
<field name='currentPage' fullname='happyfish.display.ui:GridPage/currentPage' type='uint' isStatic='false' isConst='false' >
</field>
<field name='data' fullname='happyfish.display.ui:GridPage/data' type='Array' isStatic='false' isConst='false' >
</field>
<field name='delNumFunc' fullname='happyfish.display.ui:GridPage/delNumFunc' type='String' isStatic='false' isConst='false' >
</field>
<field name='filterKey' fullname='happyfish.display.ui:GridPage/private:filterKey' type='String' isStatic='false' isConst='false' >
</field>
<field name='filterValue' fullname='happyfish.display.ui:GridPage/private:filterValue' type='' isStatic='false' isConst='false' >
</field>
<field name='grid' fullname='happyfish.display.ui:GridPage/protected:grid' type='happyfish.display.ui:GridView' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happyfish.display.ui:GridPage/iview' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='nextBtn' fullname='happyfish.display.ui:GridPage/protected:nextBtn' type='flash.display:DisplayObject' isStatic='false' isConst='false' >
</field>
<field name='numKey' fullname='happyfish.display.ui:GridPage/numKey' type='String' isStatic='false' isConst='false' >
</field>
<field name='pageLength' fullname='happyfish.display.ui:GridPage/pageLength' type='uint' isStatic='false' isConst='false' >
</field>
<field name='prevBtn' fullname='happyfish.display.ui:GridPage/protected:prevBtn' type='flash.display:DisplayObject' isStatic='false' isConst='false' >
</field>
<field name='selectCallBack' fullname='happyfish.display.ui:GridPage/selectCallBack' type='Function' isStatic='false' isConst='false' >
</field>
<field name='totalData' fullname='happyfish.display.ui:GridPage/private:totalData' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='TabelView' fullname='happyfish.display.ui:TabelView' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\display\ui\TabelView.as' namespace='happyfish.display.ui' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
<metadata>
	<Event owner='happyfish.display.ui:TabelView' name='select' type='flash.events.Event' >
	</Event>
</metadata>
</classRec>
<method name='TabelView' fullname='happyfish.display.ui:TabelView/TabelView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='addTabs' fullname='happyfish.display.ui:TabelView/addTabs' isStatic='false' isFinal='false' isOverride='false'  param_names='args' param_types='restParam' param_defaults='undefined' result_type='void'>
</method>
<method name='clickFun' fullname='happyfish.display.ui:TabelView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='getItem' fullname='happyfish.display.ui:TabelView/private:getItem' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='uint' param_defaults='undefined' result_type='flash.display:MovieClip'>
</method>
<method name='init' fullname='happyfish.display.ui:TabelView/private:init' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='select' fullname='happyfish.display.ui:TabelView/select' isStatic='false' isFinal='false' isOverride='false'  param_names='index;dispatch' param_types='uint;Boolean' param_defaults='undefined;true' result_type='void'>
<description><![CDATA[

		 指到标签

		 ]]></description>
<param><![CDATA[index	从0开始的标签index

		 ]]></param>
<param><![CDATA[dispatch

		 ]]></param>
</method>
<method name='setAbleItem' fullname='happyfish.display.ui:TabelView/setAbleItem' isStatic='false' isFinal='false' isOverride='false'  param_names='index;flag' param_types='uint;Boolean' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='setItemSelect' fullname='happyfish.display.ui:TabelView/setItemSelect' isStatic='false' isFinal='false' isOverride='false'  param_names='index;value' param_types='uint;Boolean' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 只是选中,但不会派发选中事件

		 ]]></description>
<param><![CDATA[index

		 ]]></param>
<param><![CDATA[value

		 ]]></param>
</method>
<method name='setTabs' fullname='happyfish.display.ui:TabelView/setTabs' isStatic='false' isFinal='false' isOverride='false'  param_names='args' param_types='restParam' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[... args  例:[mc,value],[tab_desk,"课桌"]

		 ]]></param>
</method>
<method name='sortBtns' fullname='happyfish.display.ui:TabelView/private:sortBtns' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='selectValue' fullname='happyfish.display.ui:TabelView/selectValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='btwX' fullname='happyfish.display.ui:TabelView/btwX' type='Number' isStatic='false' isConst='false' defaultValue='-1' >
</field>
<field name='btwY' fullname='happyfish.display.ui:TabelView/btwY' type='Number' isStatic='false' isConst='false' defaultValue='-1' >
</field>
<field name='selectIndex' fullname='happyfish.display.ui:TabelView/selectIndex' type='uint' isStatic='false' isConst='false' >
</field>
<field name='tabelsArr' fullname='happyfish.display.ui:TabelView/private:tabelsArr' type='Array' isStatic='false' isConst='false' >
</field>
<field name='tabelsValueArr' fullname='happyfish.display.ui:TabelView/private:tabelsValueArr' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='GridView' fullname='happyfish.display.ui:GridView' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\display\ui\GridView.as' namespace='happyfish.display.ui' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='GridView' fullname='happyfish.display.ui:GridView/GridView' isStatic='false' isFinal='false' isOverride='false'  param_names='gridWidth;gridHeight;tileWidth;tileHeight;tileAlgin;algin' param_types='Number;Number;Number;Number;String;String' param_defaults='undefined;undefined;undefined;undefined;TL;TL' result_type='*'>
</method>
<method name='add' fullname='happyfish.display.ui:GridView/add' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happyfish.display.ui:GridItem' param_defaults='undefined' result_type='void'>
</method>
<method name='clearAll' fullname='happyfish.display.ui:GridView/clearAll' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setData' fullname='happyfish.display.ui:GridView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='data' fullname='happyfish.display.ui:GridView/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='data' fullname='happyfish.display.ui:GridView/data/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<field name='_data' fullname='happyfish.display.ui:GridView/private:_data' type='Array' isStatic='false' isConst='false' >
</field>
<field name='list' fullname='happyfish.display.ui:GridView/list' type='xrope:GridLayout' isStatic='false' isConst='false' >
</field>
<classRec name='FaceView' fullname='happyfish.display.ui:FaceView' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\display\ui\FaceView.as' namespace='happyfish.display.ui' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
</classRec>
<method name='FaceView' fullname='happyfish.display.ui:FaceView/FaceView' isStatic='false' isFinal='false' isOverride='false'  param_names='_size' param_types='uint' param_defaults='50' result_type='*'>
</method>
<method name='loadFace_complete' fullname='happyfish.display.ui:FaceView/private:loadFace_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='loadFace_ioError' fullname='happyfish.display.ui:FaceView/private:loadFace_ioError' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:IOErrorEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='loadFace' fullname='happyfish.display.ui:FaceView/loadFace' isStatic='false' isFinal='false' isOverride='false'  param_names='face' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='size' fullname='happyfish.display.ui:FaceView/private:size' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='ModuleMvType' fullname='happyfish.manager.module:ModuleMvType' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\manager\module\ModuleMvType.as' namespace='happyfish.manager.module' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ModuleMvType' fullname='happyfish.manager.module:ModuleMvType/ModuleMvType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='CNETER' fullname='happyfish.manager.module:ModuleMvType/CNETER' type='String' isStatic='true' isConst='true' defaultValue='fromCenter' >
</field>
<field name='FROM_BOTTOM' fullname='happyfish.manager.module:ModuleMvType/FROM_BOTTOM' type='String' isStatic='true' isConst='true' defaultValue='fromBottom' >
</field>
<field name='FROM_LEFT' fullname='happyfish.manager.module:ModuleMvType/FROM_LEFT' type='String' isStatic='true' isConst='true' defaultValue='fromLeft' >
</field>
<field name='FROM_RIGHT' fullname='happyfish.manager.module:ModuleMvType/FROM_RIGHT' type='String' isStatic='true' isConst='true' defaultValue='fromRight' >
</field>
<field name='FROM_TOP' fullname='happyfish.manager.module:ModuleMvType/FROM_TOP' type='String' isStatic='true' isConst='true' defaultValue='fromTop' >
</field>
<field name='NONE' fullname='happyfish.manager.module:ModuleMvType/NONE' type='String' isStatic='true' isConst='true' defaultValue='none' >
</field>
<classRec name='AlginType' fullname='happyfish.manager.module:AlginType' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\manager\module\AlginType.as' namespace='happyfish.manager.module' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='AlginType' fullname='happyfish.manager.module:AlginType/AlginType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='BC' fullname='happyfish.manager.module:AlginType/BC' type='String' isStatic='true' isConst='true' defaultValue='bottom_center' >
</field>
<field name='BL' fullname='happyfish.manager.module:AlginType/BL' type='String' isStatic='true' isConst='true' defaultValue='bottom_left' >
</field>
<field name='BR' fullname='happyfish.manager.module:AlginType/BR' type='String' isStatic='true' isConst='true' defaultValue='bottom_right' >
</field>
<field name='CENTER' fullname='happyfish.manager.module:AlginType/CENTER' type='String' isStatic='true' isConst='true' defaultValue='center' >
</field>
<field name='CR' fullname='happyfish.manager.module:AlginType/CR' type='String' isStatic='true' isConst='true' defaultValue='center_right' >
</field>
<field name='Cl' fullname='happyfish.manager.module:AlginType/Cl' type='String' isStatic='true' isConst='true' defaultValue='center_left' >
</field>
<field name='NONE' fullname='happyfish.manager.module:AlginType/NONE' type='String' isStatic='true' isConst='true' defaultValue='alginNone' >
</field>
<field name='TC' fullname='happyfish.manager.module:AlginType/TC' type='String' isStatic='true' isConst='true' defaultValue='top_center' >
</field>
<field name='TL' fullname='happyfish.manager.module:AlginType/TL' type='String' isStatic='true' isConst='true' defaultValue='top_left' >
</field>
<field name='TR' fullname='happyfish.manager.module:AlginType/TR' type='String' isStatic='true' isConst='true' defaultValue='top_right' >
</field>
<classRec name='ModuleManager' fullname='happyfish.manager.module:ModuleManager' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\manager\module\ModuleManager.as' namespace='happyfish.manager.module' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ModuleManager' fullname='happyfish.manager.module:ModuleManager/ModuleManager' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='ModuleManager.as$64:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='addModule' fullname='happyfish.manager.module:ModuleManager/addModule' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happyfish.manager.module.vo:ModuleVo' param_defaults='undefined' result_type='happyfish.manager.module.interfaces:IModule'>
</method>
<method name='alginModule' fullname='happyfish.manager.module:ModuleManager/private:alginModule' isStatic='false' isFinal='false' isOverride='false'  param_names='moduleName;tween' param_types='String;Boolean' param_defaults='undefined;true' result_type='void'>
</method>
<method name='closeModuleBg' fullname='happyfish.manager.module:ModuleManager/closeModuleBg' isStatic='false' isFinal='false' isOverride='false'  param_names='moduleName' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='closeModule_complete' fullname='happyfish.manager.module:ModuleManager/private:closeModule_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='moduleName;del' param_types='String;Boolean' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='closeModule' fullname='happyfish.manager.module:ModuleManager/closeModule' isStatic='false' isFinal='false' isOverride='false'  param_names='moduleName;del' param_types='String;Boolean' param_defaults='undefined;false' result_type='void'>
</method>
<method name='getInstance' fullname='happyfish.manager.module:ModuleManager/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.manager.module:ModuleManager'>
</method>
<method name='getModuleXY' fullname='happyfish.manager.module:ModuleManager/private:getModuleXY' isStatic='false' isFinal='false' isOverride='false'  param_names='moduleName;type;tx;ty' param_types='String;String;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='flash.geom:Point'>
</method>
<method name='getModule' fullname='happyfish.manager.module:ModuleManager/getModule' isStatic='false' isFinal='false' isOverride='false'  param_names='mname' param_types='String' param_defaults='undefined' result_type='happyfish.manager.module.interfaces:IModule'>
</method>
<method name='initManager' fullname='happyfish.manager.module:ModuleManager/initManager' isStatic='false' isFinal='false' isOverride='false'  param_names='_container;_classManager;_soundManager' param_types='flash.display:DisplayObjectContainer;happyfish.manager.module.interfaces:IClassManager;happyfish.manager.module.interfaces:ISoundManager' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='moudleShowMv' fullname='happyfish.manager.module:ModuleManager/private:moudleShowMv' isStatic='false' isFinal='false' isOverride='false'  param_names='module' param_types='happyfish.manager.module.vo:ModuleVo' param_defaults='undefined' result_type='void'>
</method>
<method name='resize_fun' fullname='happyfish.manager.module:ModuleManager/private:resize_fun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='setData' fullname='happyfish.manager.module:ModuleManager/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='moduleArr' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='setModuleBg' fullname='happyfish.manager.module:ModuleManager/setModuleBg' isStatic='false' isFinal='false' isOverride='false'  param_names='moduleName;bg' param_types='String;flash.display:DisplayObject' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='setSound' fullname='happyfish.manager.module:ModuleManager/setSound' isStatic='false' isFinal='false' isOverride='false'  param_names='_openSound;_closeSound' param_types='flash.media:Sound;flash.media:Sound' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='showModule' fullname='happyfish.manager.module:ModuleManager/showModule' isStatic='false' isFinal='false' isOverride='false'  param_names='moduleName' param_types='String' param_defaults='undefined' result_type='happyfish.manager.module.interfaces:IModule'>
</method>
<field name='classManager' fullname='happyfish.manager.module:ModuleManager/private:classManager' type='happyfish.manager.module.interfaces:IClassManager' isStatic='false' isConst='false' >
</field>
<field name='closeSound' fullname='happyfish.manager.module:ModuleManager/private:closeSound' type='flash.media:Sound' isStatic='false' isConst='false' >
</field>
<field name='container' fullname='happyfish.manager.module:ModuleManager/private:container' type='flash.display:DisplayObjectContainer' isStatic='false' isConst='false' >
</field>
<field name='instance' fullname='happyfish.manager.module:ModuleManager/private:instance' type='happyfish.manager.module:ModuleManager' isStatic='true' isConst='false' >
</field>
<field name='moduleSettings' fullname='happyfish.manager.module:ModuleManager/private:moduleSettings' type='Object' isStatic='false' isConst='false' >
</field>
<field name='modules' fullname='happyfish.manager.module:ModuleManager/private:modules' type='Object' isStatic='false' isConst='false' >
</field>
<field name='openSound' fullname='happyfish.manager.module:ModuleManager/private:openSound' type='flash.media:Sound' isStatic='false' isConst='false' >
</field>
<field name='soundManager' fullname='happyfish.manager.module:ModuleManager/private:soundManager' type='happyfish.manager.module.interfaces:ISoundManager' isStatic='false' isConst='false' >
</field>
<classRec name='IsoSprite' fullname='happyfish.scene.iso:IsoSprite' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\iso\IsoSprite.as' namespace='happyfish.scene.iso' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 负责设置精灵的位置,同样是一个管理类

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='IsoSprite' fullname='happyfish.scene.iso:IsoSprite/IsoSprite' isStatic='false' isFinal='false' isOverride='false'  param_names='$layer' param_types='int' param_defaults='1' result_type='*'>
</method>
<method name='setPos' fullname='happyfish.scene.iso:IsoSprite/setPos' isStatic='false' isFinal='false' isOverride='false'  param_names='$pos' param_types='com.friendsofed.isometric:Point3D' param_defaults='undefined' result_type='void'>
</method>
<method name='back' fullname='happyfish.scene.iso:IsoSprite/back/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='bottom' fullname='happyfish.scene.iso:IsoSprite/bottom/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='depth' fullname='happyfish.scene.iso:IsoSprite/depth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='front' fullname='happyfish.scene.iso:IsoSprite/front/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='grid_size_x' fullname='happyfish.scene.iso:IsoSprite/grid_size_x/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='grid_size_z' fullname='happyfish.scene.iso:IsoSprite/grid_size_z/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='isoHeight' fullname='happyfish.scene.iso:IsoSprite/isoHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='isoWidth' fullname='happyfish.scene.iso:IsoSprite/isoWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='layer' fullname='happyfish.scene.iso:IsoSprite/layer/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='left' fullname='happyfish.scene.iso:IsoSprite/left/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='name' fullname='happyfish.scene.iso:IsoSprite/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='position' fullname='happyfish.scene.iso:IsoSprite/position/get' isStatic='false' isFinal='false' isOverride='false'  result_type='com.friendsofed.isometric:Point3D'>
</method>
<method name='right' fullname='happyfish.scene.iso:IsoSprite/right/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='sortPriority' fullname='happyfish.scene.iso:IsoSprite/sortPriority/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='sortSize' fullname='happyfish.scene.iso:IsoSprite/sortSize/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='top' fullname='happyfish.scene.iso:IsoSprite/top/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='position' fullname='happyfish.scene.iso:IsoSprite/position/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='com.friendsofed.isometric:Point3D' param_defaults='undefined' result_type='void'>
</method>
<method name='sortPriority' fullname='happyfish.scene.iso:IsoSprite/sortPriority/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='_layer' fullname='happyfish.scene.iso:IsoSprite/private:_layer' type='int' isStatic='false' isConst='false' >
</field>
<field name='container' fullname='happyfish.scene.iso:IsoSprite/container' type='com.friendsofed.isometric:IsoObject' isStatic='false' isConst='false' >
</field>
<field name='isoItem' fullname='happyfish.scene.iso:IsoSprite/isoItem' type='happyfish.scene.world.grid:IsoItem' isStatic='false' isConst='false' >
</field>
<field name='next' fullname='happyfish.scene.iso:IsoSprite/next' type='happyfish.scene.iso:IsoSprite' isStatic='false' isConst='false' >
</field>
<field name='parent' fullname='happyfish.scene.iso:IsoSprite/parent' type='happyfish.scene.iso:IsoLayer' isStatic='false' isConst='false' >
</field>
<field name='point' fullname='happyfish.scene.iso:IsoSprite/private:point' type='flash.geom:Point' isStatic='false' isConst='false' >
</field>
<field name='prev' fullname='happyfish.scene.iso:IsoSprite/prev' type='happyfish.scene.iso:IsoSprite' isStatic='false' isConst='false' >
</field>
<classRec name='IsoUtil' fullname='happyfish.scene.iso:IsoUtil' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\iso\IsoUtil.as' namespace='happyfish.scene.iso' access='public' baseclass='com.friendsofed.isometric:IsoUtils' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 工具类,仅仅是避免框架使用者,直接调用最底层的IsoUtils的简单继承

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='IsoUtil' fullname='happyfish.scene.iso:IsoUtil/IsoUtil' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='gridToIso' fullname='happyfish.scene.iso:IsoUtil/gridToIso' isStatic='true' isFinal='false' isOverride='false'  param_names='pos' param_types='com.friendsofed.isometric:Point3D' param_defaults='undefined' result_type='com.friendsofed.isometric:Point3D'>
<description><![CDATA[

		 转换存储的格子3d坐标为实际ISO的3d坐标

		 其实就是还原本身格子的大小

		 ]]></description>
<param><![CDATA[pos

		 ]]></param>
<return><![CDATA[
		 ]]></return>
</method>
<method name='isoToGrid' fullname='happyfish.scene.iso:IsoUtil/isoToGrid' isStatic='true' isFinal='false' isOverride='false'  param_names='pos' param_types='com.friendsofed.isometric:Point3D' param_defaults='undefined' result_type='com.friendsofed.isometric:Point3D'>
</method>
<field name='TILE_SIZE' fullname='happyfish.scene.iso:IsoUtil/TILE_SIZE' type='Number' isStatic='true' isConst='false' defaultValue='32' >
</field>
<field name='roomStart' fullname='happyfish.scene.iso:IsoUtil/roomStart' type='uint' isStatic='true' isConst='false' defaultValue='24' >
</field>
<classRec name='IsoView' fullname='happyfish.scene.iso:IsoView' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\iso\IsoView.as' namespace='happyfish.scene.iso' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 负责显示,这个类最终将被实际加入主显示对象

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='IsoView' fullname='happyfish.scene.iso:IsoView/IsoView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='addIsoChild' fullname='happyfish.scene.iso:IsoView/addIsoChild' isStatic='false' isFinal='false' isOverride='false'  param_names='isoSprite' param_types='happyfish.scene.iso:IsoSprite' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 将IsoSprite放入相应的layer里

		 ]]></description>
<param><![CDATA[isoSprite

		 ]]></param>
</method>
<method name='center' fullname='happyfish.scene.iso:IsoView/center' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='fullCenter' fullname='happyfish.scene.iso:IsoView/fullCenter' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='getLayer' fullname='happyfish.scene.iso:IsoView/getLayer' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='uint' param_defaults='undefined' result_type='flash.display:Sprite'>
</method>
<method name='initialize' fullname='happyfish.scene.iso:IsoView/private:initialize' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='removeIsoChild' fullname='happyfish.scene.iso:IsoView/removeIsoChild' isStatic='false' isFinal='false' isOverride='false'  param_names='isoSprite' param_types='happyfish.scene.iso:IsoSprite' param_defaults='undefined' result_type='void'>
</method>
<field name='NUM_LAYERS' fullname='happyfish.scene.iso:IsoView/NUM_LAYERS' type='int' isStatic='true' isConst='false' defaultValue='4' >
</field>
<field name='backgroundContainer' fullname='happyfish.scene.iso:IsoView/backgroundContainer' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='big_backgroundContainer' fullname='happyfish.scene.iso:IsoView/big_backgroundContainer' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='camera' fullname='happyfish.scene.iso:IsoView/camera' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='layers' fullname='happyfish.scene.iso:IsoView/layers' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='sceneY' fullname='happyfish.scene.iso:IsoView/sceneY' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<classRec name='IsoLayer' fullname='happyfish.scene.iso:IsoLayer' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\iso\IsoLayer.as' namespace='happyfish.scene.iso' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 主要负责各个层的排序

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='IsoLayer' fullname='happyfish.scene.iso:IsoLayer/IsoLayer' isStatic='false' isFinal='false' isOverride='false'  param_names='$iso_view' param_types='happyfish.scene.iso:IsoView' param_defaults='undefined' result_type='*'>
</method>
<method name='addIsoChild' fullname='happyfish.scene.iso:IsoLayer/addIsoChild' isStatic='false' isFinal='false' isOverride='false'  param_names='child' param_types='happyfish.scene.iso:IsoSprite' param_defaults='undefined' result_type='void'>
</method>
<method name='getClickTargetPoint' fullname='happyfish.scene.iso:IsoLayer/getClickTargetPoint' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='inItem' fullname='happyfish.scene.iso:IsoLayer/inItem' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='happyfish.scene.world.grid:IsoItem' param_defaults='undefined' result_type='void'>
</method>
<method name='isoDepthSort' fullname='happyfish.scene.iso:IsoLayer/private:isoDepthSort' isStatic='false' isFinal='false' isOverride='false'  param_names='childA;childB' param_types='Object;Object' param_defaults='undefined;undefined' result_type='int'>
</method>
<method name='nextItemMouseEvent' fullname='happyfish.scene.iso:IsoLayer/nextItemMouseEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='item;e' param_types='happyfish.scene.iso:IsoSprite;flash.events:MouseEvent' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='outItem' fullname='happyfish.scene.iso:IsoLayer/outItem' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='removeIsoChild' fullname='happyfish.scene.iso:IsoLayer/removeIsoChild' isStatic='false' isFinal='false' isOverride='false'  param_names='$isoSprite' param_types='happyfish.scene.iso:IsoSprite' param_defaults='undefined' result_type='void'>
</method>
<method name='sortFun' fullname='happyfish.scene.iso:IsoLayer/private:sortFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='sort' fullname='happyfish.scene.iso:IsoLayer/sort' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='_objects' fullname='happyfish.scene.iso:IsoLayer/protected:_objects' type='Array' isStatic='false' isConst='false' >
</field>
<field name='curOverItem' fullname='happyfish.scene.iso:IsoLayer/private:curOverItem' type='happyfish.scene.world.grid:IsoItem' isStatic='false' isConst='false' >
</field>
<field name='needSort' fullname='happyfish.scene.iso:IsoLayer/private:needSort' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='parentView' fullname='happyfish.scene.iso:IsoLayer/parentView' type='happyfish.scene.iso:IsoView' isStatic='false' isConst='false' >
</field>
<field name='sortCount' fullname='happyfish.scene.iso:IsoLayer/private:sortCount' type='uint' isStatic='false' isConst='false' >
</field>
<field name='sortDelay' fullname='happyfish.scene.iso:IsoLayer/private:sortDelay' type='uint' isStatic='false' isConst='false' defaultValue='10' >
</field>
<classRec name='ArrayUtil' fullname='com.adobe.utils:ArrayUtil' sourcefile='E:\work\happyMagic\src\client\libs\com\adobe\utils\ArrayUtil.as' namespace='com.adobe.utils' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

		Class that contains static utility methods for manipulating and working

	with Arrays.

	

	Note that all APIs assume that they are working with well formed arrays.

	i.e. they will only manipulate indexed values.  

	

		]]></description>
<langversion><![CDATA[ActionScript 3.0

	]]></langversion>
<playerversion><![CDATA[Flash 9.0

	]]></playerversion>
<tiptext><![CDATA[
	]]></tiptext>
</classRec>
<method name='arrayContainsValue' fullname='com.adobe.utils:ArrayUtil/arrayContainsValue' isStatic='true' isFinal='false' isOverride='false'  param_names='arr;value' param_types='Array;Object' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		Determines whether the specified array contains the specified value.	

		

			]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[arr The array that will be checked for the specified value.

		
		]]></param>
<param><![CDATA[value The object which will be searched for within the array

		

			]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<return><![CDATA[True if the array contains the value, False if it does not.

		
			]]></return>
<tiptext><![CDATA[
		]]></tiptext>
</method>
<method name='arraysAreEqual' fullname='com.adobe.utils:ArrayUtil/arraysAreEqual' isStatic='true' isFinal='false' isOverride='false'  param_names='arr1;arr2' param_types='Array;Array' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		Compares two arrays and returns a boolean indicating whether the arrays

		contain the same values at the same indexes.

		

			]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[arr1 The first array that will be compared to the second.

		
			]]></param>
<param><![CDATA[arr2 The second array that will be compared to the first.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<return><![CDATA[True if the arrays contains the same values at the same indexes.

			False if they do not.

		
			]]></return>
<tiptext><![CDATA[
		]]></tiptext>
</method>
<method name='copyArray' fullname='com.adobe.utils:ArrayUtil/copyArray' isStatic='true' isFinal='false' isOverride='false'  param_names='arr' param_types='Array' param_defaults='undefined' result_type='Array'>
<description><![CDATA[

		Creates a copy of the specified array.

		
		Note that the array returned is a new array but the items within the

		array are not copies of the items in the original array (but rather 

		references to the same items)

		

			]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[arr The array that will be copies

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<return><![CDATA[A new array which contains the same items as the array passed

		in.

		
			]]></return>
<tiptext><![CDATA[
		]]></tiptext>
</method>
<method name='createUniqueCopy' fullname='com.adobe.utils:ArrayUtil/createUniqueCopy' isStatic='true' isFinal='false' isOverride='false'  param_names='a' param_types='Array' param_defaults='undefined' result_type='Array'>
<description><![CDATA[

		Create a new array that only contains unique instances of objects

		in the specified array.

		
		Basically, this can be used to remove duplication object instances

		from an array

		

			]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[arr The array which contains the values that will be used to

		create the new array that contains no duplicate values.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<return><![CDATA[A new array which only contains unique items from the specified

		array.

		
			]]></return>
<tiptext><![CDATA[
		]]></tiptext>
</method>
<method name='removeValueFromArray' fullname='com.adobe.utils:ArrayUtil/removeValueFromArray' isStatic='true' isFinal='false' isOverride='false'  param_names='arr;value' param_types='Array;Object' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		Remove all instances of the specified value from the array,

		

			]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[arr The array from which the value will be removed

		
		]]></param>
<param><![CDATA[value The object that will be removed from the array.

		
			]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
</method>
<classRec name='GuidesState' fullname='happyfish.model.vo:GuidesState' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\model\vo\GuidesState.as' namespace='happyfish.model.vo' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='GuidesState' fullname='happyfish.model.vo:GuidesState/GuidesState' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='FINISHED' fullname='happyfish.model.vo:GuidesState/FINISHED' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='UNFINISH' fullname='happyfish.model.vo:GuidesState/UNFINISH' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<classRec name='GuidesClassVo' fullname='happyfish.model.vo:GuidesClassVo' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\model\vo\GuidesClassVo.as' namespace='happyfish.model.vo' access='public' baseclass='happymagic.model.vo:BasicVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='GuidesClassVo' fullname='happyfish.model.vo:GuidesClassVo/GuidesClassVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='setData' fullname='happyfish.model.vo:GuidesClassVo/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='happymagic.model.vo:BasicVo'>
</method>
<method name='endStepEvent' fullname='happyfish.model.vo:GuidesClassVo/endStepEvent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='endStepEvent' fullname='happyfish.model.vo:GuidesClassVo/endStepEvent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='actTips' fullname='happyfish.model.vo:GuidesClassVo/actTips' type='Array' isStatic='false' isConst='false' >
</field>
<field name='chats' fullname='happyfish.model.vo:GuidesClassVo/chats' type='Array' isStatic='false' isConst='false' >
</field>
<field name='eventType' fullname='happyfish.model.vo:GuidesClassVo/eventType' type='Array' isStatic='false' isConst='false' >
</field>
<field name='gid' fullname='happyfish.model.vo:GuidesClassVo/gid' type='uint' isStatic='false' isConst='false' >
</field>
<field name='icon' fullname='happyfish.model.vo:GuidesClassVo/icon' type='String' isStatic='false' isConst='false' >
</field>
<field name='index' fullname='happyfish.model.vo:GuidesClassVo/index' type='uint' isStatic='false' isConst='false' >
</field>
<field name='name' fullname='happyfish.model.vo:GuidesClassVo/name' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='GuidesVo' fullname='happyfish.model.vo:GuidesVo' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\model\vo\GuidesVo.as' namespace='happyfish.model.vo' access='public' baseclass='happyfish.model.vo:GuidesClassVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='GuidesVo' fullname='happyfish.model.vo:GuidesVo/GuidesVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='setValue' fullname='happyfish.model.vo:GuidesVo/setValue' isStatic='false' isFinal='false' isOverride='false'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='happyfish.model.vo:GuidesVo'>
</method>
<field name='state' fullname='happyfish.model.vo:GuidesVo/state' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='CustomTools' fullname='happyfish.utils:CustomTools' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\utils\CustomTools.as' namespace='happyfish.utils' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='CustomTools' fullname='happyfish.utils:CustomTools/CustomTools' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='customFromArray' fullname='happyfish.utils:CustomTools/customFromArray' isStatic='true' isFinal='false' isOverride='false'  param_names='arr;except;del' param_types='Array;*;Boolean' param_defaults='undefined;null;false' result_type='*'>
</method>
<method name='customInt' fullname='happyfish.utils:CustomTools/customInt' isStatic='true' isFinal='false' isOverride='false'  param_names='min;max' param_types='int;int' param_defaults='undefined;undefined' result_type='int'>
</method>
<classRec name='SysTracer' fullname='happyfish.utils:SysTracer' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\utils\SysTracer.as' namespace='happyfish.utils' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='SysTracer' fullname='happyfish.utils:SysTracer/SysTracer' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='systrace' fullname='happyfish.utils:SysTracer/systrace' isStatic='true' isFinal='false' isOverride='false'  param_names='rest' param_types='restParam' param_defaults='undefined' result_type='void'>
</method>
<classRec name='DateTools' fullname='happyfish.utils:DateTools' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\utils\DateTools.as' namespace='happyfish.utils' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
</classRec>
<method name='DateTools' fullname='happyfish.utils:DateTools/DateTools' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='getDateString' fullname='happyfish.utils:DateTools/getDateString' isStatic='true' isFinal='false' isOverride='false'  param_names='time;sp' param_types='Date;String' param_defaults='undefined;/' result_type='String'>
</method>
<method name='getHoursTimeStr' fullname='happyfish.utils:DateTools/getHoursTimeStr' isStatic='true' isFinal='false' isOverride='false'  param_names='time' param_types='Date' param_defaults='undefined' result_type='String'>
</method>
<method name='getLostTime' fullname='happyfish.utils:DateTools/getLostTime' isStatic='true' isFinal='false' isOverride='false'  param_names='value;showSec;dayStr;hourStr;minStr;secStr;allShow' param_types='uint;Boolean;String;String;String;String;Boolean' param_defaults='undefined;true;天;时;分;秒;false' result_type='String'>
<description><![CDATA[

		 获得还剩多少时间文字

		 ]]></description>
<param><![CDATA[value	毫秒

		 ]]></param>
<param><![CDATA[showSec

		 ]]></param>
<param><![CDATA[dayStr

		 ]]></param>
<param><![CDATA[hourStr

		 ]]></param>
<param><![CDATA[minStr

		 ]]></param>
<param><![CDATA[secStr

		 ]]></param>
<return><![CDATA[
		 ]]></return>
</method>
<method name='getTimeStringMin' fullname='happyfish.utils:DateTools/getTimeStringMin' isStatic='true' isFinal='false' isOverride='false'  param_names='time;sp' param_types='Date;String' param_defaults='undefined;:' result_type='String'>
</method>
<method name='getTimeString' fullname='happyfish.utils:DateTools/getTimeString' isStatic='true' isFinal='false' isOverride='false'  param_names='time;sp' param_types='Date;String' param_defaults='undefined;:' result_type='String'>
</method>
<method name='unix2ASDate' fullname='happyfish.utils:DateTools/unix2ASDate' isStatic='true' isFinal='false' isOverride='false'  param_names='val' param_types='uint' param_defaults='undefined' result_type='String'>
</method>
<classRec name='HtmlTextTools' fullname='happyfish.utils:HtmlTextTools' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\utils\HtmlTextTools.as' namespace='happyfish.utils' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
</classRec>
<method name='HtmlTextTools' fullname='happyfish.utils:HtmlTextTools/HtmlTextTools' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='blueWords' fullname='happyfish.utils:HtmlTextTools/blueWords' isStatic='true' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='String'>
</method>
<method name='fontWord' fullname='happyfish.utils:HtmlTextTools/fontWord' isStatic='true' isFinal='false' isOverride='false'  param_names='str;color;size;font' param_types='String;String;uint;String' param_defaults='undefined;#000000;0;' result_type='String'>
</method>
<method name='greenWords' fullname='happyfish.utils:HtmlTextTools/greenWords' isStatic='true' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='String'>
</method>
<method name='linkTo' fullname='happyfish.utils:HtmlTextTools/linkTo' isStatic='true' isFinal='false' isOverride='false'  param_names='str;url;type' param_types='String;String;String' param_defaults='undefined;undefined;blank' result_type='String'>
</method>
<method name='redWords' fullname='happyfish.utils:HtmlTextTools/redWords' isStatic='true' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='String'>
</method>
<method name='setTxtSaveFormat' fullname='happyfish.utils:HtmlTextTools/setTxtSaveFormat' isStatic='true' isFinal='false' isOverride='false'  param_names='field;str;color' param_types='flash.text:TextField;String;Number' param_defaults='undefined;undefined;0' result_type='void'>
</method>
<field name='defaultFont' fullname='happyfish.utils:HtmlTextTools/defaultFont' type='String' isStatic='true' isConst='false' >
</field>
<field name='defaultSize' fullname='happyfish.utils:HtmlTextTools/defaultSize' type='uint' isStatic='true' isConst='false' >
</field>
<packageRec name='happyfish.utils.null' fullname='happyfish.utils.null'>
<description><![CDATA[

...

]]></description>
<author><![CDATA[Default

]]></author>
<version><![CDATA[0.1

]]></version>
</packageRec>
<classRec name='Base64' fullname='happyfish.utils:Base64' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\utils\Base64.as' namespace='happyfish.utils' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='Base64' fullname='happyfish.utils:Base64/Base64' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='decodeToByteArray' fullname='happyfish.utils:Base64/decodeToByteArray' isStatic='true' isFinal='false' isOverride='false'  param_names='data' param_types='String' param_defaults='undefined' result_type='flash.utils:ByteArray'>
</method>
<method name='decode' fullname='happyfish.utils:Base64/decode' isStatic='true' isFinal='false' isOverride='false'  param_names='data' param_types='String' param_defaults='undefined' result_type='String'>
</method>
<method name='encodeByteArray' fullname='happyfish.utils:Base64/encodeByteArray' isStatic='true' isFinal='false' isOverride='false'  param_names='data' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='String'>
</method>
<method name='encode' fullname='happyfish.utils:Base64/encode' isStatic='true' isFinal='false' isOverride='false'  param_names='data' param_types='String' param_defaults='undefined' result_type='String'>
</method>
<field name='BASE64_CHARS' fullname='happyfish.utils:Base64/private:BASE64_CHARS' type='String' isStatic='true' isConst='true' defaultValue='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=' >
</field>
<field name='version' fullname='happyfish.utils:Base64/version' type='String' isStatic='true' isConst='true' defaultValue='1.0.0' >
</field>
<packageRec name='happyfish.utils.null' fullname='happyfish.utils.null'>
<description><![CDATA[

...

]]></description>
<author><![CDATA[Default

]]></author>
<version><![CDATA[0.1

]]></version>
</packageRec>
<classRec name='StringTools' fullname='happyfish.utils:StringTools' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\utils\StringTools.as' namespace='happyfish.utils' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='StringTools' fullname='happyfish.utils:StringTools/StringTools' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='beginsWith' fullname='happyfish.utils:StringTools/beginsWith' isStatic='true' isFinal='false' isOverride='false'  param_names='char;prefix' param_types='String;String' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='endsWith' fullname='happyfish.utils:StringTools/endsWith' isStatic='true' isFinal='false' isOverride='false'  param_names='char;suffix' param_types='String;String' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='equalsIgnoreCase' fullname='happyfish.utils:StringTools/equalsIgnoreCase' isStatic='true' isFinal='false' isOverride='false'  param_names='char1;char2' param_types='String;String' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='equals' fullname='happyfish.utils:StringTools/equals' isStatic='true' isFinal='false' isOverride='false'  param_names='char1;char2' param_types='String;String' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='hasAccountChar' fullname='happyfish.utils:StringTools/hasAccountChar' isStatic='true' isFinal='false' isOverride='false'  param_names='char;len' param_types='String;uint' param_defaults='undefined;15' result_type='Boolean'>
</method>
<method name='hasChineseChar' fullname='happyfish.utils:StringTools/hasChineseChar' isStatic='true' isFinal='false' isOverride='false'  param_names='char' param_types='String' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='isChinese' fullname='happyfish.utils:StringTools/isChinese' isStatic='true' isFinal='false' isOverride='false'  param_names='char' param_types='String' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='isDoubleChar' fullname='happyfish.utils:StringTools/isDoubleChar' isStatic='true' isFinal='false' isOverride='false'  param_names='char' param_types='String' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='isDouble' fullname='happyfish.utils:StringTools/isDouble' isStatic='true' isFinal='false' isOverride='false'  param_names='char' param_types='String' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='isEmail' fullname='happyfish.utils:StringTools/isEmail' isStatic='true' isFinal='false' isOverride='false'  param_names='char' param_types='String' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='isEnglish' fullname='happyfish.utils:StringTools/isEnglish' isStatic='true' isFinal='false' isOverride='false'  param_names='char' param_types='String' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='isInteger' fullname='happyfish.utils:StringTools/isInteger' isStatic='true' isFinal='false' isOverride='false'  param_names='char' param_types='String' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='isNumber' fullname='happyfish.utils:StringTools/isNumber' isStatic='true' isFinal='false' isOverride='false'  param_names='char' param_types='*' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='isURL' fullname='happyfish.utils:StringTools/isURL' isStatic='true' isFinal='false' isOverride='false'  param_names='char' param_types='String' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='isWhitespace' fullname='happyfish.utils:StringTools/isWhitespace' isStatic='true' isFinal='false' isOverride='false'  param_names='char' param_types='String' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='ltrim' fullname='happyfish.utils:StringTools/ltrim' isStatic='true' isFinal='false' isOverride='false'  param_names='char' param_types='String' param_defaults='undefined' result_type='String'>
</method>
<method name='remove' fullname='happyfish.utils:StringTools/remove' isStatic='true' isFinal='false' isOverride='false'  param_names='char;remove' param_types='String;String' param_defaults='undefined;undefined' result_type='String'>
</method>
<method name='replace' fullname='happyfish.utils:StringTools/replace' isStatic='true' isFinal='false' isOverride='false'  param_names='char;replace;replaceWith' param_types='String;String;String' param_defaults='undefined;undefined;undefined' result_type='String'>
</method>
<method name='rtrim' fullname='happyfish.utils:StringTools/rtrim' isStatic='true' isFinal='false' isOverride='false'  param_names='char' param_types='String' param_defaults='undefined' result_type='String'>
</method>
<method name='trim' fullname='happyfish.utils:StringTools/trim' isStatic='true' isFinal='false' isOverride='false'  param_names='char' param_types='String' param_defaults='undefined' result_type='String'>
</method>
<method name='utf16to8' fullname='happyfish.utils:StringTools/utf16to8' isStatic='true' isFinal='false' isOverride='false'  param_names='char' param_types='String' param_defaults='undefined' result_type='String'>
</method>
<method name='utf8to16' fullname='happyfish.utils:StringTools/utf8to16' isStatic='true' isFinal='false' isOverride='false'  param_names='char' param_types='String' param_defaults='undefined' result_type='String'>
</method>
<classRec name='JSON' fullname='com.adobe.serialization.json:JSON' sourcefile='E:\work\happyMagic\src\client\libs\com\adobe\serialization\json\JSON.as' namespace='com.adobe.serialization.json' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This class provides encoding and decoding of the JSON format.

	 
	 Example usage:

	 <code>

	 		// create a JSON string from an internal object

	 		JSON.encode( myObject );

	 
	 	// read a JSON string into an internal object

	 	var myObject:Object = JSON.decode( jsonString );

	 </code>

	 ]]></description>
</classRec>
<method name='decode' fullname='com.adobe.serialization.json:JSON/decode' isStatic='true' isFinal='false' isOverride='false'  param_names='s;strict' param_types='String;Boolean' param_defaults='undefined;true' result_type='*'>
<description><![CDATA[

		 Decodes a JSON string into a native object.

		 

		 ]]></description>
<langversion><![CDATA[ActionScript 3.0

		 ]]></langversion>
<param><![CDATA[s The JSON string representing the object

		 ]]></param>
<param><![CDATA[strict Flag indicating if the decoder should strictly adhere

		 		to the JSON standard or not.  The default of <code>true</code>

		 		throws errors if the format does not match the JSON syntax exactly.

		 		Pass <code>false</code> to allow for non-properly-formatted JSON

		 		strings to be decoded with more leniancy.

		 ]]></param>
<playerversion><![CDATA[Flash 9.0

		 ]]></playerversion>
<return><![CDATA[A native object as specified by s

		 ]]></return>
<tiptext><![CDATA[
		 ]]></tiptext>
<throw><![CDATA[JSONParseError

		 ]]></throw>
</method>
<method name='encode' fullname='com.adobe.serialization.json:JSON/encode' isStatic='true' isFinal='false' isOverride='false'  param_names='o' param_types='Object' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		 Encodes a object into a JSON string.

		 
		 ]]></description>
<langversion><![CDATA[ActionScript 3.0

		 ]]></langversion>
<param><![CDATA[o The object to create a JSON string for

		 ]]></param>
<playerversion><![CDATA[Flash 9.0

		 ]]></playerversion>
<return><![CDATA[the JSON string representing o

		 ]]></return>
<tiptext><![CDATA[
		 ]]></tiptext>
</method>
<classRec name='JSONDecoder' fullname='com.adobe.serialization.json:JSONDecoder' sourcefile='E:\work\happyMagic\src\client\libs\com\adobe\serialization\json\JSONDecoder.as' namespace='com.adobe.serialization.json' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='JSONDecoder' fullname='com.adobe.serialization.json:JSONDecoder/JSONDecoder' isStatic='false' isFinal='false' isOverride='false'  param_names='s;strict' param_types='String;Boolean' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[

		 Constructs a new JSONDecoder to parse a JSON string 

		 into a native object.

		 
		 ]]></description>
<langversion><![CDATA[ActionScript 3.0

		 ]]></langversion>
<param><![CDATA[s The JSON string to be converted

		 	into a native object

		 ]]></param>
<param><![CDATA[strict Flag indicating if the JSON string needs to

		 		strictly match the JSON standard or not.

		 ]]></param>
<playerversion><![CDATA[Flash 9.0

		 ]]></playerversion>
<tiptext><![CDATA[
		 ]]></tiptext>
</method>
<method name='getValue' fullname='com.adobe.serialization.json:JSONDecoder/getValue' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Gets the internal object that was created by parsing

		 the JSON string passed to the constructor.

		 
		 ]]></description>
<langversion><![CDATA[ActionScript 3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 9.0

		 ]]></playerversion>
<return><![CDATA[The internal object representation of the JSON

		 		string that was passed to the constructor

		 ]]></return>
<tiptext><![CDATA[
		 ]]></tiptext>
</method>
<method name='nextToken' fullname='com.adobe.serialization.json:JSONDecoder/private:nextToken' isStatic='false' isFinal='false' isOverride='false'  result_type='com.adobe.serialization.json:JSONToken'>
<description><![CDATA[

		 Returns the next token from the tokenzier reading

		 the JSON string

		 ]]></description>
</method>
<method name='parseArray' fullname='com.adobe.serialization.json:JSONDecoder/private:parseArray' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[

		 Attempt to parse an array.

		 ]]></description>
</method>
<method name='parseObject' fullname='com.adobe.serialization.json:JSONDecoder/private:parseObject' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[

		 Attempt to parse an object.

		 ]]></description>
</method>
<method name='parseValue' fullname='com.adobe.serialization.json:JSONDecoder/private:parseValue' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[

		 Attempt to parse a value

		 ]]></description>
</method>
<field name='strict' fullname='com.adobe.serialization.json:JSONDecoder/private:strict' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ 

		 Flag indicating if the parser should be strict about the format

		 of the JSON string it is attempting to decode.

		 ]]></description>
</field>
<field name='token' fullname='com.adobe.serialization.json:JSONDecoder/private:token' type='com.adobe.serialization.json:JSONToken' isStatic='false' isConst='false' >
<description><![CDATA[ The current token from the tokenizer ]]></description>
</field>
<field name='tokenizer' fullname='com.adobe.serialization.json:JSONDecoder/private:tokenizer' type='com.adobe.serialization.json:JSONTokenizer' isStatic='false' isConst='false' >
<description><![CDATA[ The tokenizer designated to read the JSON string ]]></description>
</field>
<field name='value' fullname='com.adobe.serialization.json:JSONDecoder/private:value' type='' isStatic='false' isConst='false' >
<description><![CDATA[ The value that will get parsed from the JSON string ]]></description>
</field>
<classRec name='JSONEncoder' fullname='com.adobe.serialization.json:JSONEncoder' sourcefile='E:\work\happyMagic\src\client\libs\com\adobe\serialization\json\JSONEncoder.as' namespace='com.adobe.serialization.json' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='JSONEncoder' fullname='com.adobe.serialization.json:JSONEncoder/JSONEncoder' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='*'>
<description><![CDATA[

		 Creates a new JSONEncoder.

		 
		 ]]></description>
<langversion><![CDATA[ActionScript 3.0

		 ]]></langversion>
<param><![CDATA[o The object to encode as a JSON string

		 ]]></param>
<playerversion><![CDATA[Flash 9.0

		 ]]></playerversion>
<tiptext><![CDATA[
		 ]]></tiptext>
</method>
<method name='arrayToString' fullname='com.adobe.serialization.json:JSONEncoder/private:arrayToString' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='Array' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		 Converts an array to it's JSON string equivalent

		 
		 ]]></description>
<param><![CDATA[a The array to convert

		 ]]></param>
<return><![CDATA[The JSON string representation of <code>a</code>

		 ]]></return>
</method>
<method name='convertToString' fullname='com.adobe.serialization.json:JSONEncoder/private:convertToString' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		 Converts a value to it's JSON string equivalent.

		 
		 ]]></description>
<param><![CDATA[value The value to convert.  Could be any 

		 	type (object, number, array, etc)

		 ]]></param>
</method>
<method name='escapeString' fullname='com.adobe.serialization.json:JSONEncoder/private:escapeString' isStatic='false' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		 Escapes a string accoding to the JSON specification.

		 
		 ]]></description>
<param><![CDATA[str The string to be escaped

		 ]]></param>
<return><![CDATA[The string with escaped special characters

		 		according to the JSON specification

		 ]]></return>
</method>
<method name='getString' fullname='com.adobe.serialization.json:JSONEncoder/getString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 Gets the JSON string from the encoder.

		 
		 ]]></description>
<langversion><![CDATA[ActionScript 3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 9.0

		 ]]></playerversion>
<return><![CDATA[The JSON string representation of the object

		 		that was passed to the constructor

		 ]]></return>
<tiptext><![CDATA[
		 ]]></tiptext>
</method>
<method name='objectToString' fullname='com.adobe.serialization.json:JSONEncoder/private:objectToString' isStatic='false' isFinal='false' isOverride='false'  param_names='o' param_types='Object' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		 Converts an object to it's JSON string equivalent

		 
		 ]]></description>
<param><![CDATA[o The object to convert

		 ]]></param>
<return><![CDATA[The JSON string representation of <code>o</code>

		 ]]></return>
</method>
<field name='jsonString' fullname='com.adobe.serialization.json:JSONEncoder/private:jsonString' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ The string that is going to represent the object we're encoding ]]></description>
</field>
<classRec name='JSONToken' fullname='com.adobe.serialization.json:JSONToken' sourcefile='E:\work\happyMagic\src\client\libs\com\adobe\serialization\json\JSONToken.as' namespace='com.adobe.serialization.json' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='JSONToken' fullname='com.adobe.serialization.json:JSONToken/JSONToken' isStatic='false' isFinal='false' isOverride='false'  param_names='type;value' param_types='int;Object' param_defaults='-1;null' result_type='*'>
<description><![CDATA[

		 Creates a new JSONToken with a specific token type and value.

		 
		 ]]></description>
<langversion><![CDATA[ActionScript 3.0

		 ]]></langversion>
<param><![CDATA[type The JSONTokenType of the token

		 ]]></param>
<param><![CDATA[value The value of the token

		 ]]></param>
<playerversion><![CDATA[Flash 9.0

		 ]]></playerversion>
<tiptext><![CDATA[
		 ]]></tiptext>
</method>
<method name='type' fullname='com.adobe.serialization.json:JSONToken/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns the type of the token.

		 
		 ]]></description>
<langversion><![CDATA[ActionScript 3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 9.0

		 ]]></playerversion>
<see><![CDATA[com.adobe.serialization.json.JSONTokenType

		 ]]></see>
<tiptext><![CDATA[
		 ]]></tiptext>
</method>
<method name='value' fullname='com.adobe.serialization.json:JSONToken/value/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[

		 Gets the value of the token

		 
		 ]]></description>
<langversion><![CDATA[ActionScript 3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 9.0

		 ]]></playerversion>
<see><![CDATA[com.adobe.serialization.json.JSONTokenType

		 ]]></see>
<tiptext><![CDATA[
		 ]]></tiptext>
</method>
<method name='type' fullname='com.adobe.serialization.json:JSONToken/type/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Sets the type of the token.

		 
		 ]]></description>
<langversion><![CDATA[ActionScript 3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 9.0

		 ]]></playerversion>
<see><![CDATA[com.adobe.serialization.json.JSONTokenType

		 ]]></see>
<tiptext><![CDATA[
		 ]]></tiptext>
</method>
<method name='value' fullname='com.adobe.serialization.json:JSONToken/value/set' isStatic='false' isFinal='false' isOverride='false'  param_names='v' param_types='Object' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Sets the value of the token

		 
		 ]]></description>
<langversion><![CDATA[ActionScript 3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 9.0

		 ]]></playerversion>
<see><![CDATA[com.adobe.serialization.json.JSONTokenType

		 ]]></see>
<tiptext><![CDATA[
		 ]]></tiptext>
</method>
<field name='_type' fullname='com.adobe.serialization.json:JSONToken/private:_type' type='int' isStatic='false' isConst='false' >
</field>
<field name='_value' fullname='com.adobe.serialization.json:JSONToken/private:_value' type='Object' isStatic='false' isConst='false' >
</field>
<classRec name='JSONTokenizer' fullname='com.adobe.serialization.json:JSONTokenizer' sourcefile='E:\work\happyMagic\src\client\libs\com\adobe\serialization\json\JSONTokenizer.as' namespace='com.adobe.serialization.json' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='JSONTokenizer' fullname='com.adobe.serialization.json:JSONTokenizer/JSONTokenizer' isStatic='false' isFinal='false' isOverride='false'  param_names='s;strict' param_types='String;Boolean' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[
		 Constructs a new JSONDecoder to parse a JSON string 
		 into a native object.
		 		 ]]></description>
<param><![CDATA[s The JSON string to be converted
		 	into a native object
		 ]]></param>
</method>
<method name='getNextToken' fullname='com.adobe.serialization.json:JSONTokenizer/getNextToken' isStatic='false' isFinal='false' isOverride='false'  result_type='com.adobe.serialization.json:JSONToken'>
<description><![CDATA[
		 Gets the next token in the input sting and advances
		the character to the next character after the token
		 ]]></description>
</method>
<method name='isDigit' fullname='com.adobe.serialization.json:JSONTokenizer/private:isDigit' isStatic='false' isFinal='false' isOverride='false'  param_names='ch' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 Determines if a character is a digit [0-9].
		 		 ]]></description>
<return><![CDATA[True if the character passed in is a digit
		 ]]></return>
</method>
<method name='isHexDigit' fullname='com.adobe.serialization.json:JSONTokenizer/private:isHexDigit' isStatic='false' isFinal='false' isOverride='false'  param_names='ch' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 Determines if a character is a hex digit [0-9A-Fa-f].
		 		 ]]></description>
<return><![CDATA[True if the character passed in is a hex digit
		 ]]></return>
</method>
<method name='isWhiteSpace' fullname='com.adobe.serialization.json:JSONTokenizer/private:isWhiteSpace' isStatic='false' isFinal='false' isOverride='false'  param_names='ch' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 Determines if a character is whitespace or not.
		 		 ]]></description>
<return><![CDATA[True if the character passed in is a whitespace
		 character
		 ]]></return>
</method>
<method name='nextChar' fullname='com.adobe.serialization.json:JSONTokenizer/private:nextChar' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Reads the next character in the input
		 string and advances the character location.
		 		 ]]></description>
<return><![CDATA[The next character in the input string, or
		 	null if we've read past the end.
		 ]]></return>
</method>
<method name='parseError' fullname='com.adobe.serialization.json:JSONTokenizer/parseError' isStatic='false' isFinal='false' isOverride='false'  param_names='message' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Raises a parsing error with a specified message, tacking
		 on the error location and the original string.
		 		 ]]></description>
<param><![CDATA[message The message indicating why the error occurred
		 ]]></param>
</method>
<method name='readNumber' fullname='com.adobe.serialization.json:JSONTokenizer/private:readNumber' isStatic='false' isFinal='false' isOverride='false'  result_type='com.adobe.serialization.json:JSONToken'>
<description><![CDATA[
		 Attempts to read a number from the input string.  Places
		 the character location at the first character after the
		 number.
		 
		 ]]></description>
<return><![CDATA[The JSONToken with the number value if a number could
		 		be read.  Throws an error otherwise.
		 ]]></return>
</method>
<method name='readString' fullname='com.adobe.serialization.json:JSONTokenizer/private:readString' isStatic='false' isFinal='false' isOverride='false'  result_type='com.adobe.serialization.json:JSONToken'>
<description><![CDATA[
		 Attempts to read a string from the input string.  Places
		 the character location at the first character after the
		 string.  It is assumed that ch is " before this method is called.
		 		 ]]></description>
<return><![CDATA[the JSONToken with the string value if a string could
		 	be read.  Throws an error otherwise.
		 ]]></return>
</method>
<method name='skipComments' fullname='com.adobe.serialization.json:JSONTokenizer/private:skipComments' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Skips comments in the input string, either
		 single-line or multi-line.  Advances the character
		 to the first position after the end of the comment.
		 ]]></description>
</method>
<method name='skipIgnored' fullname='com.adobe.serialization.json:JSONTokenizer/private:skipIgnored' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Advances the character location past any
		 sort of white space and comments
		 ]]></description>
</method>
<method name='skipWhite' fullname='com.adobe.serialization.json:JSONTokenizer/private:skipWhite' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Skip any whitespace in the input string and advances
		 the character to the first character after any possible
		 whitespace.
		 ]]></description>
</method>
<method name='unescapeString' fullname='com.adobe.serialization.json:JSONTokenizer/unescapeString' isStatic='false' isFinal='false' isOverride='false'  param_names='input' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[
		 Convert all JavaScript escape characters into normal characters
		 		 ]]></description>
<param><![CDATA[input The input string to convert
		 ]]></param>
<return><![CDATA[Original string with escape characters replaced by real characters
		 ]]></return>
</method>
<field name='ch' fullname='com.adobe.serialization.json:JSONTokenizer/private:ch' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ The current character in the JSON string during parsing ]]></description>
</field>
<field name='controlCharsRegExp' fullname='com.adobe.serialization.json:JSONTokenizer/private:controlCharsRegExp' type='RegExp' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[ 
		 The regular expression used to make sure the string does not
		 contain invalid control characters.
		 ]]></description>
</field>
<field name='jsonString' fullname='com.adobe.serialization.json:JSONTokenizer/private:jsonString' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ The JSON string to be parsed ]]></description>
</field>
<field name='loc' fullname='com.adobe.serialization.json:JSONTokenizer/private:loc' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ The current parsing location in the JSON string ]]></description>
</field>
<field name='obj' fullname='com.adobe.serialization.json:JSONTokenizer/private:obj' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[ The object that will get parsed from the JSON string ]]></description>
</field>
<field name='strict' fullname='com.adobe.serialization.json:JSONTokenizer/private:strict' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ 
		 Flag indicating if the tokenizer should only recognize
		 standard JSON tokens.  Setting to <code>false</code> allows
		 tokens such as NaN and allows numbers to be formatted as
		 hex, etc.
		 ]]></description>
</field>
<classRec name='JSONTokenType' fullname='com.adobe.serialization.json:JSONTokenType' sourcefile='E:\work\happyMagic\src\client\libs\com\adobe\serialization\json\JSONTokenType.as' namespace='com.adobe.serialization.json' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Class containing constant values for the different types

	 of tokens in a JSON encoded string.

	 ]]></description>
</classRec>
<field name='COLON' fullname='com.adobe.serialization.json:JSONTokenType/COLON' type='int' isStatic='true' isConst='true' defaultValue='6' >
</field>
<field name='COMMA' fullname='com.adobe.serialization.json:JSONTokenType/COMMA' type='int' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='FALSE' fullname='com.adobe.serialization.json:JSONTokenType/FALSE' type='int' isStatic='true' isConst='true' defaultValue='8' >
</field>
<field name='LEFT_BRACE' fullname='com.adobe.serialization.json:JSONTokenType/LEFT_BRACE' type='int' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='LEFT_BRACKET' fullname='com.adobe.serialization.json:JSONTokenType/LEFT_BRACKET' type='int' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='NAN' fullname='com.adobe.serialization.json:JSONTokenType/NAN' type='int' isStatic='true' isConst='true' defaultValue='12' >
</field>
<field name='NULL' fullname='com.adobe.serialization.json:JSONTokenType/NULL' type='int' isStatic='true' isConst='true' defaultValue='9' >
</field>
<field name='NUMBER' fullname='com.adobe.serialization.json:JSONTokenType/NUMBER' type='int' isStatic='true' isConst='true' defaultValue='11' >
</field>
<field name='RIGHT_BRACE' fullname='com.adobe.serialization.json:JSONTokenType/RIGHT_BRACE' type='int' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='RIGHT_BRACKET' fullname='com.adobe.serialization.json:JSONTokenType/RIGHT_BRACKET' type='int' isStatic='true' isConst='true' defaultValue='4' >
</field>
<field name='STRING' fullname='com.adobe.serialization.json:JSONTokenType/STRING' type='int' isStatic='true' isConst='true' defaultValue='10' >
</field>
<field name='TRUE' fullname='com.adobe.serialization.json:JSONTokenType/TRUE' type='int' isStatic='true' isConst='true' defaultValue='7' >
</field>
<field name='UNKNOWN' fullname='com.adobe.serialization.json:JSONTokenType/UNKNOWN' type='int' isStatic='true' isConst='true' defaultValue='-1' >
</field>
<classRec name='JSONParseError' fullname='com.adobe.serialization.json:JSONParseError' sourcefile='E:\work\happyMagic\src\client\libs\com\adobe\serialization\json\JSONParseError.as' namespace='com.adobe.serialization.json' access='public' baseclass='Error' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 
	 
	 ]]></description>
</classRec>
<method name='JSONParseError' fullname='com.adobe.serialization.json:JSONParseError/JSONParseError' isStatic='false' isFinal='false' isOverride='false'  param_names='message;location;text' param_types='String;int;String' param_defaults=';0;' result_type='*'>
<description><![CDATA[

		 Constructs a new JSONParseError.

		 
		 ]]></description>
<langversion><![CDATA[ActionScript 3.0

		 ]]></langversion>
<param><![CDATA[message The error message that occured during parsing

		 ]]></param>
<playerversion><![CDATA[Flash 9.0

		 ]]></playerversion>
<tiptext><![CDATA[
		 ]]></tiptext>
</method>
<method name='location' fullname='com.adobe.serialization.json:JSONParseError/location/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Provides read-only access to the location variable.

		 
		 ]]></description>
<langversion><![CDATA[ActionScript 3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 9.0

		 ]]></playerversion>
<return><![CDATA[The location in the string where the error occurred

		 ]]></return>
<tiptext><![CDATA[
		 ]]></tiptext>
</method>
<method name='text' fullname='com.adobe.serialization.json:JSONParseError/text/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 Provides read-only access to the text variable.

		 
		 ]]></description>
<langversion><![CDATA[ActionScript 3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 9.0

		 ]]></playerversion>
<return><![CDATA[The string in which the error occurred

		 ]]></return>
<tiptext><![CDATA[
		 ]]></tiptext>
</method>
<field name='_location' fullname='com.adobe.serialization.json:JSONParseError/private:_location' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ The location in the string where the error occurred ]]></description>
</field>
<field name='_text' fullname='com.adobe.serialization.json:JSONParseError/private:_text' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ The string in which the parse error occurred ]]></description>
</field>
<classRec name='SwfLoader' fullname='happyfish.model:SwfLoader' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\model\SwfLoader.as' namespace='happyfish.model' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
</classRec>
<method name='SwfLoader' fullname='happyfish.model:SwfLoader/SwfLoader' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='SwfLoader.as$147:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='addGroup' fullname='happyfish.model:SwfLoader/addGroup' isStatic='false' isFinal='false' isOverride='false'  param_names='name;urls' param_types='String;Array' param_defaults='undefined;undefined' result_type='br.com.stimuli.loading:BulkLoader'>
</method>
<method name='add' fullname='happyfish.model:SwfLoader/add' isStatic='false' isFinal='false' isOverride='false'  param_names='url;priority;context' param_types='String;uint;flash.system:LoaderContext' param_defaults='undefined;3;null' result_type='br.com.stimuli.loading.loadingtypes:LoadingItem'>
</method>
<method name='getInstance' fullname='happyfish.model:SwfLoader/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.model:SwfLoader'>
</method>
<method name='loaderComplete' fullname='happyfish.model:SwfLoader/private:loaderComplete' isStatic='true' isFinal='false' isOverride='false'  param_names='e' param_types='br.com.stimuli.loading:BulkProgressEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='loaderError' fullname='happyfish.model:SwfLoader/private:loaderError' isStatic='true' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='load' fullname='happyfish.model:SwfLoader/load' isStatic='false' isFinal='false' isOverride='false'  param_names='url;priority;context' param_types='String;uint;flash.system:LoaderContext' param_defaults='undefined;3;null' result_type='br.com.stimuli.loading.loadingtypes:LoadingItem'>
</method>
<method name='start' fullname='happyfish.model:SwfLoader/start' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='instance' fullname='happyfish.model:SwfLoader/private:instance' type='happyfish.model:SwfLoader' isStatic='true' isConst='false' >
</field>
<field name='loaderContext' fullname='happyfish.model:SwfLoader/loaderContext' type='flash.system:LoaderContext' isStatic='false' isConst='false' >
</field>
<field name='loader' fullname='happyfish.model:SwfLoader/private:loader' type='br.com.stimuli.loading:BulkLoader' isStatic='true' isConst='false' >
</field>
<classRec name='UrlConnecter' fullname='happyfish.model:UrlConnecter' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\model\UrlConnecter.as' namespace='happyfish.model' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
<metadata>
	<Event owner='happyfish.model:UrlConnecter' name='complete' type='flash.events.Event' >
	</Event>
</metadata>
</classRec>
<method name='UrlConnecter' fullname='happyfish.model:UrlConnecter/UrlConnecter' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clearListener' fullname='happyfish.model:UrlConnecter/protected:clearListener' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clearTimer' fullname='happyfish.model:UrlConnecter/protected:clearTimer' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='dispatchError' fullname='happyfish.model:UrlConnecter/protected:dispatchError' isStatic='false' isFinal='false' isOverride='false'  param_names='errorStr' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='loadOutTime' fullname='happyfish.model:UrlConnecter/protected:loadOutTime' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='load_SecurityError' fullname='happyfish.model:UrlConnecter/protected:load_SecurityError' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:SecurityErrorEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='load_complete' fullname='happyfish.model:UrlConnecter/load_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='load_ioError' fullname='happyfish.model:UrlConnecter/protected:load_ioError' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:IOErrorEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='load' fullname='happyfish.model:UrlConnecter/load' isStatic='false' isFinal='false' isOverride='false'  param_names='request' param_types='flash.net:URLRequest' param_defaults='undefined' result_type='void'>
</method>
<method name='dataFormat' fullname='happyfish.model:UrlConnecter/dataFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_dataFormat' fullname='happyfish.model:UrlConnecter/private:_dataFormat' type='String' isStatic='false' isConst='false' defaultValue='text' >
</field>
<field name='data' fullname='happyfish.model:UrlConnecter/data' type='' isStatic='false' isConst='false' >
</field>
<field name='eventManager' fullname='happyfish.model:UrlConnecter/eventManager' type='flash.events:EventDispatcher' isStatic='true' isConst='false' >
</field>
<field name='loader' fullname='happyfish.model:UrlConnecter/protected:loader' type='flash.net:URLLoader' isStatic='false' isConst='false' >
</field>
<field name='outTimeDelay' fullname='happyfish.model:UrlConnecter/private:outTimeDelay' type='uint' isStatic='false' isConst='false' defaultValue='10000' >
</field>
<field name='outTimeId' fullname='happyfish.model:UrlConnecter/private:outTimeId' type='uint' isStatic='false' isConst='false' >
</field>
<field name='requestbak' fullname='happyfish.model:UrlConnecter/protected:requestbak' type='flash.net:URLRequest' isStatic='false' isConst='false' >
</field>
<field name='retry' fullname='happyfish.model:UrlConnecter/retry' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='takeError' fullname='happyfish.model:UrlConnecter/protected:takeError' type='Boolean' isStatic='false' isConst='false' >
</field>
<classRec name='NodesByteTools' fullname='happyfish.scene.utils:NodesByteTools' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\utils\NodesByteTools.as' namespace='happyfish.scene.utils' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='NodesByteTools' fullname='happyfish.scene.utils:NodesByteTools/NodesByteTools' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='turnBase64ToNodes' fullname='happyfish.scene.utils:NodesByteTools/turnBase64ToNodes' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='Array'>
</method>
<classRec name='AwardType' fullname='happymagic.scene.world.award:AwardType' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\award\AwardType.as' namespace='happymagic.scene.world.award' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='AwardType' fullname='happymagic.scene.world.award:AwardType/AwardType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='BLUE' fullname='happymagic.scene.world.award:AwardType/BLUE' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='EXP' fullname='happymagic.scene.world.award:AwardType/EXP' type='uint' isStatic='true' isConst='true' defaultValue='5' >
</field>
<field name='GEM' fullname='happymagic.scene.world.award:AwardType/GEM' type='uint' isStatic='true' isConst='true' defaultValue='4' >
</field>
<field name='GREEN' fullname='happymagic.scene.world.award:AwardType/GREEN' type='uint' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='ITEM' fullname='happymagic.scene.world.award:AwardType/ITEM' type='uint' isStatic='true' isConst='true' defaultValue='7' >
</field>
<field name='MP' fullname='happymagic.scene.world.award:AwardType/MP' type='uint' isStatic='true' isConst='true' defaultValue='6' >
</field>
<field name='OTHER' fullname='happymagic.scene.world.award:AwardType/OTHER' type='uint' isStatic='true' isConst='true' defaultValue='8' >
</field>
<field name='RED' fullname='happymagic.scene.world.award:AwardType/RED' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<classRec name='AwardItemManager' fullname='happymagic.scene.world.award:AwardItemManager' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\award\AwardItemManager.as' namespace='happymagic.scene.world.award' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='AwardItemManager' fullname='happymagic.scene.world.award:AwardItemManager/AwardItemManager' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='AwardItemManager.as$155:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='addAwardsByResultVo' fullname='happymagic.scene.world.award:AwardItemManager/addAwardsByResultVo' isStatic='false' isFinal='false' isOverride='false'  param_names='value;items;point' param_types='happymagic.model.vo:ResultVo;Array;com.friendsofed.isometric:Point3D' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 表现result里获得的东西

		 ]]></description>
<param><![CDATA[value	resultVo

		 ]]></param>
<param><![CDATA[items	道具

		 ]]></param>
<param><![CDATA[point	表现的ISO坐标

		 ]]></param>
</method>
<method name='addAwards' fullname='happymagic.scene.world.award:AwardItemManager/addAwards' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 创建一批奖励对象到场景中

		 ]]></description>
<param><![CDATA[value	type:奖励种类	num:数量	point:出现位置[Point3D]

		 ]]></param>
</method>
<method name='addOneAwards' fullname='happymagic.scene.world.award:AwardItemManager/private:addOneAwards' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='getInstance' fullname='happymagic.scene.world.award:AwardItemManager/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happymagic.scene.world.award:AwardItemManager'>
</method>
<method name='init' fullname='happymagic.scene.world.award:AwardItemManager/init' isStatic='false' isFinal='false' isOverride='false'  param_names='_worldState' param_types='happyfish.scene.world:WorldState' param_defaults='undefined' result_type='void'>
</method>
<field name='instance' fullname='happymagic.scene.world.award:AwardItemManager/private:instance' type='happymagic.scene.world.award:AwardItemManager' isStatic='true' isConst='false' >
</field>
<field name='worldState' fullname='happymagic.scene.world.award:AwardItemManager/private:worldState' type='happyfish.scene.world:WorldState' isStatic='false' isConst='false' >
</field>
<classRec name='AwardItemView' fullname='happymagic.scene.world.award:AwardItemView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\award\AwardItemView.as' namespace='happymagic.scene.world.award' access='public' baseclass='happyfish.scene.world.grid:IsoItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='AwardItemView' fullname='happymagic.scene.world.award:AwardItemView/AwardItemView' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$worldState;__callBack' param_types='Object;happyfish.scene.world:WorldState;Function' param_defaults='undefined;undefined;null' result_type='*'>
</method>
<method name='landed' fullname='happymagic.scene.world.award:AwardItemView/landed' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='makeView' fullname='happymagic.scene.world.award:AwardItemView/protected:makeView' isStatic='false' isFinal='false' isOverride='true'  result_type='happyfish.scene.iso:IsoSprite'>
</method>
<method name='out_complete' fullname='happymagic.scene.world.award:AwardItemView/private:out_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='showP' param_types='flash.geom:Point' param_defaults='undefined' result_type='void'>
</method>
<method name='out' fullname='happymagic.scene.world.award:AwardItemView/out' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='view_complete' fullname='happymagic.scene.world.award:AwardItemView/protected:view_complete' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='layer' fullname='happymagic.scene.world.award:AwardItemView/protected:layer/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='layer' fullname='happymagic.scene.world.award:AwardItemView/protected:layer/set' isStatic='false' isFinal='false' isOverride='false'  param_names='$layer' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<field name='_layer' fullname='happymagic.scene.world.award:AwardItemView/private:_layer' type='int' isStatic='false' isConst='false' >
</field>
<field name='icon' fullname='happymagic.scene.world.award:AwardItemView/private:icon' type='awardIcon' isStatic='false' isConst='false' >
</field>
<field name='inSceneItemNum' fullname='happymagic.scene.world.award:AwardItemView/inSceneItemNum' type='uint' isStatic='true' isConst='false' >
</field>
<field name='num' fullname='happymagic.scene.world.award:AwardItemView/num' type='uint' isStatic='false' isConst='false' >
</field>
<field name='toP' fullname='happymagic.scene.world.award:AwardItemView/private:toP' type='flash.geom:Point' isStatic='false' isConst='false' >
</field>
<classRec name='Back' fullname='com.greensock.easing:Back' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\easing\Back.as' namespace='com.greensock.easing' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='easeInOut' fullname='com.greensock.easing:Back/easeInOut' isStatic='true' isFinal='false' isOverride='false'  param_names='t;b;c;d;s' param_types='Number;Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined;1.70158' result_type='Number'>
</method>
<method name='easeIn' fullname='com.greensock.easing:Back/easeIn' isStatic='true' isFinal='false' isOverride='false'  param_names='t;b;c;d;s' param_types='Number;Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined;1.70158' result_type='Number'>
</method>
<method name='easeOut' fullname='com.greensock.easing:Back/easeOut' isStatic='true' isFinal='false' isOverride='false'  param_names='t;b;c;d;s' param_types='Number;Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined;1.70158' result_type='Number'>
</method>
<classRec name='Circ' fullname='com.greensock.easing:Circ' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\easing\Circ.as' namespace='com.greensock.easing' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='easeInOut' fullname='com.greensock.easing:Circ/easeInOut' isStatic='true' isFinal='false' isOverride='false'  param_names='t;b;c;d' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='Number'>
</method>
<method name='easeIn' fullname='com.greensock.easing:Circ/easeIn' isStatic='true' isFinal='false' isOverride='false'  param_names='t;b;c;d' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='Number'>
</method>
<method name='easeOut' fullname='com.greensock.easing:Circ/easeOut' isStatic='true' isFinal='false' isOverride='false'  param_names='t;b;c;d' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='Number'>
</method>
<classRec name='TakeResultVoControl' fullname='happymagic.model.control:TakeResultVoControl' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\control\TakeResultVoControl.as' namespace='happymagic.model.control' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='TakeResultVoControl' fullname='happymagic.model.control:TakeResultVoControl/TakeResultVoControl' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='TakeResultVoControl.as$160:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='getInstance' fullname='happymagic.model.control:TakeResultVoControl/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happymagic.model.control:TakeResultVoControl'>
</method>
<method name='take' fullname='happymagic.model.control:TakeResultVoControl/take' isStatic='false' isFinal='false' isOverride='false'  param_names='value;piao;piaoPoint' param_types='happymagic.model.vo:ResultVo;Boolean;flash.geom:Point' param_defaults='undefined;false;null' result_type='void'>
<description><![CDATA[

		 处理resultVo

		 ]]></description>
<param><![CDATA[value

		 ]]></param>
<param><![CDATA[piao	是否用飘屏显示错误信息

		 ]]></param>
</method>
<field name='instance' fullname='happymagic.model.control:TakeResultVoControl/private:instance' type='happymagic.model.control:TakeResultVoControl' isStatic='true' isConst='false' >
</field>
<classRec name='LayoutAlign' fullname='xrope:LayoutAlign' sourcefile='E:\work\happyMagic\src\client\libs\xrope\LayoutAlign.as' namespace='xrope' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Constants for align values.
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</classRec>
<field name='BOTTOM_LEFT' fullname='xrope:LayoutAlign/BOTTOM_LEFT' type='String' isStatic='true' isConst='true' defaultValue='BL' >
<description><![CDATA[
         Bottom-Left align.
         ]]></description>
</field>
<field name='BOTTOM_RIGHT' fullname='xrope:LayoutAlign/BOTTOM_RIGHT' type='String' isStatic='true' isConst='true' defaultValue='BR' >
<description><![CDATA[
         Bottom-Right align.
         ]]></description>
</field>
<field name='BOTTOM' fullname='xrope:LayoutAlign/BOTTOM' type='String' isStatic='true' isConst='true' defaultValue='B' >
<description><![CDATA[
         Bottom align.
         ]]></description>
</field>
<field name='CENTER' fullname='xrope:LayoutAlign/CENTER' type='String' isStatic='true' isConst='true' defaultValue='C' >
<description><![CDATA[
         Center align.
         ]]></description>
</field>
<field name='LEFT' fullname='xrope:LayoutAlign/LEFT' type='String' isStatic='true' isConst='true' defaultValue='L' >
<description><![CDATA[
         Left align.
         ]]></description>
</field>
<field name='RIGHT' fullname='xrope:LayoutAlign/RIGHT' type='String' isStatic='true' isConst='true' defaultValue='R' >
<description><![CDATA[
         Right align.
         ]]></description>
</field>
<field name='TOP_LEFT' fullname='xrope:LayoutAlign/TOP_LEFT' type='String' isStatic='true' isConst='true' defaultValue='TL' >
<description><![CDATA[
         Top-Left align.
         ]]></description>
</field>
<field name='TOP_RIGHT' fullname='xrope:LayoutAlign/TOP_RIGHT' type='String' isStatic='true' isConst='true' defaultValue='TR' >
<description><![CDATA[
         Top-Right align.
         ]]></description>
</field>
<field name='TOP' fullname='xrope:LayoutAlign/TOP' type='String' isStatic='true' isConst='true' defaultValue='T' >
<description><![CDATA[
         Top align.
         ]]></description>
</field>
<interfaceRec name='ILayoutElement' fullname='xrope:ILayoutElement' sourcefile='E:\work\happyMagic\src\client\libs\xrope\ILayoutElement.as' namespace='xrope' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Interface for a layout element.
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</interfaceRec>
<method name='height' fullname='xrope:ILayoutElement/xrope:ILayoutElement:height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
         <code>height</code> value of the layout element.
         ]]></description>
</method>
<method name='useBounds' fullname='xrope:ILayoutElement/xrope:ILayoutElement:useBounds/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
         If use <code>getBounds()</code> of <code>DisplayObject</code> for layout.
         ]]></description>
</method>
<method name='width' fullname='xrope:ILayoutElement/xrope:ILayoutElement:width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
         <code>width</code> of the layout element.
         ]]></description>
</method>
<method name='x' fullname='xrope:ILayoutElement/xrope:ILayoutElement:x/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
         <code>x</code> value of the layout element.
         ]]></description>
</method>
<method name='y' fullname='xrope:ILayoutElement/xrope:ILayoutElement:y/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
         <code>y</code> value of the layout element.
         ]]></description>
</method>
<method name='height' fullname='xrope:ILayoutElement/xrope:ILayoutElement:height/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='useBounds' fullname='xrope:ILayoutElement/xrope:ILayoutElement:useBounds/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='width' fullname='xrope:ILayoutElement/xrope:ILayoutElement:width/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='x' fullname='xrope:ILayoutElement/xrope:ILayoutElement:x/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='y' fullname='xrope:ILayoutElement/xrope:ILayoutElement:y/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<interfaceRec name='ILayoutAlgorithm' fullname='xrope:ILayoutAlgorithm' sourcefile='E:\work\happyMagic\src\client\libs\xrope\ILayoutAlgorithm.as' namespace='xrope' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Interface for the layout algorithms.
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</interfaceRec>
<method name='beReady' fullname='xrope:ILayoutAlgorithm/xrope:ILayoutAlgorithm:beReady' isStatic='false' isFinal='false' isOverride='false'  param_names='group;valueKey;sizeKey;startValue;gap' param_types='xrope:ILayoutGroup;String;String;Number;Number' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
         Be ready  for the layout value calculation.
         ]]></description>
<param><![CDATA[group         Layout group target.
         ]]></param>
<param><![CDATA[valueKey      "x" or "y".
         ]]></param>
<param><![CDATA[sizeKey       "width" or "height".
         ]]></param>
<param><![CDATA[startValue    Value of the first element.
         ]]></param>
<param><![CDATA[gap           Gap between the elements in the group.
         ]]></param>
</method>
<method name='calculate' fullname='xrope:ILayoutAlgorithm/xrope:ILayoutAlgorithm:calculate' isStatic='false' isFinal='false' isOverride='false'  param_names='currentElement;previousElement' param_types='xrope:ILayoutElement;xrope:ILayoutElement' param_defaults='undefined;null' result_type='Number'>
<description><![CDATA[
         Calculate the layout value.
         ]]></description>
<param><![CDATA[currentElement    Current element in the calculation.
         ]]></param>
<param><![CDATA[previousElement   Previous element in the group.
         ]]></param>
</method>
<interfaceRec name='ILayoutGroup' fullname='xrope:ILayoutGroup' sourcefile='E:\work\happyMagic\src\client\libs\xrope\ILayoutGroup.as' namespace='xrope' access='public' baseClasses='xrope:ILayoutElement' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Interface for layout groups.
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</interfaceRec>
<method name='add' fullname='xrope:ILayoutGroup/xrope:ILayoutGroup:add' isStatic='false' isFinal='false' isOverride='false'  param_names='elements' param_types='restParam' param_defaults='undefined' result_type='void'>
<description><![CDATA[
         Add elements to the group.
         ]]></description>
</method>
<method name='has' fullname='xrope:ILayoutGroup/xrope:ILayoutGroup:has' isStatic='false' isFinal='false' isOverride='false'  param_names='element' param_types='*' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
         Check if an element is in the group.
         ]]></description>
</method>
<method name='layoutContainer' fullname='xrope:ILayoutGroup/xrope:ILayoutGroup:layoutContainer' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
         Layout all children in the container.
         ]]></description>
</method>
<method name='layout' fullname='xrope:ILayoutGroup/xrope:ILayoutGroup:layout' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
         Layout all the elements in the group.
         ]]></description>
</method>
<method name='removeAll' fullname='xrope:ILayoutGroup/xrope:ILayoutGroup:removeAll' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
         Remove all elements.
         ]]></description>
</method>
<method name='remove' fullname='xrope:ILayoutGroup/xrope:ILayoutGroup:remove' isStatic='false' isFinal='false' isOverride='false'  param_names='elements' param_types='restParam' param_defaults='undefined' result_type='void'>
<description><![CDATA[
         Remove elements from the group.
         ]]></description>
</method>
<method name='reset' fullname='xrope:ILayoutGroup/xrope:ILayoutGroup:reset' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
         Remove all elements and reset all property to default value.
         ]]></description>
</method>
<method name='align' fullname='xrope:ILayoutGroup/xrope:ILayoutGroup:align/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
         Align of this layout group.
         ]]></description>
</method>
<method name='autoLayoutWhenAdd' fullname='xrope:ILayoutGroup/xrope:ILayoutGroup:autoLayoutWhenAdd/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
         If auto layout when add a new element.
         ]]></description>
</method>
<method name='autoLayoutWhenChange' fullname='xrope:ILayoutGroup/xrope:ILayoutGroup:autoLayoutWhenChange/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
         If auto layout when changed.
         ]]></description>
</method>
<method name='container' fullname='xrope:ILayoutGroup/xrope:ILayoutGroup:container/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:DisplayObjectContainer'>
<description><![CDATA[
         Container of the layout group.
         ]]></description>
</method>
<method name='elements' fullname='xrope:ILayoutGroup/xrope:ILayoutGroup:elements/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
         All layout elements in this group.
         ]]></description>
</method>
<method name='horizontalGap' fullname='xrope:ILayoutGroup/xrope:ILayoutGroup:horizontalGap/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
         Horizontal gap of this layout group.
         ]]></description>
</method>
<method name='verticalGap' fullname='xrope:ILayoutGroup/xrope:ILayoutGroup:verticalGap/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
         Vertical gap of this layout group.
         ]]></description>
</method>
<method name='align' fullname='xrope:ILayoutGroup/xrope:ILayoutGroup:align/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='autoLayoutWhenAdd' fullname='xrope:ILayoutGroup/xrope:ILayoutGroup:autoLayoutWhenAdd/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='autoLayoutWhenChange' fullname='xrope:ILayoutGroup/xrope:ILayoutGroup:autoLayoutWhenChange/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='horizontalGap' fullname='xrope:ILayoutGroup/xrope:ILayoutGroup:horizontalGap/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='verticalGap' fullname='xrope:ILayoutGroup/xrope:ILayoutGroup:verticalGap/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<classRec name='AtomLayout' fullname='xrope:AtomLayout' sourcefile='E:\work\happyMagic\src\client\libs\xrope\AtomLayout.as' namespace='xrope' access='public' baseclass='Object' interfaces='xrope:ILayoutElement' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Atom layout element for one DisplayObject.
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</classRec>
<method name='AtomLayout' fullname='xrope:AtomLayout/AtomLayout' isStatic='false' isFinal='false' isOverride='false'  param_names='target;useBounds' param_types='flash.display:DisplayObject;Boolean' param_defaults='undefined;false' result_type='*'>
<description><![CDATA[
         Construct a <code>XAtomLayout</code>.
         ]]></description>
<param><![CDATA[target        Target display object.
         ]]></param>
<param><![CDATA[useBounds     If use <code>getBounds()</code> for layout.
         ]]></param>
</method>
<method name='getXUseBounds' fullname='xrope:AtomLayout/private:getXUseBounds' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='getYUseBounds' fullname='xrope:AtomLayout/private:getYUseBounds' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='setXUseBounds' fullname='xrope:AtomLayout/private:setXUseBounds' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='setYUseBounds' fullname='xrope:AtomLayout/private:setYUseBounds' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='height' fullname='xrope:AtomLayout/height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 
         <code>height</code> value of the layout element.
         ]]></description>
</method>
<method name='target' fullname='xrope:AtomLayout/target/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:DisplayObject'>
<description><![CDATA[
         Target of the atom layout.
         ]]></description>
</method>
<method name='useBounds' fullname='xrope:AtomLayout/useBounds/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 
         If use <code>getBounds()</code> of <code>DisplayObject</code> for layout.
         ]]></description>
</method>
<method name='width' fullname='xrope:AtomLayout/width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 
         <code>width</code> of the layout element.
         ]]></description>
</method>
<method name='x' fullname='xrope:AtomLayout/x/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 
         <code>x</code> value of the layout element.
         ]]></description>
</method>
<method name='y' fullname='xrope:AtomLayout/y/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 
         <code>y</code> value of the layout element.
         ]]></description>
</method>
<method name='height' fullname='xrope:AtomLayout/height/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='useBounds' fullname='xrope:AtomLayout/useBounds/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='width' fullname='xrope:AtomLayout/width/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='x' fullname='xrope:AtomLayout/x/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='y' fullname='xrope:AtomLayout/y/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_target' fullname='xrope:AtomLayout/private:_target' type='flash.display:DisplayObject' isStatic='false' isConst='false' >
</field>
<field name='_useBounds' fullname='xrope:AtomLayout/private:_useBounds' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='targetBounds' fullname='xrope:AtomLayout/private:targetBounds' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
</field>
<classRec name='TileLayout' fullname='xrope:TileLayout' sourcefile='E:\work\happyMagic\src\client\libs\xrope\TileLayout.as' namespace='xrope' access='public' baseclass='Object' interfaces='xrope:ILayoutElement' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Tile layout is wapper of a AtomLayout with align and size control.
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</classRec>
<method name='TileLayout' fullname='xrope:TileLayout/TileLayout' isStatic='false' isFinal='false' isOverride='false'  param_names='targetOrAtom;width;height;align;useBounds;x;y' param_types='*;Number;Number;String;Boolean;Number;Number' param_defaults='undefined;undefined;undefined;TL;false;0;0' result_type='*'>
<description><![CDATA[
         Construct a <code>TileLayout</code>.
         ]]></description>
<param><![CDATA[targetOrAtom    A <code>DisplayObject</code> or <code>AtomLayout</code>.
         ]]></param>
<param><![CDATA[width           <code>width</code> value of the layout element.
         ]]></param>
<param><![CDATA[height          <code>height</code> value of the layout element.
         ]]></param>
<param><![CDATA[align           Align of the tile.
         ]]></param>
<param><![CDATA[useBounds       If use <code>getBounds()</code> for atom.
         ]]></param>
<param><![CDATA[x               <code>x</code> value of the layout element.
         ]]></param>
<param><![CDATA[y               <code>y</code> value of the layout element.
         ]]></param>
</method>
<method name='bottomY' fullname='xrope:TileLayout/private:bottomY' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='centerX' fullname='xrope:TileLayout/private:centerX' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='centerY' fullname='xrope:TileLayout/private:centerY' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='layout' fullname='xrope:TileLayout/private:layout' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='leftX' fullname='xrope:TileLayout/private:leftX' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='rightX' fullname='xrope:TileLayout/private:rightX' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='topY' fullname='xrope:TileLayout/private:topY' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='align' fullname='xrope:TileLayout/align/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
         Align of the atom in the tile.
         ]]></description>
</method>
<method name='atom' fullname='xrope:TileLayout/atom/get' isStatic='false' isFinal='false' isOverride='false'  result_type='xrope:AtomLayout'>
<description><![CDATA[
         Atom in the tile.
         ]]></description>
</method>
<method name='height' fullname='xrope:TileLayout/height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 
         <code>height</code> value of the layout element.
         ]]></description>
</method>
<method name='useBounds' fullname='xrope:TileLayout/useBounds/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 
         If use <code>getBounds()</code> of <code>DisplayObject</code> for layout.
         ]]></description>
</method>
<method name='width' fullname='xrope:TileLayout/width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 
         <code>width</code> of the layout element.
         ]]></description>
</method>
<method name='x' fullname='xrope:TileLayout/x/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 
         <code>x</code> value of the layout element.
         ]]></description>
</method>
<method name='y' fullname='xrope:TileLayout/y/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 
         <code>y</code> value of the layout element.
         ]]></description>
</method>
<method name='align' fullname='xrope:TileLayout/align/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='height' fullname='xrope:TileLayout/height/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='useBounds' fullname='xrope:TileLayout/useBounds/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='width' fullname='xrope:TileLayout/width/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='x' fullname='xrope:TileLayout/x/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='y' fullname='xrope:TileLayout/y/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_align' fullname='xrope:TileLayout/private:_align' type='String' isStatic='false' isConst='false' defaultValue='TL' >
</field>
<field name='_atom' fullname='xrope:TileLayout/private:_atom' type='xrope:AtomLayout' isStatic='false' isConst='false' >
</field>
<field name='_height' fullname='xrope:TileLayout/private:_height' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_width' fullname='xrope:TileLayout/private:_width' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_x' fullname='xrope:TileLayout/private:_x' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_y' fullname='xrope:TileLayout/private:_y' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='atomX' fullname='xrope:TileLayout/private:atomX' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='atomY' fullname='xrope:TileLayout/private:atomY' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<classRec name='AbstractLayoutGroup' fullname='xrope:AbstractLayoutGroup' sourcefile='E:\work\happyMagic\src\client\libs\xrope\AbstractLayoutGroup.as' namespace='xrope' access='public' baseclass='Object' interfaces='xrope:ILayoutGroup' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Abstract class for layout group.
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</classRec>
<method name='AbstractLayoutGroup' fullname='xrope:AbstractLayoutGroup/AbstractLayoutGroup' isStatic='false' isFinal='false' isOverride='false'  param_names='container;useBounds;autoLayoutWhenAdd;autoLayoutWhenChange' param_types='flash.display:DisplayObjectContainer;Boolean;Boolean;Boolean' param_defaults='undefined;false;false;true' result_type='*'>
<description><![CDATA[
         Construct a <code>AbstractLayoutGroup</code>.
         ]]></description>
<param><![CDATA[container             Container of the layout group.
         ]]></param>
<param><![CDATA[useBounds             If use <code>getBounds()</code> for atom.
         ]]></param>
<param><![CDATA[autoLayoutWhenAdd     If auto layout when a new element is added.
         ]]></param>
<param><![CDATA[autoLayoutWhenChange  If auto layout when something has been changed.
         ]]></param>
</method>
<method name='addAtom' fullname='xrope:AbstractLayoutGroup/protected:addAtom' isStatic='false' isFinal='false' isOverride='false'  param_names='element' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='addOne' fullname='xrope:AbstractLayoutGroup/protected:addOne' isStatic='false' isFinal='false' isOverride='false'  param_names='element' param_types='*' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='add' fullname='xrope:AbstractLayoutGroup/add' isStatic='false' isFinal='false' isOverride='false'  param_names='elements' param_types='restParam' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 
         Add elements to the group.
         ]]></description>
</method>
<method name='checkLayoutAfterChange' fullname='xrope:AbstractLayoutGroup/protected:checkLayoutAfterChange' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createAtom' fullname='xrope:AbstractLayoutGroup/protected:createAtom' isStatic='false' isFinal='false' isOverride='false'  param_names='element' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='xrope:ILayoutElement'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='has' fullname='xrope:AbstractLayoutGroup/has' isStatic='false' isFinal='false' isOverride='false'  param_names='element' param_types='*' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ 
         Check if an element is in the group.
         ]]></description>
</method>
<method name='layoutContainer' fullname='xrope:AbstractLayoutGroup/layoutContainer' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 
         Layout all children in the container.
         ]]></description>
</method>
<method name='layoutElements' fullname='xrope:AbstractLayoutGroup/protected:layoutElements' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='layout' fullname='xrope:AbstractLayoutGroup/layout' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 
         Layout all the elements in the group.
         ]]></description>
</method>
<method name='removeAll' fullname='xrope:AbstractLayoutGroup/removeAll' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 
         Remove all elements.
         ]]></description>
</method>
<method name='removeOne' fullname='xrope:AbstractLayoutGroup/protected:removeOne' isStatic='false' isFinal='false' isOverride='false'  param_names='element' param_types='*' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='remove' fullname='xrope:AbstractLayoutGroup/remove' isStatic='false' isFinal='false' isOverride='false'  param_names='elements' param_types='restParam' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 
         Remove elements from the group.
         ]]></description>
</method>
<method name='reset' fullname='xrope:AbstractLayoutGroup/reset' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 
         Remove all elements and reset all property to default value.
         ]]></description>
</method>
<method name='align' fullname='xrope:AbstractLayoutGroup/align/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ 
         Align of this layout group.
         ]]></description>
</method>
<method name='autoLayoutWhenAdd' fullname='xrope:AbstractLayoutGroup/autoLayoutWhenAdd/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 
         If auto layout when add a new element.
         ]]></description>
</method>
<method name='autoLayoutWhenChange' fullname='xrope:AbstractLayoutGroup/autoLayoutWhenChange/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 
         If auto layout when changed.
         ]]></description>
</method>
<method name='container' fullname='xrope:AbstractLayoutGroup/container/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:DisplayObjectContainer'>
<description><![CDATA[ 
         Container of the layout group.
         ]]></description>
</method>
<method name='elements' fullname='xrope:AbstractLayoutGroup/elements/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[ 
         All layout elements in this group.
         ]]></description>
</method>
<method name='height' fullname='xrope:AbstractLayoutGroup/height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 
         <code>height</code> value of the layout element.
         ]]></description>
</method>
<method name='horizontalGap' fullname='xrope:AbstractLayoutGroup/horizontalGap/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 
         Horizontal gap of this layout group.
         ]]></description>
</method>
<method name='useBounds' fullname='xrope:AbstractLayoutGroup/useBounds/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 
         If use <code>getBounds()</code> of <code>DisplayObject</code> for layout.
         ]]></description>
</method>
<method name='verticalGap' fullname='xrope:AbstractLayoutGroup/verticalGap/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 
         Vertical gap of this layout group.
         ]]></description>
</method>
<method name='width' fullname='xrope:AbstractLayoutGroup/width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 
         <code>width</code> of the layout element.
         ]]></description>
</method>
<method name='x' fullname='xrope:AbstractLayoutGroup/x/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 
         <code>x</code> value of the layout element.
         ]]></description>
</method>
<method name='y' fullname='xrope:AbstractLayoutGroup/y/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 
         <code>y</code> value of the layout element.
         ]]></description>
</method>
<method name='align' fullname='xrope:AbstractLayoutGroup/align/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='autoLayoutWhenAdd' fullname='xrope:AbstractLayoutGroup/autoLayoutWhenAdd/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='autoLayoutWhenChange' fullname='xrope:AbstractLayoutGroup/autoLayoutWhenChange/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='height' fullname='xrope:AbstractLayoutGroup/height/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='horizontalGap' fullname='xrope:AbstractLayoutGroup/horizontalGap/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='useBounds' fullname='xrope:AbstractLayoutGroup/useBounds/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='verticalGap' fullname='xrope:AbstractLayoutGroup/verticalGap/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='width' fullname='xrope:AbstractLayoutGroup/width/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='x' fullname='xrope:AbstractLayoutGroup/x/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='y' fullname='xrope:AbstractLayoutGroup/y/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_align' fullname='xrope:AbstractLayoutGroup/protected:_align' type='String' isStatic='false' isConst='false' defaultValue='TL' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_autoLayoutWhenAdd' fullname='xrope:AbstractLayoutGroup/protected:_autoLayoutWhenAdd' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_autoLayoutWhenChange' fullname='xrope:AbstractLayoutGroup/protected:_autoLayoutWhenChange' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_container' fullname='xrope:AbstractLayoutGroup/protected:_container' type='flash.display:DisplayObjectContainer' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_elements' fullname='xrope:AbstractLayoutGroup/protected:_elements' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_height' fullname='xrope:AbstractLayoutGroup/protected:_height' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_horizontalGap' fullname='xrope:AbstractLayoutGroup/protected:_horizontalGap' type='Number' isStatic='false' isConst='false' defaultValue='5' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_useBounds' fullname='xrope:AbstractLayoutGroup/protected:_useBounds' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_verticalGap' fullname='xrope:AbstractLayoutGroup/protected:_verticalGap' type='Number' isStatic='false' isConst='false' defaultValue='5' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_width' fullname='xrope:AbstractLayoutGroup/protected:_width' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_x' fullname='xrope:AbstractLayoutGroup/protected:_x' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_y' fullname='xrope:AbstractLayoutGroup/protected:_y' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='atomMap' fullname='xrope:AbstractLayoutGroup/protected:atomMap' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='isChanged' fullname='xrope:AbstractLayoutGroup/protected:isChanged' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='isLayouted' fullname='xrope:AbstractLayoutGroup/protected:isLayouted' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<interfaceRec name='IMultiLineLayout' fullname='xrope:IMultiLineLayout' sourcefile='E:\work\happyMagic\src\client\libs\xrope\IMultiLineLayout.as' namespace='xrope' access='public' baseClasses='xrope:ILayoutGroup' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Interface for multi line layout.
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</interfaceRec>
<method name='lineAlign' fullname='xrope:IMultiLineLayout/xrope:IMultiLineLayout:lineAlign/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
         Align of each line.
         ]]></description>
</method>
<method name='lines' fullname='xrope:IMultiLineLayout/xrope:IMultiLineLayout:lines/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
         Line list in the layout.
         ]]></description>
</method>
<method name='lineAlign' fullname='xrope:IMultiLineLayout/xrope:IMultiLineLayout:lineAlign/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<classRec name='AbstractLineLayout' fullname='xrope:AbstractLineLayout' sourcefile='E:\work\happyMagic\src\client\libs\xrope\AbstractLineLayout.as' namespace='xrope' access='public' baseclass='xrope:AbstractLayoutGroup' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Abstract class for single line layout.
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</classRec>
<method name='AbstractLineLayout' fullname='xrope:AbstractLineLayout/AbstractLineLayout' isStatic='false' isFinal='false' isOverride='false'  param_names='container;useBounds;autoLayoutWhenAdd;autoLayoutWhenChange' param_types='flash.display:DisplayObjectContainer;Boolean;Boolean;Boolean' param_defaults='undefined;false;false;true' result_type='*'>
<description><![CDATA[
         Construct a <code>XLineLayout</code>.
         ]]></description>
<param><![CDATA[container             Container of the layout group.
         ]]></param>
<param><![CDATA[useBounds             If use <code>getBounds()</code> for atom.
         ]]></param>
<param><![CDATA[autoLayoutWhenAdd     If auto layout when a new element is added.
         ]]></param>
<param><![CDATA[autoLayoutWhenChange  If auto layout when something has been changed.
         ]]></param>
</method>
<method name='fixHeight' fullname='xrope:AbstractLineLayout/protected:fixHeight' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='fixSize' fullname='xrope:AbstractLineLayout/protected:fixSize' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='fixWidth' fullname='xrope:AbstractLineLayout/protected:fixWidth' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getStartX' fullname='xrope:AbstractLineLayout/protected:getStartX' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getStartY' fullname='xrope:AbstractLineLayout/protected:getStartY' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getXAlgorithm' fullname='xrope:AbstractLineLayout/protected:getXAlgorithm' isStatic='false' isFinal='false' isOverride='false'  result_type='xrope:ILayoutAlgorithm'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getYAlgorithm' fullname='xrope:AbstractLineLayout/protected:getYAlgorithm' isStatic='false' isFinal='false' isOverride='false'  result_type='xrope:ILayoutAlgorithm'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='layoutElements' fullname='xrope:AbstractLineLayout/protected:layoutElements' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<classRec name='AbstractMultiLineLayout' fullname='xrope:AbstractMultiLineLayout' sourcefile='E:\work\happyMagic\src\client\libs\xrope\AbstractMultiLineLayout.as' namespace='xrope' access='public' baseclass='xrope:AbstractLayoutGroup' interfaces='xrope:IMultiLineLayout' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Abstract class for multi-line layout (and box layout).
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</classRec>
<method name='AbstractMultiLineLayout' fullname='xrope:AbstractMultiLineLayout/AbstractMultiLineLayout' isStatic='false' isFinal='false' isOverride='false'  param_names='container;width;height;x;y;align;horizontalGap;verticalGap;useBounds;autoLayoutWhenAdd;autoLayoutWhenChange' param_types='flash.display:DisplayObjectContainer;Number;Number;Number;Number;String;Number;Number;Boolean;Boolean;Boolean' param_defaults='undefined;undefined;undefined;0;0;TL;5;5;false;false;true' result_type='*'>
<description><![CDATA[
         Construct a <code>AbstractMultiLineLayout</code>.
         ]]></description>
<param><![CDATA[container             Container of the layout group.
         ]]></param>
<param><![CDATA[width                 <code>width</code> value of the layout element.
         ]]></param>
<param><![CDATA[height                <code>height</code> value of the layout element.
         ]]></param>
<param><![CDATA[x                     <code>x</code> value of the layout element.
         ]]></param>
<param><![CDATA[y                     <code>y</code> value of the layout element.
         ]]></param>
<param><![CDATA[align                 Align of the layout group.
         ]]></param>
<param><![CDATA[horizontalGap         Horizontal gap value.
         ]]></param>
<param><![CDATA[verticalGap           Vertical gap value.
         ]]></param>
<param><![CDATA[useBounds             If use <code>getBounds()</code> for atom.
         ]]></param>
<param><![CDATA[autoLayoutWhenAdd     If auto layout when a new element is added.
         ]]></param>
<param><![CDATA[autoLayoutWhenChange  If auto layout when something has been changed.
         ]]></param>
</method>
<method name='createLine' fullname='xrope:AbstractMultiLineLayout/protected:createLine' isStatic='false' isFinal='false' isOverride='false'  param_names='oldLines' param_types='Array' param_defaults='undefined' result_type='xrope:ILayoutGroup'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createTopLayout' fullname='xrope:AbstractMultiLineLayout/protected:createTopLayout' isStatic='false' isFinal='false' isOverride='false'  result_type='xrope:ILayoutGroup'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='fixLineAlign' fullname='xrope:AbstractMultiLineLayout/protected:fixLineAlign' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='layoutAsLines' fullname='xrope:AbstractMultiLineLayout/protected:layoutAsLines' isStatic='false' isFinal='false' isOverride='false'  param_names='valueKey;gap' param_types='String;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='lineAlign' fullname='xrope:AbstractMultiLineLayout/lineAlign/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
         align of each line.
         ]]></description>
</method>
<method name='lines' fullname='xrope:AbstractMultiLineLayout/lines/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[ 
         Line list in the layout.
         ]]></description>
</method>
<method name='lineAlign' fullname='xrope:AbstractMultiLineLayout/lineAlign/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_lineAlign' fullname='xrope:AbstractMultiLineLayout/protected:_lineAlign' type='String' isStatic='false' isConst='false' defaultValue='TL' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_lines' fullname='xrope:AbstractMultiLineLayout/protected:_lines' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='HLineLayout' fullname='xrope:HLineLayout' sourcefile='E:\work\happyMagic\src\client\libs\xrope\HLineLayout.as' namespace='xrope' access='public' baseclass='xrope:AbstractLineLayout' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Horizontal single line layout.
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</classRec>
<method name='HLineLayout' fullname='xrope:HLineLayout/HLineLayout' isStatic='false' isFinal='false' isOverride='false'  param_names='container;x;y;width;height;align;gap;useBounds;autoLayoutWhenAdd;autoLayoutWhenChange' param_types='flash.display:DisplayObjectContainer;Number;Number;Number;Number;String;Number;Boolean;Boolean;Boolean' param_defaults='undefined;0;0;-1;-1;TL;5;false;false;true' result_type='*'>
<description><![CDATA[
         Construct a <code>HLineLayout</code>.
         ]]></description>
<param><![CDATA[container             Container of the layout group.
         ]]></param>
<param><![CDATA[x                     <code>x</code> value of the layout element.
         ]]></param>
<param><![CDATA[y                     <code>y</code> value of the layout element.
         ]]></param>
<param><![CDATA[width                 <code>width</code> value of the layout element.
         ]]></param>
<param><![CDATA[height                <code>height</code> value of the layout element.
         ]]></param>
<param><![CDATA[align                 Align of the layout group.
         ]]></param>
<param><![CDATA[gap                   Gap value of the line layout.
         ]]></param>
<param><![CDATA[useBounds             If use <code>getBounds()</code> for atom.
         ]]></param>
<param><![CDATA[autoLayoutWhenAdd     If auto layout when a new element is added.
         ]]></param>
<param><![CDATA[autoLayoutWhenChange  If auto layout when something has been changed.
         ]]></param>
</method>
<method name='fixHeight' fullname='xrope:HLineLayout/protected:fixHeight' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='fixWidth' fullname='xrope:HLineLayout/protected:fixWidth' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getElementsAndGapsWidth' fullname='xrope:HLineLayout/private:getElementsAndGapsWidth' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='getElementsWidth' fullname='xrope:HLineLayout/private:getElementsWidth' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='getGapsWidth' fullname='xrope:HLineLayout/private:getGapsWidth' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='getMaxHeight' fullname='xrope:HLineLayout/private:getMaxHeight' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='getStartX' fullname='xrope:HLineLayout/protected:getStartX' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getXAlgorithm' fullname='xrope:HLineLayout/protected:getXAlgorithm' isStatic='false' isFinal='false' isOverride='true'  result_type='xrope:ILayoutAlgorithm'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getYAlgorithm' fullname='xrope:HLineLayout/protected:getYAlgorithm' isStatic='false' isFinal='false' isOverride='true'  result_type='xrope:ILayoutAlgorithm'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<classRec name='VLineLayout' fullname='xrope:VLineLayout' sourcefile='E:\work\happyMagic\src\client\libs\xrope\VLineLayout.as' namespace='xrope' access='public' baseclass='xrope:AbstractLineLayout' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Vertical single line layout.
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</classRec>
<method name='VLineLayout' fullname='xrope:VLineLayout/VLineLayout' isStatic='false' isFinal='false' isOverride='false'  param_names='container;x;y;width;height;align;gap;useBounds;autoLayoutWhenAdd;autoLayoutWhenChange' param_types='flash.display:DisplayObjectContainer;Number;Number;Number;Number;String;Number;Boolean;Boolean;Boolean' param_defaults='undefined;0;0;-1;-1;TL;5;false;false;true' result_type='*'>
<description><![CDATA[
         Construct a <code>XLineLayout</code>.
         ]]></description>
<param><![CDATA[container             Container of the layout group.
         ]]></param>
<param><![CDATA[x                     <code>x</code> value of the layout element.
         ]]></param>
<param><![CDATA[y                     <code>y</code> value of the layout element.
         ]]></param>
<param><![CDATA[width                 <code>width</code> value of the layout element.
         ]]></param>
<param><![CDATA[height                <code>height</code> value of the layout element.
         ]]></param>
<param><![CDATA[align                 Align of the layout group.
         ]]></param>
<param><![CDATA[gap                   Gap value of the line layout.
         ]]></param>
<param><![CDATA[useBounds             If use <code>getBounds()</code> for atom.
         ]]></param>
<param><![CDATA[autoLayoutWhenAdd     If auto layout when a new element is added.
         ]]></param>
<param><![CDATA[autoLayoutWhenChange  If auto layout when something has been changed.
         ]]></param>
</method>
<method name='fixHeight' fullname='xrope:VLineLayout/protected:fixHeight' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='fixWidth' fullname='xrope:VLineLayout/protected:fixWidth' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getElementsAndGapsHeight' fullname='xrope:VLineLayout/private:getElementsAndGapsHeight' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='getElementsHeight' fullname='xrope:VLineLayout/private:getElementsHeight' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='getGapsHeight' fullname='xrope:VLineLayout/private:getGapsHeight' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='getMaxWidth' fullname='xrope:VLineLayout/private:getMaxWidth' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='getStartY' fullname='xrope:VLineLayout/protected:getStartY' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getXAlgorithm' fullname='xrope:VLineLayout/protected:getXAlgorithm' isStatic='false' isFinal='false' isOverride='true'  result_type='xrope:ILayoutAlgorithm'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getYAlgorithm' fullname='xrope:VLineLayout/protected:getYAlgorithm' isStatic='false' isFinal='false' isOverride='true'  result_type='xrope:ILayoutAlgorithm'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<classRec name='GridLayout' fullname='xrope:GridLayout' sourcefile='E:\work\happyMagic\src\client\libs\xrope\GridLayout.as' namespace='xrope' access='public' baseclass='xrope:AbstractMultiLineLayout' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Grid layout.
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</classRec>
<method name='GridLayout' fullname='xrope:GridLayout/GridLayout' isStatic='false' isFinal='false' isOverride='false'  param_names='container;width;height;tileWidth;tileHeight;x;y;tileAlign;align;horizontalGap;verticalGap;useBounds;autoLayoutWhenAdd;autoLayoutWhenChange' param_types='flash.display:DisplayObjectContainer;Number;Number;Number;Number;Number;Number;String;String;Number;Number;Boolean;Boolean;Boolean' param_defaults='undefined;undefined;undefined;undefined;undefined;0;0;TL;TL;5;5;false;false;true' result_type='*'>
<description><![CDATA[
         Construct a <code>GridLayout</code>.
         ]]></description>
<param><![CDATA[container             Container of the layout group.
         ]]></param>
<param><![CDATA[width                 <code>width</code> value of the layout element.
         ]]></param>
<param><![CDATA[height                <code>height</code> value of the layout element.
         ]]></param>
<param><![CDATA[tileWidth             <code>width</code> value of each tile.
         ]]></param>
<param><![CDATA[tileHeight            <code>height</code> value of each tile.
         ]]></param>
<param><![CDATA[x                     <code>x</code> value of the layout element.
         ]]></param>
<param><![CDATA[y                     <code>y</code> value of the layout element.
         ]]></param>
<param><![CDATA[tileAlign             Align of each tile.
         ]]></param>
<param><![CDATA[align                 Align of the layout group.
         ]]></param>
<param><![CDATA[horizontalGap         Horizontal gap value.
         ]]></param>
<param><![CDATA[verticalGap           Vertical gap value.
         ]]></param>
<param><![CDATA[useBounds             If use <code>getBounds()</code> for atom.
         ]]></param>
<param><![CDATA[autoLayoutWhenAdd     If auto layout when a new element is added.
         ]]></param>
<param><![CDATA[autoLayoutWhenChange  If auto layout when something has been changed.
         ]]></param>
</method>
<method name='createAtom' fullname='xrope:GridLayout/protected:createAtom' isStatic='false' isFinal='false' isOverride='true'  param_names='element' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='xrope:ILayoutElement'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createLine' fullname='xrope:GridLayout/protected:createLine' isStatic='false' isFinal='false' isOverride='true'  param_names='oldLines' param_types='Array' param_defaults='undefined' result_type='xrope:ILayoutGroup'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createTopLayout' fullname='xrope:GridLayout/protected:createTopLayout' isStatic='false' isFinal='false' isOverride='true'  result_type='xrope:ILayoutGroup'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='layoutElements' fullname='xrope:GridLayout/protected:layoutElements' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='tileAlign' fullname='xrope:GridLayout/tileAlign/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
         Align of ecah tile.
         ]]></description>
</method>
<method name='tileHeight' fullname='xrope:GridLayout/tileHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
         Height of ecch tile.
         ]]></description>
</method>
<method name='tileWidth' fullname='xrope:GridLayout/tileWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
         Width of each tile.
         ]]></description>
</method>
<method name='tileAlign' fullname='xrope:GridLayout/tileAlign/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='tileHeight' fullname='xrope:GridLayout/tileHeight/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='tileWidth' fullname='xrope:GridLayout/tileWidth/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_tileAlign' fullname='xrope:GridLayout/private:_tileAlign' type='String' isStatic='false' isConst='false' >
</field>
<field name='_tileHeight' fullname='xrope:GridLayout/private:_tileHeight' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_tileWidth' fullname='xrope:GridLayout/private:_tileWidth' type='Number' isStatic='false' isConst='false' >
</field>
<classRec name='HBoxLayout' fullname='xrope:HBoxLayout' sourcefile='E:\work\happyMagic\src\client\libs\xrope\HBoxLayout.as' namespace='xrope' access='public' baseclass='xrope:AbstractMultiLineLayout' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Horizontal box layout.
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</classRec>
<method name='HBoxLayout' fullname='xrope:HBoxLayout/HBoxLayout' isStatic='false' isFinal='false' isOverride='false'  param_names='container;width;height;x;y;align;horizontalGap;verticalGap;useBounds;autoLayoutWhenAdd;autoLayoutWhenChange' param_types='flash.display:DisplayObjectContainer;Number;Number;Number;Number;String;Number;Number;Boolean;Boolean;Boolean' param_defaults='undefined;undefined;undefined;0;0;TL;5;5;false;false;true' result_type='*'>
<description><![CDATA[
         Construct a <code>HBoxLayout</code>.
         ]]></description>
<param><![CDATA[container             Container of the layout group.
         ]]></param>
<param><![CDATA[width                 <code>width</code> value of the layout element.
         ]]></param>
<param><![CDATA[height                <code>height</code> value of the layout element.
         ]]></param>
<param><![CDATA[x                     <code>x</code> value of the layout element.
         ]]></param>
<param><![CDATA[y                     <code>y</code> value of the layout element.
         ]]></param>
<param><![CDATA[align                 Align of the layout group.
         ]]></param>
<param><![CDATA[horizontalGap         Horizontal gap value.
         ]]></param>
<param><![CDATA[verticalGap           Vertical gap value.
         ]]></param>
<param><![CDATA[useBounds             If use <code>getBounds()</code> for atom.
         ]]></param>
<param><![CDATA[autoLayoutWhenAdd     If auto layout when a new element is added.
         ]]></param>
<param><![CDATA[autoLayoutWhenChange  If auto layout when something has been changed.
         ]]></param>
</method>
<method name='createLine' fullname='xrope:HBoxLayout/protected:createLine' isStatic='false' isFinal='false' isOverride='true'  param_names='oldLines' param_types='Array' param_defaults='undefined' result_type='xrope:ILayoutGroup'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createTopLayout' fullname='xrope:HBoxLayout/protected:createTopLayout' isStatic='false' isFinal='false' isOverride='true'  result_type='xrope:ILayoutGroup'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='fixLineAlign' fullname='xrope:HBoxLayout/protected:fixLineAlign' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='layoutElements' fullname='xrope:HBoxLayout/protected:layoutElements' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<classRec name='PiaoMsgType' fullname='happymagic.display.view:PiaoMsgType' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\PiaoMsgType.as' namespace='happymagic.display.view' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='PiaoMsgType' fullname='happymagic.display.view:PiaoMsgType/PiaoMsgType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='TYPE_BAD_STRING' fullname='happymagic.display.view:PiaoMsgType/TYPE_BAD_STRING' type='uint' isStatic='true' isConst='true' defaultValue='8' >
</field>
<field name='TYPE_BLUE' fullname='happymagic.display.view:PiaoMsgType/TYPE_BLUE' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='TYPE_EXP' fullname='happymagic.display.view:PiaoMsgType/TYPE_EXP' type='uint' isStatic='true' isConst='true' defaultValue='5' >
</field>
<field name='TYPE_GEM' fullname='happymagic.display.view:PiaoMsgType/TYPE_GEM' type='uint' isStatic='true' isConst='true' defaultValue='4' >
</field>
<field name='TYPE_GOOD_STRING' fullname='happymagic.display.view:PiaoMsgType/TYPE_GOOD_STRING' type='uint' isStatic='true' isConst='true' defaultValue='7' >
</field>
<field name='TYPE_GREEN' fullname='happymagic.display.view:PiaoMsgType/TYPE_GREEN' type='uint' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='TYPE_MAGIC' fullname='happymagic.display.view:PiaoMsgType/TYPE_MAGIC' type='uint' isStatic='true' isConst='true' defaultValue='6' >
</field>
<field name='TYPE_RED' fullname='happymagic.display.view:PiaoMsgType/TYPE_RED' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<classRec name='ModuleDict' fullname='happymagic.display.view:ModuleDict' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\ModuleDict.as' namespace='happymagic.display.view' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ModuleDict' fullname='happymagic.display.view:ModuleDict/ModuleDict' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='MODULE_AWARD_RESULT_CLASS' fullname='happymagic.display.view:ModuleDict/MODULE_AWARD_RESULT_CLASS' type='String' isStatic='true' isConst='true' defaultValue='happymagic.display.view.ui.AwardResultView' >
</field>
<field name='MODULE_AWARD_RESULT' fullname='happymagic.display.view:ModuleDict/MODULE_AWARD_RESULT' type='String' isStatic='true' isConst='true' defaultValue='awardResultView' >
</field>
<field name='MODULE_DIARY_CLASS' fullname='happymagic.display.view:ModuleDict/MODULE_DIARY_CLASS' type='String' isStatic='true' isConst='true' defaultValue='happymagic.display.view.diary.DiaryView' >
</field>
<field name='MODULE_DIARY' fullname='happymagic.display.view:ModuleDict/MODULE_DIARY' type='String' isStatic='true' isConst='true' defaultValue='diaryView' >
</field>
<field name='MODULE_FINISH_TASKRESULT_CLASS' fullname='happymagic.display.view:ModuleDict/MODULE_FINISH_TASKRESULT_CLASS' type='String' isStatic='true' isConst='true' defaultValue='happymagic.display.view.task.FinishTaskResultView' >
</field>
<field name='MODULE_FINISH_TASKRESULT' fullname='happymagic.display.view:ModuleDict/MODULE_FINISH_TASKRESULT' type='String' isStatic='true' isConst='true' defaultValue='finishTaskResultView' >
</field>
<field name='MODULE_FRIENDS_CLASS' fullname='happymagic.display.view:ModuleDict/MODULE_FRIENDS_CLASS' type='String' isStatic='true' isConst='true' defaultValue='happymagic.display.view.friends.FriendsView' >
</field>
<field name='MODULE_FRIENDS' fullname='happymagic.display.view:ModuleDict/MODULE_FRIENDS' type='String' isStatic='true' isConst='true' defaultValue='friends' >
</field>
<field name='MODULE_GUIDES' fullname='happymagic.display.view:ModuleDict/MODULE_GUIDES' type='String' isStatic='true' isConst='true' defaultValue='guides' >
</field>
<field name='MODULE_ITEMBOX_CLASS' fullname='happymagic.display.view:ModuleDict/MODULE_ITEMBOX_CLASS' type='String' isStatic='true' isConst='true' defaultValue='happymagic.display.view.itembox.ItemBoxView' >
</field>
<field name='MODULE_ITEMBOX' fullname='happymagic.display.view:ModuleDict/MODULE_ITEMBOX' type='String' isStatic='true' isConst='true' defaultValue='itemBoxView' >
</field>
<field name='MODULE_LEVELINFO_CLASS' fullname='happymagic.display.view:ModuleDict/MODULE_LEVELINFO_CLASS' type='String' isStatic='true' isConst='true' defaultValue='happymagic.display.view.levelUpgrade.LevelUpgradeView' >
</field>
<field name='MODULE_LEVELINFO' fullname='happymagic.display.view:ModuleDict/MODULE_LEVELINFO' type='String' isStatic='true' isConst='true' defaultValue='LevelInfoView' >
</field>
<field name='MODULE_MAGICBOOK_CLASS' fullname='happymagic.display.view:ModuleDict/MODULE_MAGICBOOK_CLASS' type='String' isStatic='true' isConst='true' defaultValue='happymagic.display.view.magicBook.MagicBookView' >
</field>
<field name='MODULE_MAGICBOOK' fullname='happymagic.display.view:ModuleDict/MODULE_MAGICBOOK' type='String' isStatic='true' isConst='true' defaultValue='magicBook' >
</field>
<field name='MODULE_MAGICCLASS_CLASS' fullname='happymagic.display.view:ModuleDict/MODULE_MAGICCLASS_CLASS' type='String' isStatic='true' isConst='true' defaultValue='happymagic.display.view.magic.MagicItemList' >
</field>
<field name='MODULE_MAGICCLASS' fullname='happymagic.display.view:ModuleDict/MODULE_MAGICCLASS' type='String' isStatic='true' isConst='true' defaultValue='magicbox' >
</field>
<field name='MODULE_MAININFO' fullname='happymagic.display.view:ModuleDict/MODULE_MAININFO' type='String' isStatic='true' isConst='true' defaultValue='mainInfo' >
</field>
<field name='MODULE_MAINMENU_CLASS' fullname='happymagic.display.view:ModuleDict/MODULE_MAINMENU_CLASS' type='String' isStatic='true' isConst='true' defaultValue='happymagic.display.view.MenuView' >
</field>
<field name='MODULE_MAINMENU' fullname='happymagic.display.view:ModuleDict/MODULE_MAINMENU' type='String' isStatic='true' isConst='true' defaultValue='menu' >
</field>
<field name='MODULE_MIXMAGIC_RESULT_CLASS' fullname='happymagic.display.view:ModuleDict/MODULE_MIXMAGIC_RESULT_CLASS' type='String' isStatic='true' isConst='true' defaultValue='happymagic.display.view.magicBook.MixMagicResultMsgView' >
</field>
<field name='MODULE_MIXMAGIC_RESULT' fullname='happymagic.display.view:ModuleDict/MODULE_MIXMAGIC_RESULT' type='String' isStatic='true' isConst='true' defaultValue='MixMagicResultMsgView' >
</field>
<field name='MODULE_NPC_CHATS_CLASS' fullname='happymagic.display.view:ModuleDict/MODULE_NPC_CHATS_CLASS' type='String' isStatic='true' isConst='true' defaultValue='happymagic.scene.world.bigScene.NpcChatsView' >
</field>
<field name='MODULE_NPC_CHATS' fullname='happymagic.display.view:ModuleDict/MODULE_NPC_CHATS' type='String' isStatic='true' isConst='true' defaultValue='npcChatsView' >
</field>
<field name='MODULE_ROOMUP_CLASS' fullname='happymagic.display.view:ModuleDict/MODULE_ROOMUP_CLASS' type='String' isStatic='true' isConst='true' defaultValue='happymagic.display.view.roomUp.RoomUpView' >
</field>
<field name='MODULE_ROOMUP' fullname='happymagic.display.view:ModuleDict/MODULE_ROOMUP' type='String' isStatic='true' isConst='true' defaultValue='RoomUp' >
</field>
<field name='MODULE_SWITCH_CLASS' fullname='happymagic.display.view:ModuleDict/MODULE_SWITCH_CLASS' type='String' isStatic='true' isConst='true' defaultValue='happymagic.display.view.switchCrystal.SwitchView' >
</field>
<field name='MODULE_SWITCH' fullname='happymagic.display.view:ModuleDict/MODULE_SWITCH' type='String' isStatic='true' isConst='true' defaultValue='SwitchView' >
</field>
<field name='MODULE_SYSMENU' fullname='happymagic.display.view:ModuleDict/MODULE_SYSMENU' type='String' isStatic='true' isConst='true' defaultValue='sysMenu' >
</field>
<field name='MODULE_TASKINFO_CLASS' fullname='happymagic.display.view:ModuleDict/MODULE_TASKINFO_CLASS' type='String' isStatic='true' isConst='true' defaultValue='happymagic.display.view.task.TaskInfoView' >
</field>
<field name='MODULE_TASKINFO' fullname='happymagic.display.view:ModuleDict/MODULE_TASKINFO' type='String' isStatic='true' isConst='true' defaultValue='taskInfo' >
</field>
<field name='MODULE_TASKLIST' fullname='happymagic.display.view:ModuleDict/MODULE_TASKLIST' type='String' isStatic='true' isConst='true' defaultValue='taskList' >
</field>
<classRec name='MainInfoView' fullname='happymagic.display.view:MainInfoView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\MainInfoView.as' namespace='happymagic.display.view' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MainInfoView' fullname='happymagic.display.view:MainInfoView/MainInfoView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='bodyAddToStage' fullname='happymagic.display.view:MainInfoView/private:bodyAddToStage' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='changeCrystalAndGem' fullname='happymagic.display.view:MainInfoView/private:changeCrystalAndGem' isStatic='false' isFinal='false' isOverride='false'  param_names='red;blue;green;gem' param_types='int;int;int;int' param_defaults='0;0;0;0' result_type='void'>
</method>
<method name='changeExpAndMp' fullname='happymagic.display.view:MainInfoView/private:changeExpAndMp' isStatic='false' isFinal='false' isOverride='false'  param_names='exp;mp' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 修改当前场景主人的EXP和MP改变

		 只是改变数值,没有刷新显示

		 ]]></description>
<param><![CDATA[exp

		 ]]></param>
<param><![CDATA[mp

		 ]]></param>
</method>
<method name='changeMaxMp' fullname='happymagic.display.view:MainInfoView/private:changeMaxMp' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='changeUserInfo' fullname='happymagic.display.view:MainInfoView/changeUserInfo' isStatic='false' isFinal='false' isOverride='false'  param_names='red;blue;green;gem;exp;mp;piao;showPoint' param_types='int;int;int;int;int;int;Boolean;flash.geom:Point' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;false;null' result_type='void'>
<description><![CDATA[

		 修改用户自己的信息,并可以飘屏显示

		 ]]></description>
<param><![CDATA[red

		 ]]></param>
<param><![CDATA[blue

		 ]]></param>
<param><![CDATA[green

		 ]]></param>
<param><![CDATA[gem

		 ]]></param>
<param><![CDATA[exp

		 ]]></param>
<param><![CDATA[mp

		 ]]></param>
<param><![CDATA[piao	是否要显示飘屏,位置为当前鼠标位置

		 ]]></param>
<param><![CDATA[showPoint	显示的位置,如不传就出现在当前鼠标位置

		 ]]></param>
</method>
<method name='clickFun' fullname='happymagic.display.view:MainInfoView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='diyFinished' fullname='happymagic.display.view:MainInfoView/private:diyFinished' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:SceneEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='diyStart' fullname='happymagic.display.view:MainInfoView/private:diyStart' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:SceneEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='flashIt' fullname='happymagic.display.view:MainInfoView/private:flashIt' isStatic='false' isFinal='false' isOverride='false'  param_names='target' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='void'>
</method>
<method name='flashValue' fullname='happymagic.display.view:MainInfoView/flashValue' isStatic='false' isFinal='false' isOverride='false'  param_names='type;num' param_types='uint;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 让指定值的表现物闪动一次

		 ]]></description>
<param><![CDATA[type

		 ]]></param>
<param><![CDATA[num

		 ]]></param>
</method>
<method name='getValuePosition' fullname='happymagic.display.view:MainInfoView/getValuePosition' isStatic='false' isFinal='false' isOverride='false'  param_names='valueType' param_types='uint' param_defaults='undefined' result_type='flash.geom:Point'>
<description><![CDATA[

		 根据TYPE返回该值在界面上的位置

		 ]]></description>
<param><![CDATA[valueType

		 ]]></param>
<return><![CDATA[
		 ]]></return>
</method>
<method name='initInfo' fullname='happymagic.display.view:MainInfoView/private:initInfo' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='initLeft' fullname='happymagic.display.view:MainInfoView/private:initLeft' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='happymagic.model.vo:UserVo' param_defaults='undefined' result_type='void'>
</method>
<method name='initRight' fullname='happymagic.display.view:MainInfoView/private:initRight' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='happymagic.model.vo:UserVo' param_defaults='undefined' result_type='void'>
</method>
<method name='loadData' fullname='happymagic.display.view:MainInfoView/private:loadData' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='load_complete' fullname='happymagic.display.view:MainInfoView/private:load_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='mpHealFun' fullname='happymagic.display.view:MainInfoView/private:mpHealFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='reload' fullname='happymagic.display.view:MainInfoView/private:reload' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:MainInfoEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='sceneAllComplete' fullname='happymagic.display.view:MainInfoView/private:sceneAllComplete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:SceneEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='sceneDataComplete' fullname='happymagic.display.view:MainInfoView/private:sceneDataComplete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:SceneEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='startMpHealTimer' fullname='happymagic.display.view:MainInfoView/private:startMpHealTimer' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='startStateTimer' fullname='happymagic.display.view:MainInfoView/private:startStateTimer' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='stateCheckFun' fullname='happymagic.display.view:MainInfoView/private:stateCheckFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='stopStateTimer' fullname='happymagic.display.view:MainInfoView/private:stopStateTimer' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='userInfoChange' fullname='happymagic.display.view:MainInfoView/private:userInfoChange' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:DataManagerEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 用户信息改变事件

		 ]]></description>
<param><![CDATA[e

		 ]]></param>
</method>
<method name='curUserInfo' fullname='happymagic.display.view:MainInfoView/curUserInfo/get' isStatic='false' isFinal='false' isOverride='false'  result_type='happymagic.model.vo:UserVo'>
</method>
<field name='diyingUserData' fullname='happymagic.display.view:MainInfoView/private:diyingUserData' type='happymagic.model.vo:UserVo' isStatic='false' isConst='false' >
</field>
<field name='diying' fullname='happymagic.display.view:MainInfoView/private:diying' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='expBar' fullname='happymagic.display.view:MainInfoView/private:expBar' type='happyfish.display.view:PerBarView' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view:MainInfoView/private:iview' type='mainInfoUi' isStatic='false' isConst='false' >
</field>
<field name='magicBar' fullname='happymagic.display.view:MainInfoView/private:magicBar' type='happyfish.display.view:PerBarView' isStatic='false' isConst='false' >
</field>
<field name='mpAddNum' fullname='happymagic.display.view:MainInfoView/private:mpAddNum' type='uint' isStatic='false' isConst='false' defaultValue='100' >
</field>
<field name='mpHealNeedTime' fullname='happymagic.display.view:MainInfoView/private:mpHealNeedTime' type='Number' isStatic='false' isConst='false' >
</field>
<field name='mpHealTime' fullname='happymagic.display.view:MainInfoView/private:mpHealTime' type='Number' isStatic='false' isConst='false' >
</field>
<field name='mpHealTimer' fullname='happymagic.display.view:MainInfoView/private:mpHealTimer' type='flash.utils:Timer' isStatic='false' isConst='false' >
</field>
<field name='stateCheckTimer' fullname='happymagic.display.view:MainInfoView/private:stateCheckTimer' type='flash.utils:Timer' isStatic='false' isConst='false' >
</field>
<classRec name='MenuView' fullname='happymagic.display.view:MenuView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\MenuView.as' namespace='happymagic.display.view' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MenuView' fullname='happymagic.display.view:MenuView/MenuView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view:MenuView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='diyFinished' fullname='happymagic.display.view:MenuView/private:diyFinished' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:SceneEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='diyStart' fullname='happymagic.display.view:MenuView/private:diyStart' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:SceneEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='getBtnPoint' fullname='happymagic.display.view:MenuView/getBtnPoint' isStatic='false' isFinal='false' isOverride='false'  param_names='btnName' param_types='String' param_defaults='undefined' result_type='flash.geom:Point'>
<description><![CDATA[

		 返回指定按钮的全局坐标

		 ]]></description>
<return><![CDATA[
		 ]]></return>
</method>
<method name='moduleClose' fullname='happymagic.display.view:MenuView/private:moduleClose' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happyfish.events:ModuleEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='setType' fullname='happymagic.display.view:MenuView/setType' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='showMagicClassBook' fullname='happymagic.display.view:MenuView/private:showMagicClassBook' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:MagicClassBookEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='sortBtn' fullname='happymagic.display.view:MenuView/private:sortBtn' isStatic='false' isFinal='false' isOverride='false'  param_names='arr' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='switchBtnClick' fullname='happymagic.display.view:MenuView/private:switchBtnClick' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='TYPE_FRIEND_HOME' fullname='happymagic.display.view:MenuView/TYPE_FRIEND_HOME' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='TYPE_HOME' fullname='happymagic.display.view:MenuView/TYPE_HOME' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='_iview' fullname='happymagic.display.view:MenuView/private:_iview' type='menuBarUi' isStatic='false' isConst='false' >
</field>
<field name='btw' fullname='happymagic.display.view:MenuView/private:btw' type='Number' isStatic='false' isConst='false' defaultValue='5' >
</field>
<field name='layer' fullname='happymagic.display.view:MenuView/private:layer' type='xrope:HLineLayout' isStatic='false' isConst='false' >
</field>
<classRec name='SysMenuView' fullname='happymagic.display.view:SysMenuView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\SysMenuView.as' namespace='happymagic.display.view' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='SysMenuView' fullname='happymagic.display.view:SysMenuView/SysMenuView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view:SysMenuView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='init' fullname='happymagic.display.view:SysMenuView/init' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<field name='iview' fullname='happymagic.display.view:SysMenuView/private:iview' type='sysMenuUi' isStatic='false' isConst='false' >
</field>
<classRec name='SysMsgView' fullname='happymagic.display.view:SysMsgView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\SysMsgView.as' namespace='happymagic.display.view' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='SysMsgView' fullname='happymagic.display.view:SysMsgView/SysMsgView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='accept' fullname='happymagic.display.view:SysMsgView/accept' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clickFun' fullname='happymagic.display.view:SysMsgView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='closeMe' fullname='happymagic.display.view:SysMsgView/closeMe' isStatic='false' isFinal='false' isOverride='true'  param_names='del' param_types='Boolean' param_defaults='false' result_type='void'>
</method>
<method name='refuse' fullname='happymagic.display.view:SysMsgView/private:refuse' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view:SysMsgView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='str;type' param_types='String;uint' param_defaults='undefined;0' result_type='void'>
</method>
<field name='rect' fullname='happymagic.display.view:SysMsgView/private:rect' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
</field>
<classRec name='PiaoMsgItemView' fullname='happymagic.display.view:PiaoMsgItemView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\PiaoMsgItemView.as' namespace='happymagic.display.view' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='PiaoMsgItemView' fullname='happymagic.display.view:PiaoMsgItemView/PiaoMsgItemView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='mvGo' fullname='happymagic.display.view:PiaoMsgItemView/private:mvGo' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='onComplete' fullname='happymagic.display.view:PiaoMsgItemView/private:onComplete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view:PiaoMsgItemView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='_type;_value;_toX;_toY;_delay' param_types='uint;*;int;int;uint' param_defaults='undefined;undefined;undefined;undefined;0' result_type='void'>
</method>
<method name='setTxtAutoSize' fullname='happymagic.display.view:PiaoMsgItemView/private:setTxtAutoSize' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='showMe' fullname='happymagic.display.view:PiaoMsgItemView/private:showMe' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='icon' fullname='happymagic.display.view:PiaoMsgItemView/private:icon' type='flash.display:MovieClip' isStatic='false' isConst='false' >
</field>
<field name='justShow' fullname='happymagic.display.view:PiaoMsgItemView/justShow' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='now' fullname='happymagic.display.view:PiaoMsgItemView/now' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='toPoint' fullname='happymagic.display.view:PiaoMsgItemView/private:toPoint' type='flash.geom:Point' isStatic='false' isConst='false' >
</field>
<field name='toX' fullname='happymagic.display.view:PiaoMsgItemView/private:toX' type='int' isStatic='false' isConst='false' >
</field>
<field name='toY' fullname='happymagic.display.view:PiaoMsgItemView/private:toY' type='int' isStatic='false' isConst='false' >
</field>
<field name='txtMc' fullname='happymagic.display.view:PiaoMsgItemView/private:txtMc' type='flash.display:MovieClip' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='happymagic.display.view:PiaoMsgItemView/private:type' type='uint' isStatic='false' isConst='false' >
</field>
<field name='value' fullname='happymagic.display.view:PiaoMsgItemView/private:value' type='' isStatic='false' isConst='false' >
</field>
<classRec name='LocaleWords' fullname='happyfish.manager.local:LocaleWords' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\manager\local\LocaleWords.as' namespace='happyfish.manager.local' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='LocaleWords' fullname='happyfish.manager.local:LocaleWords/LocaleWords' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='LocaleWords.as$166:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='conectWords' fullname='happyfish.manager.local:LocaleWords/conectWords' isStatic='false' isFinal='false' isOverride='false'  param_names='str;args' param_types='String;Array' param_defaults='undefined;undefined' result_type='String'>
</method>
<method name='getInstance' fullname='happyfish.manager.local:LocaleWords/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.manager.local:LocaleWords'>
</method>
<method name='getWord' fullname='happyfish.manager.local:LocaleWords/getWord' isStatic='false' isFinal='false' isOverride='false'  param_names='wordName;args' param_types='String;restParam' param_defaults='undefined;undefined' result_type='String'>
</method>
<method name='setValue' fullname='happyfish.manager.local:LocaleWords/setValue' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='checkCode1' fullname='happyfish.manager.local:LocaleWords/checkCode1' type='String' isStatic='false' isConst='false' defaultValue='&lt;!' >
</field>
<field name='checkCode2' fullname='happyfish.manager.local:LocaleWords/checkCode2' type='String' isStatic='false' isConst='false' defaultValue='@&gt;' >
</field>
<field name='instance' fullname='happyfish.manager.local:LocaleWords/private:instance' type='happyfish.manager.local:LocaleWords' isStatic='true' isConst='false' >
</field>
<field name='words' fullname='happyfish.manager.local:LocaleWords/private:words' type='Object' isStatic='false' isConst='false' >
</field>
<classRec name='PiaoMsgControl' fullname='happymagic.display.control:PiaoMsgControl' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\control\PiaoMsgControl.as' namespace='happymagic.display.control' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='PiaoMsgControl' fullname='happymagic.display.control:PiaoMsgControl/PiaoMsgControl' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='PiaoMsgControl.as$176:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='getInstance' fullname='happymagic.display.control:PiaoMsgControl/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happymagic.display.control:PiaoMsgControl'>
</method>
<method name='setContainer' fullname='happymagic.display.control:PiaoMsgControl/setContainer' isStatic='false' isFinal='false' isOverride='false'  param_names='value;eventer' param_types='flash.display:DisplayObjectContainer;flash.events:EventDispatcher' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='showMsg' fullname='happymagic.display.control:PiaoMsgControl/private:showMsg' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:PiaoMsgEvent' param_defaults='undefined' result_type='void'>
</method>
<field name='_container' fullname='happymagic.display.control:PiaoMsgControl/private:_container' type='flash.display:DisplayObjectContainer' isStatic='false' isConst='false' >
</field>
<field name='instance' fullname='happymagic.display.control:PiaoMsgControl/private:instance' type='happymagic.display.control:PiaoMsgControl' isStatic='true' isConst='false' >
</field>
<packageRec name='com.greensock.core.null' fullname='com.greensock.core.null'>
<description><![CDATA[

 VERSION: 1.64

 DATE: 2011-01-06

 AS3 (AS2 version is also available)

 UPDATES AND DOCS AT: http://www.greensock.com

 ]]></description>
</packageRec>
<classRec name='TweenCore' fullname='com.greensock.core:TweenCore' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\core\TweenCore.as' namespace='com.greensock.core' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

 TweenCore is the base class for all TweenLite, TweenMax, TimelineLite, and TimelineMax classes and 

 provides core functionality and properties. There is no reason to use this class directly.<br /><br />

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='TweenCore' fullname='com.greensock.core:TweenCore/TweenCore' isStatic='false' isFinal='false' isOverride='false'  param_names='duration;vars' param_types='Number;Object' param_defaults='0;null' result_type='*'>
</method>
<method name='complete' fullname='com.greensock.core:TweenCore/complete' isStatic='false' isFinal='false' isOverride='false'  param_names='skipRender;suppressEvents' param_types='Boolean;Boolean' param_defaults='false;false' result_type='void'>
<description><![CDATA[

		 Forces the tween/timeline to completion.

		 

		 ]]></description>
<param><![CDATA[skipRender to skip rendering the final state of the tween, set skipRender to true. 

		 ]]></param>
<param><![CDATA[suppressEvents If true, no events or callbacks will be triggered for this render (like onComplete, onUpdate, onReverseComplete, etc.)

		 ]]></param>
</method>
<method name='invalidate' fullname='com.greensock.core:TweenCore/invalidate' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 Clears any initialization data (like starting values in tweens) which can be useful if, for example, 

		 you want to restart it without reverting to any previously recorded starting values. When you invalidate() 

		 a tween/timeline, it will be re-initialized the next time it renders and its <code>vars</code> object will be re-parsed. 

		 The timing of the tween/timeline (duration, startTime, delay) will NOT be affected. Another example would be if you

		 have a <code>TweenMax(mc, 1, {x:100, y:100})</code> that ran when mc.x and mc.y were initially at 0, but now mc.x 

		 and mc.y are 200 and you want them tween to 100 again, you could simply <code>invalidate()</code> the tween and 

		 <code>restart()</code> it. Without invalidating first, restarting it would cause the values jump back to 0 immediately 

		 (where they started when the tween originally began). When you invalidate a timeline, it automatically invalidates 

		 all of its children.

		 ]]></description>
</method>
<method name='kill' fullname='com.greensock.core:TweenCore/kill' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Kills the tween/timeline, stopping it immediately. ]]></description>
</method>
<method name='pause' fullname='com.greensock.core:TweenCore/pause' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Pauses the tween/timeline ]]></description>
</method>
<method name='play' fullname='com.greensock.core:TweenCore/play' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Starts playing forward from the current position. (essentially unpauses and makes sure that it is not reversed) ]]></description>
</method>
<method name='renderTime' fullname='com.greensock.core:TweenCore/renderTime' isStatic='false' isFinal='false' isOverride='false'  param_names='time;suppressEvents;force' param_types='Number;Boolean;Boolean' param_defaults='undefined;false;false' result_type='void'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[time time in seconds (or frame number for frames-based tweens/timelines) to render.

		 ]]></param>
<param><![CDATA[suppressEvents If true, no events or callbacks will be triggered for this render (like onComplete, onUpdate, onReverseComplete, etc.)

		 ]]></param>
<param><![CDATA[force Normally the tween will skip rendering if the time matches the cachedTotalTime (to improve performance), but if force is true, it forces a render. This is primarily used internally for tweens with durations of zero in TimelineLite/Max instances.

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='restart' fullname='com.greensock.core:TweenCore/restart' isStatic='false' isFinal='false' isOverride='false'  param_names='includeDelay;suppressEvents' param_types='Boolean;Boolean' param_defaults='false;true' result_type='void'>
<description><![CDATA[

		 Restarts and begins playing forward.

		 

		 ]]></description>
<param><![CDATA[includeDelay Determines whether or not the delay (if any) is honored in the restart()

		 ]]></param>
<param><![CDATA[suppressEvents If true, no events or callbacks will be triggered as the "virtual playhead" moves to the new position (onComplete, onUpdate, onReverseComplete, etc. of this tween/timeline and any of its child tweens/timelines won't be triggered, nor will any of the associated events be dispatched) 

		 ]]></param>
</method>
<method name='resume' fullname='com.greensock.core:TweenCore/resume' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Starts playing from the current position without altering direction (forward or reversed). ]]></description>
</method>
<method name='reverse' fullname='com.greensock.core:TweenCore/reverse' isStatic='false' isFinal='false' isOverride='false'  param_names='forceResume' param_types='Boolean' param_defaults='true' result_type='void'>
<description><![CDATA[

		 Reverses smoothly, adjusting the startTime to avoid any skipping. After being reversed,

		 it will play backwards, exactly opposite from its forward orientation, meaning that, for example, a

		 tween's easing equation will appear reversed as well. If a tween/timeline plays for 2 seconds and gets

		 reversed, it will play for another 2 seconds to return to the beginning.

		 

		 ]]></description>
<param><![CDATA[forceResume If true, it will resume() immediately upon reversing. Otherwise its paused state will remain unchanged.

		 ]]></param>
</method>
<method name='setDirtyCache' fullname='com.greensock.core:TweenCore/protected:setDirtyCache' isStatic='false' isFinal='false' isOverride='false'  param_names='includeSelf' param_types='Boolean' param_defaults='true' result_type='void'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[includeSelf indicates whether or not this tween's cacheIsDirty property should be affected.

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='setEnabled' fullname='com.greensock.core:TweenCore/setEnabled' isStatic='false' isFinal='false' isOverride='false'  param_names='enabled;ignoreTimeline' param_types='Boolean;Boolean' param_defaults='undefined;false' result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[enabled Enabled state of the tween/timeline

		 ]]></param>
<param><![CDATA[ignoreTimeline By default, the tween/timeline will remove itself from its parent timeline when it is disabled, and add itself when it is enabled, but this parameter allows you to override that behavior.

		 ]]></param>
<return><![CDATA[Boolean value indicating whether or not important properties may have changed when the TweenCore was enabled/disabled. For example, when a motionBlur (plugin) is disabled, it swaps out a BitmapData for the target and may alter the alpha. We need to know this in order to determine whether or not a new tween that is overwriting this one should be re-initted() with the changed properties. 

		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='setTotalTime' fullname='com.greensock.core:TweenCore/protected:setTotalTime' isStatic='false' isFinal='false' isOverride='false'  param_names='time;suppressEvents' param_types='Number;Boolean' param_defaults='undefined;false' result_type='void'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[time Time that should be rendered (includes any repeats and repeatDelays for TimelineMax)

		 ]]></param>
<param><![CDATA[suppressEvents If true, no events or callbacks will be triggered for this render (like onComplete, onUpdate, onReverseComplete, etc.)

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='currentTime' fullname='com.greensock.core:TweenCore/currentTime/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Most recently rendered time (or frame for frames-based tweens/timelines) according to its 

		 <code>duration</code>. <code>totalTime</code>, by contrast, is based on its <code>totalDuration</code> 

		 which includes repeats and repeatDelays. Since TweenLite and TimelineLite don't offer 

		 <code>repeat</code> and <code>repeatDelay</code> functionality, <code>currentTime</code> 

		 and <code>totalTime</code> will always be the same but in TweenMax or TimelineMax, they 

		 could be different. For example, if a TimelineMax instance has a duration 

		 of 5 a repeat of 1 (meaning its <code>totalDuration</code> is 10), at the end of the second cycle, 

		 <code>currentTime</code> would be 5 whereas <code>totalTime</code> would be 10. If you tracked both

		 properties over the course of the tween, you'd see <code>currentTime</code> go from 0 to 5 twice (one for each

		 cycle) in the same time it takes <code>totalTime</code> go from 0 to 10.

		 ]]></description>
</method>
<method name='delay' fullname='com.greensock.core:TweenCore/delay/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 Length of time in seconds (or frames for frames-based tweens/timelines) before the tween should begin. 

		 The tween's starting values are not determined until after the delay has expired (except in from() tweens) 

		 ]]></description>
</method>
<method name='duration' fullname='com.greensock.core:TweenCore/duration/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Duration of the tween in seconds (or frames for frames-based tweens/timelines) not including any repeats

		 or repeatDelays. <code>totalDuration</code>, by contrast, does include repeats and repeatDelays. If you alter

		 the <code>duration</code> of a tween while it is in-progress (active), its <code>startTime</code> will automatically 

		 be adjusted in order to make the transition smoothly (without a sudden skip). 

		 ]]></description>
</method>
<method name='paused' fullname='com.greensock.core:TweenCore/paused/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Indicates the paused state of the tween/timeline. This does not take into account anscestor timelines. So for example, a tween that is not paused might appear paused if its parent timeline (or any ancenstor timeline) is paused. ]]></description>
</method>
<method name='reversed' fullname='com.greensock.core:TweenCore/reversed/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Indicates the reversed state of the tween/timeline. This value is not affected by <code>yoyo</code> repeats and it does not take into account the reversed state of anscestor timelines. So for example, a tween that is not reversed might appear reversed if its parent timeline (or any ancenstor timeline) is reversed. ]]></description>
</method>
<method name='startTime' fullname='com.greensock.core:TweenCore/startTime/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Start time in seconds (or frames for frames-based tweens/timelines), according to its position on its parent timeline ]]></description>
</method>
<method name='totalDuration' fullname='com.greensock.core:TweenCore/totalDuration/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Duration of the tween in seconds (or frames for frames-based tweens/timelines) including any repeats

		 or repeatDelays (which are only available on TweenMax and TimelineMax). <code>duration</code>, by contrast, does 

		 <b>NOT</b> include repeats and repeatDelays. So if a TweenMax's <code>duration</code> is 1 and it has a repeat of 2, 

		 the <code>totalDuration</code> would be 3.

		 ]]></description>
</method>
<method name='totalTime' fullname='com.greensock.core:TweenCore/totalTime/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Most recently rendered time (or frame for frames-based tweens/timelines) according to its 

		 <code>totalDuration</code>. <code>currentTime</code>, by contrast, is based on its <code>duration</code> 

		 which does NOT include repeats and repeatDelays. Since TweenLite and TimelineLite don't offer 

		 <code>repeat</code> and <code>repeatDelay</code> functionality, <code>currentTime</code> 

		 and <code>totalTime</code> will always be the same but in TweenMax or TimelineMax, they 

		 could be different. For example, if a TimelineMax instance has a duration 

		 of 5 a repeat of 1 (meaning its <code>totalDuration</code> is 10), at the end of the second cycle, 

		 <code>currentTime</code> would be 5 whereas <code>totalTime</code> would be 10. If you tracked both

		 properties over the course of the tween, you'd see <code>currentTime</code> go from 0 to 5 twice (one for each

		 cycle) in the same time it takes <code>totalTime</code> go from 0 to 10.

		 ]]></description>
</method>
<method name='currentTime' fullname='com.greensock.core:TweenCore/currentTime/set' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='delay' fullname='com.greensock.core:TweenCore/delay/set' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='duration' fullname='com.greensock.core:TweenCore/duration/set' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='paused' fullname='com.greensock.core:TweenCore/paused/set' isStatic='false' isFinal='false' isOverride='false'  param_names='b' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='reversed' fullname='com.greensock.core:TweenCore/reversed/set' isStatic='false' isFinal='false' isOverride='false'  param_names='b' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='startTime' fullname='com.greensock.core:TweenCore/startTime/set' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='totalDuration' fullname='com.greensock.core:TweenCore/totalDuration/set' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='totalTime' fullname='com.greensock.core:TweenCore/totalTime/set' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='_classInitted' fullname='com.greensock.core:TweenCore/protected:_classInitted' type='Boolean' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_delay' fullname='com.greensock.core:TweenCore/protected:_delay' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_hasUpdate' fullname='com.greensock.core:TweenCore/protected:_hasUpdate' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_rawPrevTime' fullname='com.greensock.core:TweenCore/protected:_rawPrevTime' type='Number' isStatic='false' isConst='false' defaultValue='-1' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='active' fullname='com.greensock.core:TweenCore/active' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='cacheIsDirty' fullname='com.greensock.core:TweenCore/cacheIsDirty' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='cachedDuration' fullname='com.greensock.core:TweenCore/cachedDuration' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='cachedOrphan' fullname='com.greensock.core:TweenCore/cachedOrphan' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='cachedPauseTime' fullname='com.greensock.core:TweenCore/cachedPauseTime' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='cachedPaused' fullname='com.greensock.core:TweenCore/cachedPaused' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='cachedReversed' fullname='com.greensock.core:TweenCore/cachedReversed' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='cachedStartTime' fullname='com.greensock.core:TweenCore/cachedStartTime' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='cachedTimeScale' fullname='com.greensock.core:TweenCore/cachedTimeScale' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='cachedTime' fullname='com.greensock.core:TweenCore/cachedTime' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='cachedTotalDuration' fullname='com.greensock.core:TweenCore/cachedTotalDuration' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='cachedTotalTime' fullname='com.greensock.core:TweenCore/cachedTotalTime' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='data' fullname='com.greensock.core:TweenCore/data' type='' isStatic='false' isConst='false' >
<description><![CDATA[ Place to store any data you want.]]></description>
</field>
<field name='gc' fullname='com.greensock.core:TweenCore/gc' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='initted' fullname='com.greensock.core:TweenCore/initted' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='nextNode' fullname='com.greensock.core:TweenCore/nextNode' type='com.greensock.core:TweenCore' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='prevNode' fullname='com.greensock.core:TweenCore/prevNode' type='com.greensock.core:TweenCore' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='timeline' fullname='com.greensock.core:TweenCore/timeline' type='com.greensock.core:SimpleTimeline' isStatic='false' isConst='false' >
<description><![CDATA[ The parent timeline on which the tween/timeline is placed. By default, it uses the TweenLite.rootTimeline (or TweenLite.rootFramesTimeline for frames-based tweens/timelines). ]]></description>
</field>
<field name='vars' fullname='com.greensock.core:TweenCore/vars' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[ Stores variables (things like alpha, y or whatever we're tweening as well as special properties like "onComplete"). ]]></description>
</field>
<field name='version' fullname='com.greensock.core:TweenCore/version' type='Number' isStatic='true' isConst='true' defaultValue='1.64' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.core.null' fullname='com.greensock.core.null'>
<description><![CDATA[

 VERSION: 2.1

 DATE: 2009-09-12

 ACTIONSCRIPT VERSION: 3.0 (AS2 version is also available)

 UPDATES AND DOCUMENTATION AT: http://www.TweenLite.com

 ]]></description>
</packageRec>
<classRec name='PropTween' fullname='com.greensock.core:PropTween' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\core\PropTween.as' namespace='com.greensock.core' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

 Stores information about an individual property tween. There is no reason to use this class directly - TweenLite, TweenMax, and some plugins use it internally.<br /><br />

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='PropTween' fullname='com.greensock.core:PropTween/PropTween' isStatic='false' isFinal='false' isOverride='false'  param_names='target;property;start;change;name;isPlugin;nextNode;priority' param_types='Object;String;Number;Number;String;Boolean;com.greensock.core:PropTween;int' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;null;0' result_type='*'>
<description><![CDATA[

		 Constructor

		 

		 ]]></description>
<param><![CDATA[target Target object

		 ]]></param>
<param><![CDATA[property Name of the property that is being tweened

		 ]]></param>
<param><![CDATA[start Starting value

		 ]]></param>
<param><![CDATA[change Amount to change (basically, the difference between the starting value and ending value)

		 ]]></param>
<param><![CDATA[name Alias to associate with the PropTween which is typically the same as the property, but can be different, particularly for plugins.

		 ]]></param>
<param><![CDATA[isPlugin If the target of the PropTween is a TweenPlugin, isPlugin should be true.

		 ]]></param>
<param><![CDATA[nextNode Next PropTween in the linked list

		 ]]></param>
<param><![CDATA[priority Priority in the rendering queue. The lower the value the later it will be tweened. Typically all PropTweens get a priority of 0, but some plugins must be rendered later (or earlier)

		 ]]></param>
</method>
<field name='change' fullname='com.greensock.core:PropTween/change' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ Amount to change (basically, the difference between the starting value and ending value) ]]></description>
</field>
<field name='isPlugin' fullname='com.greensock.core:PropTween/isPlugin' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ If the target of the PropTween is a TweenPlugin, isPlugin should be true. ]]></description>
</field>
<field name='name' fullname='com.greensock.core:PropTween/name' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ Alias to associate with the PropTween which is typically the same as the property, but can be different, particularly for plugins. ]]></description>
</field>
<field name='nextNode' fullname='com.greensock.core:PropTween/nextNode' type='com.greensock.core:PropTween' isStatic='false' isConst='false' >
<description><![CDATA[ Next PropTween in the linked list ]]></description>
</field>
<field name='prevNode' fullname='com.greensock.core:PropTween/prevNode' type='com.greensock.core:PropTween' isStatic='false' isConst='false' >
<description><![CDATA[ Previous PropTween in the linked list ]]></description>
</field>
<field name='priority' fullname='com.greensock.core:PropTween/priority' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ Priority in the rendering queue. The lower the value the later it will be tweened. Typically all PropTweens get a priority of 0, but some plugins must be rendered later (or earlier) ]]></description>
</field>
<field name='property' fullname='com.greensock.core:PropTween/property' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ Name of the property that is being tweened ]]></description>
</field>
<field name='start' fullname='com.greensock.core:PropTween/start' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ Starting value  ]]></description>
</field>
<field name='target' fullname='com.greensock.core:PropTween/target' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[ Target object ]]></description>
</field>
<packageRec name='com.greensock.core.null' fullname='com.greensock.core.null'>
<description><![CDATA[

 VERSION: 1.64

 DATE: 2011-01-06

 AS3 (AS2 version is also available)

 UPDATES AND DOCS AT: http://www.greensock.com

 ]]></description>
</packageRec>
<classRec name='SimpleTimeline' fullname='com.greensock.core:SimpleTimeline' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\core\SimpleTimeline.as' namespace='com.greensock.core' access='public' baseclass='com.greensock.core:TweenCore' isFinal='false' isDynamic='false' >
<description><![CDATA[

 SimpleTimeline is the base class for the TimelineLite and TimelineMax classes. It provides the

 most basic timeline functionality and is used for the root timelines in TweenLite. It is meant

 to be very fast and lightweight. <br /><br />

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='SimpleTimeline' fullname='com.greensock.core:SimpleTimeline/SimpleTimeline' isStatic='false' isFinal='false' isOverride='false'  param_names='vars' param_types='Object' param_defaults='null' result_type='*'>
</method>
<method name='insert' fullname='com.greensock.core:SimpleTimeline/insert' isStatic='false' isFinal='false' isOverride='false'  param_names='tween;time' param_types='com.greensock.core:TweenCore;*' param_defaults='undefined;0' result_type='com.greensock.core:TweenCore'>
<description><![CDATA[

		 Inserts a TweenLite, TweenMax, TimelineLite, or TimelineMax instance into the timeline at a specific time. 

		 

		 ]]></description>
<param><![CDATA[tween TweenLite, TweenMax, TimelineLite, or TimelineMax instance to insert

		 ]]></param>
<param><![CDATA[time The time in seconds (or frames for frames-based timelines) at which the tween/timeline should be inserted. For example, myTimeline.insert(myTween, 3) would insert myTween 3-seconds into the timeline.

		 ]]></param>
<return><![CDATA[TweenLite, TweenMax, TimelineLite, or TimelineMax instance that was inserted

		 ]]></return>
</method>
<method name='remove' fullname='com.greensock.core:SimpleTimeline/remove' isStatic='false' isFinal='false' isOverride='false'  param_names='tween;skipDisable' param_types='com.greensock.core:TweenCore;Boolean' param_defaults='undefined;false' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='renderTime' fullname='com.greensock.core:SimpleTimeline/renderTime' isStatic='false' isFinal='false' isOverride='true'  param_names='time;suppressEvents;force' param_types='Number;Boolean;Boolean' param_defaults='undefined;false;false' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='rawTime' fullname='com.greensock.core:SimpleTimeline/rawTime/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 ]]></description>
<return><![CDATA[The totalTime of the timeline without capping the number at the totalDuration (max) and zero (minimum)

		 ]]></return>
<private><![CDATA[]]></private>
</method>
<field name='_firstChild' fullname='com.greensock.core:SimpleTimeline/protected:_firstChild' type='com.greensock.core:TweenCore' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_lastChild' fullname='com.greensock.core:SimpleTimeline/protected:_lastChild' type='com.greensock.core:TweenCore' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='autoRemoveChildren' fullname='com.greensock.core:SimpleTimeline/autoRemoveChildren' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ If a timeline's autoRemoveChildren is true, its children will be removed and made eligible for garbage collection as soon as they complete. This is the default behavior for the main/root timeline. ]]></description>
</field>
<classRec name='UserInfoChangeVo' fullname='happymagic.events:UserInfoChangeVo' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\events\UserInfoChangeVo.as' namespace='happymagic.events' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='UserInfoChangeVo' fullname='happymagic.events:UserInfoChangeVo/UserInfoChangeVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='turnFromResultVo' fullname='happymagic.events:UserInfoChangeVo/turnFromResultVo' isStatic='false' isFinal='false' isOverride='false'  param_names='result' param_types='happymagic.model.vo:ResultVo' param_defaults='undefined' result_type='void'>
</method>
<method name='isEmpty' fullname='happymagic.events:UserInfoChangeVo/isEmpty/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<field name='blue' fullname='happymagic.events:UserInfoChangeVo/blue' type='int' isStatic='false' isConst='false' >
</field>
<field name='exp' fullname='happymagic.events:UserInfoChangeVo/exp' type='int' isStatic='false' isConst='false' >
</field>
<field name='gem' fullname='happymagic.events:UserInfoChangeVo/gem' type='int' isStatic='false' isConst='false' >
</field>
<field name='green' fullname='happymagic.events:UserInfoChangeVo/green' type='int' isStatic='false' isConst='false' >
</field>
<field name='levelUp' fullname='happymagic.events:UserInfoChangeVo/levelUp' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='maxMp' fullname='happymagic.events:UserInfoChangeVo/maxMp' type='int' isStatic='false' isConst='false' >
</field>
<field name='mp' fullname='happymagic.events:UserInfoChangeVo/mp' type='int' isStatic='false' isConst='false' >
</field>
<field name='piao' fullname='happymagic.events:UserInfoChangeVo/piao' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='red' fullname='happymagic.events:UserInfoChangeVo/red' type='int' isStatic='false' isConst='false' >
</field>
<field name='showPoint' fullname='happymagic.events:UserInfoChangeVo/showPoint' type='flash.geom:Point' isStatic='false' isConst='false' >
</field>
<classRec name='SceneEvent' fullname='happymagic.events:SceneEvent' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\events\SceneEvent.as' namespace='happymagic.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='SceneEvent' fullname='happymagic.events:SceneEvent/SceneEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='happymagic.events:SceneEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='happymagic.events:SceneEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='CHANGE_SCENE' fullname='happymagic.events:SceneEvent/CHANGE_SCENE' type='String' isStatic='true' isConst='true' defaultValue='changeScene' >
</field>
<field name='DIY_CANCELDIY' fullname='happymagic.events:SceneEvent/DIY_CANCELDIY' type='String' isStatic='true' isConst='true' defaultValue='diyCancel' >
</field>
<field name='DIY_FINISHED' fullname='happymagic.events:SceneEvent/DIY_FINISHED' type='String' isStatic='true' isConst='true' defaultValue='diyFinished' >
</field>
<field name='SCENE_COMPLETE' fullname='happymagic.events:SceneEvent/SCENE_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='SceneComplete' >
</field>
<field name='SCENE_DATA_COMPLETE' fullname='happymagic.events:SceneEvent/SCENE_DATA_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='sceneDataComplete' >
</field>
<field name='START_DIY' fullname='happymagic.events:SceneEvent/START_DIY' type='String' isStatic='true' isConst='true' defaultValue='diyStart' >
</field>
<field name='uid' fullname='happymagic.events:SceneEvent/uid' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='SysMsgEvent' fullname='happymagic.events:SysMsgEvent' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\events\SysMsgEvent.as' namespace='happymagic.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='SysMsgEvent' fullname='happymagic.events:SysMsgEvent/SysMsgEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;_content;_msgType;bubbles;cancelable' param_types='String;String;uint;Boolean;Boolean' param_defaults='undefined;;0;false;false' result_type='*'>
</method>
<method name='clone' fullname='happymagic.events:SysMsgEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='happymagic.events:SysMsgEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='MSGTYPE_CONFIRM' fullname='happymagic.events:SysMsgEvent/MSGTYPE_CONFIRM' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='MSGTYPE_MSG' fullname='happymagic.events:SysMsgEvent/MSGTYPE_MSG' type='uint' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='SHOW_SYSMSG' fullname='happymagic.events:SysMsgEvent/SHOW_SYSMSG' type='String' isStatic='true' isConst='true' defaultValue='showSysMsg' >
</field>
<field name='SYSMSG_CLOSED' fullname='happymagic.events:SysMsgEvent/SYSMSG_CLOSED' type='String' isStatic='true' isConst='true' defaultValue='sysMsgClosed' >
</field>
<field name='content' fullname='happymagic.events:SysMsgEvent/content' type='String' isStatic='false' isConst='false' >
</field>
<field name='msgType' fullname='happymagic.events:SysMsgEvent/msgType' type='uint' isStatic='false' isConst='false' >
</field>
<field name='result' fullname='happymagic.events:SysMsgEvent/result' type='Boolean' isStatic='false' isConst='false' >
</field>
<classRec name='PiaoMsgEvent' fullname='happymagic.events:PiaoMsgEvent' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\events\PiaoMsgEvent.as' namespace='happymagic.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='PiaoMsgEvent' fullname='happymagic.events:PiaoMsgEvent/PiaoMsgEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;_msgs;_x;_y;_now;bubbles;cancelable' param_types='String;Array;int;int;Boolean;Boolean;Boolean' param_defaults='undefined;undefined;undefined;undefined;false;false;false' result_type='*'>
<description><![CDATA[

		 飘屏事件

		 ]]></description>
<param><![CDATA[type

		 ]]></param>
<param><![CDATA[_msgs	[Array]	样式:[[PiaoMsgType.TYPE_BLUE,-20],[PiaoMsgType.TYPE_BAD_STRING,"场景人数已满"]]

		 ]]></param>
<param><![CDATA[_x

		 ]]></param>
<param><![CDATA[_y

		 ]]></param>
<param><![CDATA[bubbles

		 ]]></param>
<param><![CDATA[cancelable

		 ]]></param>
</method>
<method name='clone' fullname='happymagic.events:PiaoMsgEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='happymagic.events:PiaoMsgEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='SHOW_PIAO_MSG' fullname='happymagic.events:PiaoMsgEvent/SHOW_PIAO_MSG' type='String' isStatic='true' isConst='true' defaultValue='showPiaoMsg' >
</field>
<field name='justShow' fullname='happymagic.events:PiaoMsgEvent/justShow' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='msgs' fullname='happymagic.events:PiaoMsgEvent/msgs' type='Array' isStatic='false' isConst='false' >
</field>
<field name='now' fullname='happymagic.events:PiaoMsgEvent/now' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='x' fullname='happymagic.events:PiaoMsgEvent/x' type='int' isStatic='false' isConst='false' >
</field>
<field name='y' fullname='happymagic.events:PiaoMsgEvent/y' type='int' isStatic='false' isConst='false' >
</field>
<classRec name='TaskEvent' fullname='happymagic.events:TaskEvent' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\events\TaskEvent.as' namespace='happymagic.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='TaskEvent' fullname='happymagic.events:TaskEvent/TaskEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='happymagic.events:TaskEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='happymagic.events:TaskEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='TASKS_STATE_CHANGE' fullname='happymagic.events:TaskEvent/TASKS_STATE_CHANGE' type='String' isStatic='true' isConst='true' defaultValue='taskStateChange' >
</field>
<field name='addTasks' fullname='happymagic.events:TaskEvent/addTasks' type='Array' isStatic='false' isConst='false' >
</field>
<field name='changeTasks' fullname='happymagic.events:TaskEvent/changeTasks' type='Array' isStatic='false' isConst='false' >
</field>
<field name='finishTasks' fullname='happymagic.events:TaskEvent/finishTasks' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='MagicBookEvent' fullname='happymagic.events:MagicBookEvent' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\events\MagicBookEvent.as' namespace='happymagic.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MagicBookEvent' fullname='happymagic.events:MagicBookEvent/MagicBookEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='happymagic.events:MagicBookEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='happymagic.events:MagicBookEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='CHANGE_MAGIC_TYPE' fullname='happymagic.events:MagicBookEvent/CHANGE_MAGIC_TYPE' type='String' isStatic='true' isConst='true' defaultValue='changeMagicType' >
</field>
<field name='MAGICBOOK_CLOSED' fullname='happymagic.events:MagicBookEvent/MAGICBOOK_CLOSED' type='String' isStatic='true' isConst='true' defaultValue='magicBookClosed' >
</field>
<field name='SHOW_CHANGE_MAGIC_TYPE' fullname='happymagic.events:MagicBookEvent/SHOW_CHANGE_MAGIC_TYPE' type='String' isStatic='true' isConst='true' defaultValue='showChangeMagicType' >
</field>
<field name='SHOW_MAGICBOOK' fullname='happymagic.events:MagicBookEvent/SHOW_MAGICBOOK' type='String' isStatic='true' isConst='true' defaultValue='showMagicBook' >
</field>
<field name='data' fullname='happymagic.events:MagicBookEvent/data' type='' isStatic='false' isConst='false' >
</field>
<classRec name='MainInfoEvent' fullname='happymagic.events:MainInfoEvent' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\events\MainInfoEvent.as' namespace='happymagic.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MainInfoEvent' fullname='happymagic.events:MainInfoEvent/MainInfoEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='happymagic.events:MainInfoEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='happymagic.events:MainInfoEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='RELOAD' fullname='happymagic.events:MainInfoEvent/RELOAD' type='String' isStatic='true' isConst='true' defaultValue='mainInfoReload' >
</field>
<field name='START_TMP_STATE' fullname='happymagic.events:MainInfoEvent/START_TMP_STATE' type='String' isStatic='true' isConst='true' defaultValue='mainInfoStartTmpState' >
</field>
<classRec name='DataManagerEvent' fullname='happymagic.events:DataManagerEvent' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\events\DataManagerEvent.as' namespace='happymagic.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='DataManagerEvent' fullname='happymagic.events:DataManagerEvent/DataManagerEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='happymagic.events:DataManagerEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='happymagic.events:DataManagerEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='USERINFO_CHANGE' fullname='happymagic.events:DataManagerEvent/USERINFO_CHANGE' type='String' isStatic='true' isConst='true' defaultValue='userInfoChange' >
</field>
<field name='userChange' fullname='happymagic.events:DataManagerEvent/userChange' type='happymagic.events:UserInfoChangeVo' isStatic='false' isConst='false' >
</field>
<classRec name='FriendsEvent' fullname='happymagic.events:FriendsEvent' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\events\FriendsEvent.as' namespace='happymagic.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='FriendsEvent' fullname='happymagic.events:FriendsEvent/FriendsEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='happymagic.events:FriendsEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='happymagic.events:FriendsEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='FRIENDS_DATA_COMPLETE' fullname='happymagic.events:FriendsEvent/FRIENDS_DATA_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='friendsDataComplete' >
</field>
<field name='HIDE_FRIENDS_VIEW' fullname='happymagic.events:FriendsEvent/HIDE_FRIENDS_VIEW' type='String' isStatic='true' isConst='true' defaultValue='hideFriendsView' >
</field>
<field name='SHOW_FRIENDS_VIEW' fullname='happymagic.events:FriendsEvent/SHOW_FRIENDS_VIEW' type='String' isStatic='true' isConst='true' defaultValue='showFriendsView' >
</field>
<classRec name='MagicClassBookEvent' fullname='happymagic.events:MagicClassBookEvent' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\events\MagicClassBookEvent.as' namespace='happymagic.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MagicClassBookEvent' fullname='happymagic.events:MagicClassBookEvent/MagicClassBookEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='happymagic.events:MagicClassBookEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='happymagic.events:MagicClassBookEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='CLOSE_EVENT' fullname='happymagic.events:MagicClassBookEvent/CLOSE_EVENT' type='String' isStatic='true' isConst='true' defaultValue='closeMagicClassBook' >
</field>
<field name='SHOW_EVENT' fullname='happymagic.events:MagicClassBookEvent/SHOW_EVENT' type='String' isStatic='true' isConst='true' defaultValue='showMagicClassBook' >
</field>
<classRec name='DiaryEvent' fullname='happymagic.events:DiaryEvent' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\events\DiaryEvent.as' namespace='happymagic.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='DiaryEvent' fullname='happymagic.events:DiaryEvent/DiaryEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='happymagic.events:DiaryEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='happymagic.events:DiaryEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='DIARY_ADDED' fullname='happymagic.events:DiaryEvent/DIARY_ADDED' type='String' isStatic='true' isConst='true' defaultValue='diaryAdded' >
</field>
<classRec name='ActionStepEvent' fullname='happymagic.events:ActionStepEvent' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\events\ActionStepEvent.as' namespace='happymagic.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ActionStepEvent' fullname='happymagic.events:ActionStepEvent/ActionStepEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;_actType;bubbles;cancelable' param_types='String;String;Boolean;Boolean' param_defaults='undefined;undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='happymagic.events:ActionStepEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='happymagic.events:ActionStepEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='ACTION_HAPPEN' fullname='happymagic.events:ActionStepEvent/ACTION_HAPPEN' type='String' isStatic='true' isConst='true' defaultValue='actionHappen' >
</field>
<field name='ON_DESKCRYSTAL_CLICK' fullname='happymagic.events:ActionStepEvent/ON_DESKCRYSTAL_CLICK' type='String' isStatic='true' isConst='true' defaultValue='onDeskCrystalClick' >
</field>
<field name='ON_DOOR_CLICK' fullname='happymagic.events:ActionStepEvent/ON_DOOR_CLICK' type='String' isStatic='true' isConst='true' defaultValue='onDoorClick' >
</field>
<field name='ON_DOOR_READY' fullname='happymagic.events:ActionStepEvent/ON_DOOR_READY' type='String' isStatic='true' isConst='true' defaultValue='onDoorReady' >
</field>
<field name='ON_FINISH_GUIDE' fullname='happymagic.events:ActionStepEvent/ON_FINISH_GUIDE' type='String' isStatic='true' isConst='true' defaultValue='onFinishGuide' >
</field>
<field name='ON_MAGIC_CLASS_SELECTED' fullname='happymagic.events:ActionStepEvent/ON_MAGIC_CLASS_SELECTED' type='String' isStatic='true' isConst='true' defaultValue='onMagicClassSelected' >
</field>
<field name='ON_MENU_MAGICBOOK_CLICK' fullname='happymagic.events:ActionStepEvent/ON_MENU_MAGICBOOK_CLICK' type='String' isStatic='true' isConst='true' defaultValue='onMenuMagicBookClick' >
</field>
<field name='ON_MIXTAB_CLICK' fullname='happymagic.events:ActionStepEvent/ON_MIXTAB_CLICK' type='String' isStatic='true' isConst='true' defaultValue='onMixTabClick' >
</field>
<field name='ON_MIX_COMPLETE' fullname='happymagic.events:ActionStepEvent/ON_MIX_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='onMixComplete' >
</field>
<field name='ON_MIX_SHOWINFO' fullname='happymagic.events:ActionStepEvent/ON_MIX_SHOWINFO' type='String' isStatic='true' isConst='true' defaultValue='onMixShowInfo' >
</field>
<field name='ON_STUDENT_EVENT_CLICK' fullname='happymagic.events:ActionStepEvent/ON_STUDENT_EVENT_CLICK' type='String' isStatic='true' isConst='true' defaultValue='onStudentEventClick' >
</field>
<field name='ON_STUDENT_EVENT_HAPPEN' fullname='happymagic.events:ActionStepEvent/ON_STUDENT_EVENT_HAPPEN' type='String' isStatic='true' isConst='true' defaultValue='onStudentEventHappen' >
</field>
<field name='ON_STUDENT_NEED_CLICK' fullname='happymagic.events:ActionStepEvent/ON_STUDENT_NEED_CLICK' type='String' isStatic='true' isConst='true' defaultValue='onStudentNeedClick' >
</field>
<field name='ON_STUDENT_TEACHCLICK' fullname='happymagic.events:ActionStepEvent/ON_STUDENT_TEACHCLICK' type='String' isStatic='true' isConst='true' defaultValue='onStudentTeachClick' >
</field>
<field name='ON_STUDENT_TODESK' fullname='happymagic.events:ActionStepEvent/ON_STUDENT_TODESK' type='String' isStatic='true' isConst='true' defaultValue='onStudentToDesk' >
</field>
<field name='ON_TEACH_COMPLETE' fullname='happymagic.events:ActionStepEvent/ON_TEACH_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='onTeachComplete' >
</field>
<field name='ON_TRANSTAB_CLICK' fullname='happymagic.events:ActionStepEvent/ON_TRANSTAB_CLICK' type='String' isStatic='true' isConst='true' defaultValue='onTransTabClick' >
</field>
<field name='ON_USETRANSBTN_CLICK' fullname='happymagic.events:ActionStepEvent/ON_USETRANSBTN_CLICK' type='String' isStatic='true' isConst='true' defaultValue='onUseTransBtnClick' >
</field>
<field name='ON_USETRANS_COMPLETE' fullname='happymagic.events:ActionStepEvent/ON_USETRANS_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='onUseTransComplete' >
</field>
<field name='actType' fullname='happymagic.events:ActionStepEvent/actType' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='SmartURL' fullname='br.com.stimuli.loading.utils:SmartURL' sourcefile='E:\work\happyMagic\src\client\libs\br\com\stimuli\loading\utils\SmartURL.as' namespace='br.com.stimuli.loading.utils' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='SmartURL' fullname='br.com.stimuli.loading.utils:SmartURL/SmartURL' isStatic='false' isFinal='false' isOverride='false'  param_names='rawString' param_types='String' param_defaults='undefined' result_type='*'>
</method>
<method name='toString' fullname='br.com.stimuli.loading.utils:SmartURL/toString' isStatic='false' isFinal='false' isOverride='false'  param_names='rest' param_types='restParam' param_defaults='undefined' result_type='String'>
</method>
<field name='host' fullname='br.com.stimuli.loading.utils:SmartURL/host' type='String' isStatic='false' isConst='false' >
</field>
<field name='path' fullname='br.com.stimuli.loading.utils:SmartURL/path' type='String' isStatic='false' isConst='false' >
</field>
<field name='port' fullname='br.com.stimuli.loading.utils:SmartURL/port' type='int' isStatic='false' isConst='false' >
</field>
<field name='protocol' fullname='br.com.stimuli.loading.utils:SmartURL/protocol' type='String' isStatic='false' isConst='false' >
</field>
<field name='queryLength' fullname='br.com.stimuli.loading.utils:SmartURL/queryLength' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='queryObject' fullname='br.com.stimuli.loading.utils:SmartURL/queryObject' type='Object' isStatic='false' isConst='false' >
</field>
<field name='queryString' fullname='br.com.stimuli.loading.utils:SmartURL/queryString' type='String' isStatic='false' isConst='false' >
</field>
<field name='rawString' fullname='br.com.stimuli.loading.utils:SmartURL/rawString' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='RequestQueue' fullname='happymagic.utils:RequestQueue' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\utils\RequestQueue.as' namespace='happymagic.utils' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 桌子上的请求队列管理

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='RequestQueue' fullname='happymagic.utils:RequestQueue/RequestQueue' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='add' fullname='happymagic.utils:RequestQueue/add' isStatic='false' isFinal='false' isOverride='false'  param_names='$key;$vl' param_types='String;int' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='getInstance' fullname='happymagic.utils:RequestQueue/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happymagic.utils:RequestQueue'>
</method>
<method name='unset' fullname='happymagic.utils:RequestQueue/unset' isStatic='false' isFinal='false' isOverride='false'  param_names='$key' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='TYPE_INTERRUPTDECOR' fullname='happymagic.utils:RequestQueue/TYPE_INTERRUPTDECOR' type='String' isStatic='true' isConst='true' defaultValue='interruptDecor' >
</field>
<field name='TYPE_PICKDECOR' fullname='happymagic.utils:RequestQueue/TYPE_PICKDECOR' type='String' isStatic='true' isConst='true' defaultValue='pickDecorIds' >
</field>
<field name='interruptDecorIds' fullname='happymagic.utils:RequestQueue/interruptDecorIds' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='pickDecorIds' fullname='happymagic.utils:RequestQueue/pickDecorIds' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='single' fullname='happymagic.utils:RequestQueue/private:single' type='happymagic.utils:RequestQueue' isStatic='true' isConst='false' >
</field>
<classRec name='ItemOverControl' fullname='happyfish.display.control:ItemOverControl' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\display\control\ItemOverControl.as' namespace='happyfish.display.control' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ItemOverControl' fullname='happyfish.display.control:ItemOverControl/ItemOverControl' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='ItemOverControl.as$387:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='addOverItem' fullname='happyfish.display.control:ItemOverControl/addOverItem' isStatic='false' isFinal='false' isOverride='false'  param_names='target;over;out;params' param_types='flash.display:DisplayObjectContainer;Function;Function;Boolean' param_defaults='undefined;null;null;false' result_type='void'>
<description><![CDATA[

		 侦听target的over事件

		 ]]></description>
<param><![CDATA[target

		 ]]></param>
<param><![CDATA[over	over时调用的方法 需MouseEvent参数

		 ]]></param>
<param><![CDATA[out		out时调用的方法 需MouseEvent参数

		 ]]></param>
<param><![CDATA[parmas	是否调用回调时带上mouseEvent参数

		 ]]></param>
</method>
<method name='getInstance' fullname='happyfish.display.control:ItemOverControl/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.display.control:ItemOverControl'>
</method>
<method name='hideGlow' fullname='happyfish.display.control:ItemOverControl/hideGlow' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='outFun' fullname='happyfish.display.control:ItemOverControl/private:outFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='overFun' fullname='happyfish.display.control:ItemOverControl/private:overFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='removeFromStageFun' fullname='happyfish.display.control:ItemOverControl/private:removeFromStageFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='removeOverItem' fullname='happyfish.display.control:ItemOverControl/removeOverItem' isStatic='false' isFinal='false' isOverride='false'  param_names='target' param_types='flash.display:DisplayObjectContainer' param_defaults='undefined' result_type='void'>
</method>
<method name='showGlow' fullname='happyfish.display.control:ItemOverControl/showGlow' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<field name='instance' fullname='happyfish.display.control:ItemOverControl/private:instance' type='happyfish.display.control:ItemOverControl' isStatic='true' isConst='false' >
</field>
<field name='targetList' fullname='happyfish.display.control:ItemOverControl/private:targetList' type='flash.utils:Dictionary' isStatic='false' isConst='false' >
</field>
<packageRec name='com.greensock.null' fullname='com.greensock.null'>
<description><![CDATA[

 VERSION: 6.1

 DATE: 2010-12-20

 AS3 (AS2 is also available)

 UPDATES AND DOCS AT: http://www.greensock.com/overwritemanager/

 ]]></description>
</packageRec>
<classRec name='OverwriteManager' fullname='com.greensock:OverwriteManager' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\OverwriteManager.as' namespace='com.greensock' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

 OverwriteManager resolves conflicts between tweens and controls if (and how) existing tweens of the same

 target are overwritten. Think of it as a referee or traffic cop for tweens. For example, let's say you have

 a button with <code>ROLL_OVER</code> and <code>ROLL_OUT</code> handlers that tween an object's alpha and the user rolls their mouse

 over/out/over/out quickly. Most likely, you'd want each new tween to overwrite the other immediately so

 that you don't end up with multiple tweens vying for control of the alpha property. That describes

 the <code>ALL_IMMEDIATE</code> mode which is the default mode of TweenLite when it is not used in conjunction with

 TweenMax, TimelineLite, or TimelineMax. This keeps things small and fast. However, it isn't ideal for 

 setting up sequences because as soon as you create subsequent tweens of the same target in the sequence, 

 the previous one gets overwritten. And what if you have a tween that is controling 3 properties and 

 then you create another tween that only controls one of those properties? You may want the first tween 

 to continue tweening the other 2 (non-overlapping) properties. This describes the <code>AUTO</code> mode which is 

 the default whenever TweenMax, TimelineLite, or TimelineMax is used in your swf. OverwriteManager

 offers quite a few other modes to choose from in fact:

 

 <ul>

 		<li><b> NONE (0):</b> 

 					<ol>

 						<li><b>When:</b> Never</li>

 						<li><b>Finds:</b> Nothing</li>

 						<li><b>Kills:</b> Nothing</li>

 						<li><b>Performance:</b> Excellent</li>

 						<li><b>Good for:</b> When you know that your tweens won't conflict and you want maximum speed.</li>

 					</ol>

 		</li>

 				

 		<li><b> ALL_IMMEDIATE (1):</b> 

 					<ol>

 						<li><b>When:</b> Immediately when the tween is created.</li>

 						<li><b>Finds:</b> All tweens of the same target (regardless of timing or overlapping properties).</li>

 						<li><b>Kills:</b> Every tween found</li>

 						<li><b>Performance:</b> Excellent</li>

 						<li><b>Good for:</b> When you want the tween to take priority over all other tweens of the 

 											 same target, like on button rollovers/rollouts. However, this mode is 

 											 bad for setting up sequences.</li>

 					</ol>

 					This is the default mode for TweenLite unless TweenMax, TimelineLite, 

 					or TimelineMax are used in the SWF (in which case <code>AUTO</code> is the default mode).

 		</li>

 					

 		<li><b> AUTO (2):</b> 

 					<ol>

 						<li><b>When:</b> The first time the tween renders (you can <code>invalidate()</code> a tween to force it 

 										 to re-init and run its overwriting routine again next time it renders)</li>

 						<li><b>Finds:</b> Only tweens of the same target that are active (running). Tweens that haven't started yet are immune.</li>

 						<li><b>Kills:</b> Only individual overlapping tweening properties. If all tweening properties 

 										  have been overwritten, the entire tween will be killed as well.</li>

 						<li><b>Performance:</b> Very good when there aren't many overlapping tweens; fair when there are.</li>

 						<li><b>Good for:</b> Virtually all situations. This mode does the best job overall of handling 

 											 overwriting in an intuitive way and is excellent for sequencing. </li>

 					</ol>

 					This is the default mode when TweenMax, TimelineLite, or TimelineMax is used in your swf (those classes

 					automatically init() OverwriteManager in <code>AUTO</code> mode unless you have already initted OverwriteManager manually).

 		</li>

 					

 		<li><b> CONCURRENT (3):</b> 

 					<ol>

 						<li><b>When:</b> The first time the tween renders (you can <code>invalidate()</code> a tween to force it 

 										 to re-init and run its overwriting routine again next time it renders)</li>

 						<li><b>Finds:</b> Only tweens of the same target that are active (running). Tweens that haven't started yet are immune.</li>

 						<li><b>Kills:</b> Every tween found</li>

 						<li><b>Performance:</b> Very good</li>

 						<li><b>Good for:</b> When you want the target object to only be controled by one tween at a time. Good

 											 for sequencing although AUTO mode is typically better because it will only kill

 											 individual overlapping properties instead of entire tweens.</li>

 					</ol>

 		</li>

 				

 		<li><b> ALL_ONSTART (4):</b> 

 					<ol>

 						<li><b>When:</b> The first time the tween renders (you can <code>invalidate()</code> a tween to force it 

 										 to re-init and run its overwriting routine again next time it renders)</li>

 						<li><b>Finds:</b> All tweens of the same target (regardless of timing or overlapping properties).</li>

 						<li><b>Kills:</b> Every tween found</li>

 						<li><b>Performance:</b> Very good</li>

 						<li><b>Good for:</b> When you want a tween to take priority and wipe out all other tweens of the 

 											 same target even if they start later. This mode is rarely used.</li>

 					</ol>

 		</li>

 

 		<li><b> PREEXISTING (5):</b> 

 					<ol>

 						<li><b>When:</b> The first time the tween renders (you can <code>invalidate()</code> a tween to force it 

 										 to re-init and run its overwriting routine again next time it renders)</li>

 						<li><b>Finds:</b> Only the tweens of the same target that were created before this tween was created 

 										  (regardless of timing or overlapping properties). Virtually identical to <code>ALL_IMMEDIATE</code>

 										  except that <code>PREEXISTING</code> doesn't run its overwriting routines until it renders for the

 										  first time, meaning that if it has a delay, other tweens won't be overwritten until the delay expires.</li>

 						<li><b>Kills:</b> Every tween found</li>

 						<li><b>Performance:</b> Very good</li>

 						<li><b>Good for:</b> When the order in which your code runs plays a critical role, like when tweens

 											 that you create later should always take precidence over previously created ones

 											 regardless of when they're scheduled to run. If <code>ALL_IMMEDIATE</code> is great except

 											 that you want to wait on overwriting until the tween begins, <code>PREEXISTING</code> is perfect.</li>

 					</ol>

 		</li>

 	</ul>

 

 With the exception of <code>ALL_IMMEDIATE</code> (which performs overwriting immediatly when the tween is created), 

 all overwriting occurs when a tween renders for the first time. So if your tween has a delay of 1 second,

 it will not overwrite any tweens until that point. <br /><br />

 

 You can define a default overwriting mode for all tweens using the <code>OverwriteManager.init()</code> method, like:<br /><br /><code>

 

 		OverwriteManager.init(OverwriteManager.AUTO);<br /><br /></code>

 

 If you want to override the default mode in a particular tween, just use the <code>overwrite</code> special 

 property. You can use the static constant or the corresponding number. The following two lines produce 

 the same results:<br /><br /><code>

 

 		TweenMax.to(mc, 1, {x:100, overwrite:OverwriteManager.PREXISTING});<br />

 		TweenMax.to(mc, 1, {x:100, overwrite:5});<br /><br /></code>

 

 OverwriteManager is a separate, optional class for TweenLite primarily because of file size concerns. 

 Without initting OverwriteManager, TweenLite can only recognize modes 0 and 1 (<code>NONE</code> and <code>ALL_IMMEDIATE</code>). 

 However, TweenMax, TimelineLite, and TimelineMax automatically init() OverwriteManager in <code>AUTO</code> mode 

 unless you have already initted OverwriteManager manually. You do not need to take any additional steps

 to use AUTO mode if you're using any of those classes somewhere in your project. Keep in mind too that setting 

 the default OverwriteManager mode will affect TweenLite and TweenMax tweens.<br /><br />

 		

 

 <b>EXAMPLES:</b><br /><br /> 

 

 	To start OverwriteManager in <code>AUTO</code> mode (the default) and then do a simple TweenLite tween, simply do:<br /><br /><code>

 		

 		import com.greensock.OverwriteManager;<br />

 		import com.greensock.TweenLite;<br /><br />

 		

 		OverwriteManager.init(OverwriteManager.AUTO);<br />

 		TweenLite.to(mc, 2, {x:300});<br /><br /></code>

 		

 	You can also define overwrite behavior in individual tweens, like so:<br /><br /><code>

 	

 		import com.greensock.OverwriteManager;<br />

 		import com.greensock.TweenLite;<br /><br />

 		

 		OverwriteManager.init(2);<br />

 		TweenLite.to(mc, 2, {x:"300", y:"100"});<br />

 		TweenLite.to(mc, 1, {alpha:0.5, overwrite:1}); //or use the constant OverwriteManager.ALL_IMMEDIATE<br />

 		TweenLite.to(mc, 3, {x:200, rotation:30, overwrite:2}); //or use the constant OverwriteManager.AUTO<br /><br /></code>

 		

 		

 	OverwriteManager's mode can be changed anytime after init() is called, like.<br /><br /><code>

 		

 		OverwriteManager.mode = OverwriteManager.CONCURRENT;<br /><br /></code>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='getGlobalPaused' fullname='com.greensock:OverwriteManager/getGlobalPaused' isStatic='true' isFinal='false' isOverride='false'  param_names='tween' param_types='com.greensock.core:TweenCore' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='init' fullname='com.greensock:OverwriteManager/init' isStatic='true' isFinal='false' isOverride='false'  param_names='defaultMode' param_types='int' param_defaults='2' result_type='int'>
<description><![CDATA[ 

		 Initializes OverwriteManager and sets the default management mode. Options include: 

		 <ul>

		 		<li><b> NONE (0):</b> 

		 					<ol>

		 						<li><b>When:</b> Never</li>

		 						<li><b>Finds:</b> Nothing</li>

		 						<li><b>Kills:</b> Nothing</li>

		 						<li><b>Performance:</b> Excellent</li>

		 						<li><b>Good for:</b> When you know that your tweens won't conflict and you want maximum speed.</li>

		 					</ol>

		 		</li>

		 				

		 		<li><b> ALL_IMMEDIATE (1):</b> 

		 					<ol>

		 						<li><b>When:</b> Immediately when the tween is created.</li>

		 						<li><b>Finds:</b> All tweens of the same target (regardless of timing or overlapping properties).</li>

		 						<li><b>Kills:</b> Every tween found</li>

		 						<li><b>Performance:</b> Excellent</li>

		 						<li><b>Good for:</b> When you want the tween to take priority over all other tweens of the 

		 											 same target, like on button rollovers/rollouts. However, this mode is 

		 											 bad for setting up sequences.</li>

		 					</ol>

		 					This is the default mode for TweenLite unless TweenMax, TimelineLite, 

		 					or TimelineMax are used in the SWF (in which case <code>AUTO</code> is the default mode).

		 		</li>

		 					

		 		<li><b> AUTO (2):</b> 

		 					<ol>

		 						<li><b>When:</b> The first time the tween renders (you can <code>invalidate()</code> a tween to force it 

		 										 to re-init and run its overwriting routine again next time it renders)</li>

		 						<li><b>Finds:</b> Only tweens of the same target that are active (running). Tweens that haven't started yet are immune.</li>

		 						<li><b>Kills:</b> Only individual overlapping tweening properties. If all tweening properties 

		 										  have been overwritten, the entire tween will be killed as well.</li>

		 						<li><b>Performance:</b> Very good when there aren't many overlapping tweens; fair when there are.</li>

		 						<li><b>Good for:</b> Virtually all situations. This mode does the best job overall of handling 

		 											 overwriting in an intuitive way and is excellent for sequencing. </li>

		 					</ol>

		 					This is the default mode when TweenMax, TimelineLite, or TimelineMax is used in your swf (those classes

		 					automatically init() OverwriteManager in <code>AUTO</code> mode unless you have already initted OverwriteManager manually).

		 		</li>

		 					

		 		<li><b> CONCURRENT (3):</b> 

		 					<ol>

		 						<li><b>When:</b> The first time the tween renders (you can <code>invalidate()</code> a tween to force it 

		 										 to re-init and run its overwriting routine again next time it renders)</li>

		 						<li><b>Finds:</b> Only tweens of the same target that are active (running). Tweens that haven't started yet are immune.</li>

		 						<li><b>Kills:</b> Every tween found</li>

		 						<li><b>Performance:</b> Very good</li>

		 						<li><b>Good for:</b> When you want the target object to only be controled by one tween at a time. Good

		 											 for sequencing although AUTO mode is typically better because it will only kill

		 											 individual overlapping properties instead of entire tweens.</li>

		 					</ol>

		 		</li>

		 				

		 		<li><b> ALL_ONSTART (4):</b> 

		 					<ol>

		 						<li><b>When:</b> The first time the tween renders (you can <code>invalidate()</code> a tween to force it 

		 										 to re-init and run its overwriting routine again next time it renders)</li>

		 						<li><b>Finds:</b> All tweens of the same target (regardless of timing or overlapping properties).</li>

		 						<li><b>Kills:</b> Every tween found</li>

		 						<li><b>Performance:</b> Very good</li>

		 						<li><b>Good for:</b> When you want a tween to take priority and wipe out all other tweens of the 

		 											 same target even if they start later. This mode is rarely used.</li>

		 					</ol>

		 		</li>

		 

		 		<li><b> PREEXISTING (5):</b> 

		 					<ol>

		 						<li><b>When:</b> The first time the tween renders (you can <code>invalidate()</code> a tween to force it 

		 										 to re-init and run its overwriting routine again next time it renders)</li>

		 						<li><b>Finds:</b> Only the tweens of the same target that were created before this tween was created 

		 										  (regardless of timing or overlapping properties). Virtually identical to <code>ALL_IMMEDIATE</code>

		 										  except that <code>PREEXISTING</code> doesn't run its overwriting routines until it renders for the

		 										  first time, meaning that if it has a delay, other tweens won't be overwritten until the delay expires.</li>

		 						<li><b>Kills:</b> Every tween found</li>

		 						<li><b>Performance:</b> Very good</li>

		 						<li><b>Good for:</b> When the order in which your code runs plays a critical role, like when tweens

		 											 that you create later should always take precidence over previously created ones

		 											 regardless of when they're scheduled to run. If <code>ALL_IMMEDIATE</code> is great except

		 											 that you want to wait on overwriting until the tween begins, <code>PREEXISTING</code> is perfect.</li>

		 					</ol>

		 		</li>

		 	</ul>

		 

		 ]]></description>
<param><![CDATA[defaultMode The default mode that OverwriteManager should use.

		 ]]></param>
</method>
<method name='manageOverwrites' fullname='com.greensock:OverwriteManager/manageOverwrites' isStatic='true' isFinal='false' isOverride='false'  param_names='tween;props;targetTweens;mode' param_types='com.greensock:TweenLite;Object;Array;int' param_defaults='undefined;undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ 

		 ]]></description>
<return><![CDATA[Boolean value indicating whether or not properties may have changed on the target when overwriting occurred. For example, when a motionBlur (plugin) is disabled, it swaps out a BitmapData for the target and may alter the alpha. We need to know this in order to determine whether or not the new tween should be re-initted() with the changed properties. 

		 ]]></return>
<private><![CDATA[]]></private>
</method>
<field name='ALL_IMMEDIATE' fullname='com.greensock:OverwriteManager/ALL_IMMEDIATE' type='int' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[ Overwrites all existing tweens of the same target immediately when the tween is created ]]></description>
</field>
<field name='ALL_ONSTART' fullname='com.greensock:OverwriteManager/ALL_ONSTART' type='int' isStatic='true' isConst='true' defaultValue='4' >
<description><![CDATA[ Overwrites all tweens of the same target (regardless of overlapping properties or timing) when the tween renders for the first time as opposed to ALL_IMMEDIATE which performs overwriting immediately when the tween is created. ]]></description>
</field>
<field name='AUTO' fullname='com.greensock:OverwriteManager/AUTO' type='int' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[ Only overwrites individual overlapping tweening properties in other tweens of the same target. TweenMax, TimelineLite, and TimelineMax automatically init() OverwriteManager in this mode if you haven't already called OverwriteManager.init(). ]]></description>
</field>
<field name='CONCURRENT' fullname='com.greensock:OverwriteManager/CONCURRENT' type='int' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[ Overwrites tweens of the same target that are active when the tween renders for the first time. ]]></description>
</field>
<field name='NONE' fullname='com.greensock:OverwriteManager/NONE' type='int' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[ Won't overwrite any other tweens ]]></description>
</field>
<field name='PREEXISTING' fullname='com.greensock:OverwriteManager/PREEXISTING' type='int' isStatic='true' isConst='true' defaultValue='5' >
<description><![CDATA[ Overwrites tweens of the same target that existed before this tween regardless of their start/end time or active state or overlapping properties. ]]></description>
</field>
<field name='enabled' fullname='com.greensock:OverwriteManager/enabled' type='Boolean' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='mode' fullname='com.greensock:OverwriteManager/mode' type='int' isStatic='true' isConst='false' >
<description><![CDATA[ The default overwrite mode for all TweenLite and TweenMax instances ]]></description>
</field>
<field name='version' fullname='com.greensock:OverwriteManager/version' type='Number' isStatic='true' isConst='true' defaultValue='6.1' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.null' fullname='com.greensock.null'>
<description><![CDATA[

 VERSION: 11.62

 DATE: 2010-12-24

 AS3 (AS2 version is also available)

 UPDATES AND DOCS AT: http://www.greensock.com

 ]]></description>
</packageRec>
<classRec name='TweenLite' fullname='com.greensock:TweenLite' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\TweenLite.as' namespace='com.greensock' access='public' baseclass='com.greensock.core:TweenCore' isFinal='false' isDynamic='false' >
<description><![CDATA[

 	TweenLite is an extremely fast, lightweight, and flexible tweening engine that serves as the foundation of 

 	the GreenSock Tweening Platform. A TweenLite instance handles tweening one or more numeric properties of any

  object over time, updating them on every frame. Sounds simple, but there's a wealth of capabilities and conveniences

  at your fingertips with TweenLite. With plenty of other tweening engines to choose from, here's why you might 

  want to consider TweenLite:

 	<ul>

 		<li><b> SPEED </b>- TweenLite has been highly optimized for maximum performance. See some speed comparisons yourself at 

 			 <a href="http://www.greensock.com/tweening-speed-test/">http://www.greensock.com/tweening-speed-test/</a></li>

 		  

 		<li><b> Feature set </b>- In addition to tweening ANY numeric property of ANY object, TweenLite can tween filters, 

 		  	 hex colors, volume, tint, frames, and even do bezier tweening, plus LOTS more. TweenMax extends 

 		  	 TweenLite and adds even more capabilities like repeat, yoyo, repeatDelay, timeScale, event dispatching, on-the-fly 

 			 destination value updates, rounding and more. Overwrite management is an important consideration in 

 			 a tweening engine as well which is another area where the GreenSock Tweening Platform shines. 

 			 You have options for AUTO overwriting or you can manually define how each tween will handle overlapping 

 			 tweens of the same object.</li>

 		  

 		<li><b> Expandability </b>- With its plugin architecture, you can activate as many (or as few) features as your 

 		  	 project requires. Write your own plugin to handle particular special properties in custom ways. Minimize bloat, and

 		  	 maximize performance.</li>

 		  

 		<li><b> Sequencing, grouping, and management features </b>- TimelineLite and TimelineMax make it surprisingly 

 			 simple to create complex sequences or groups of tweens that you can control as a whole. play(), pause(), restart(), 

 			 or reverse(). You can even tween a timeline's <code>currentTime</code> or <code>currentProgress</code> property 

 			 to fastforward or rewind the entire timeline. Add labels, gotoAndPlay(), change the timeline's timeScale, nest 

 			 timelines within timelines, and lots more.</li>

 		  

 		<li><b> Ease of use </b>- Designers and Developers alike rave about how intuitive the platform is.</li>

 		

 		<li><b> Updates </b>- Frequent updates and feature additions make the GreenSock Tweening Platform reliable and robust.</li>

 		

 		<li><b> AS2 and AS3 </b>- Most other engines are only developed for AS2 or AS3 but not both.</li>

 	</ul>

 

 <hr />	

 <b>SPECIAL PROPERTIES (no plugins required):</b>

 The following special properties can be defined in the <code>vars</code> parameter which can 

 be either a generic Object or a <code><a href="data/TweenLiteVars.html">TweenLiteVars</a></code> instance:

 <br />

 

 <ul>

 	<li><b> delay : Number</b>			Amount of delay in seconds (or frames for frames-based tweens) before the tween should begin.</li>

 	

 	<li><b> useFrames : Boolean</b>		If useFrames is set to true, the tweens's timing mode will be based on frames. 

 										Otherwise, it will be based on seconds/time. NOTE: a tween's timing mode is 

 										always determined by its parent timeline. </li>

 	

 	<li><b> ease : Function</b>			Use any standard easing equation to control the rate of change. For example, 

 										<code>Elastic.easeOut</code>. The Default is Quad.easeOut.</li>

 	

 	<li><b> easeParams : Array</b>		An Array of extra parameters to feed the easing equation. This can be useful when 

 										using an ease like <code>Elastic</code> and want to control extra parameters like the amplitude 

 										and period.	Most easing equations, however, don't require extra parameters so you 

 										won't need to pass in any easeParams.</li>

 	

 	<li><b> immediateRender : Boolean</b> Normally when you create a tween, it begins rendering on the very next frame (when 

 										the Flash Player dispatches an ENTER_FRAME event) unless you specify a <code>delay</code>. This 

 										allows you to insert tweens into timelines and perform other actions that may affect 

 										its timing. However, if you prefer to force the tween to render immediately when it is 

 										created, set <code>immediateRender</code> to true. Or to prevent a tween with a duration of zero from

 										rendering immediately, set <code>immediateRender</code> to false.</li>

 	

  <li><b> onInit : Function</b>		A function that should be called just before the tween inits (renders for the first time).

 										Since onInit runs before the start/end values are recorded internally, it is a good place to run

 										code that affects the target's initial position or other tween-related properties. onStart, by

 										contrast, runs AFTER the tween inits and the start/end values are recorded internally. onStart

 										is called every time the tween begins which can happen more than once if the tween is restarted

 										multiple times.</li>

 	

  <li><b> onInitParams : Array</b>	An Array of parameters to pass the onInit function.</li>	

 

  <li><b> onStart : Function</b>		A function that should be called when the tween begins (when its currentTime is at 0 and 

 										changes to some other value which can happen more than once if the tween is restarted multiple times).</li>

 	

 	<li><b> onStartParams : Array</b>	An Array of parameters to pass the onStart function.</li>

 	

 	<li><b> onUpdate : Function</b>		A function that should be called every time the tween's time/position is updated 

 										(on every frame while the tween is active)</li>

 	

 	<li><b> onUpdateParams : Array</b>	An Array of parameters to pass the onUpdate function</li>

 	

 	<li><b> onComplete : Function</b>	A function that should be called when the tween has finished </li>

 	

 	<li><b> onCompleteParams : Array</b> An Array of parameters to pass the onComplete function</li>

 	

 	<li><b> onReverseComplete : Function</b> A function that should be called when the tween has reached its starting point again after having been reversed. </li>

 	

 	<li><b> onReverseCompleteParams : Array</b> An Array of parameters to pass the onReverseComplete function</li>

 

  <li><b> paused : Boolean</b>		If true, the tween will be paused initially.</li>

 	

 	<li><b> overwrite : int</b>			Controls how (and if) other tweens of the same target are overwritten by this tween. There are

 										several modes to choose from, but only the first two are available in TweenLite unless 

 										<code>OverwriteManager.init()</code> has been called (please see 

 										<a href="http://www.greensock.com/overwritemanager/">http://www.greensock.com/overwritemanager/</a> 

 										for details and a full explanation of the various modes):

 										<ul>

 			  								<li>NONE (0) (or false) </li>

 											

 											<li>ALL_IMMEDIATE (1) (or true) - this is the default mode in TweenLite</li>

 													

 											<li>AUTO (2) - this is the default mode if TweenMax, TimelineLite, or TimelineMax is used in the swf. (these classes automatically init() OverwriteManager if you haven't done so already)</li>

 												

 											<li>CONCURRENT (3) (requires OverwriteManager)</li>

 												

 											<li>ALL_ONSTART (4) (requires OverwriteManager)</li>

 												

 											<li>PREEXISTING (5) (requires OverwriteManager)</li>

 

 										</ul></li>

 	</ul>

 

 <b>Note:</b> Using a <code><a href="data/TweenLiteVars.html">TweenLiteVars</a></code> instance 

 instead of a generic object to define your <code>vars</code> is a bit more verbose but provides 

 code hinting and improved debugging because it enforces strict data typing. Use whichever one you prefer.<br /><br />

 

 <b>PLUGINS:</b><br /><br />

 

 	There are many plugins that add capabilities through other special properties. Some examples are "tint", 

 	"volume", "frame", "frameLabel", "bezier", "blurFilter", "colorMatrixFilter", "hexColors", and many more.

 	Adding the capabilities is as simple as activating the plugin with a single line of code, like 

 	TweenPlugin.activate([TintPlugin]); Get information about all the plugins at 

  <a href="http://www.TweenLite.com">http://www.TweenLite.com</a><br /><br />

 

 <b>EXAMPLES:</b> <br /><br />

 

 	Please see <a href="http://www.tweenlite.com">http://www.tweenlite.com</a> for examples, tutorials, and interactive demos. <br /><br />

 

 <b>NOTES / TIPS:</b><br /><br />

 <ul>

 	<li> The base TweenLite class adds about 4.7kb to your compressed swf (if no plugins are activated)</li>

 	  

 	<li> Passing values as Strings will make the tween relative to the current value. For example, if you do

 	  <code>TweenLite.to(mc, 2, {x:"-20"});</code> it'll move the mc.x to the left 20 pixels which is the same as doing

 	  <code>TweenLite.to(mc, 2, {x:mc.x - 20});</code> You could also cast it like: <code>TweenLite.to(mc, 2, {x:String(myVariable)});</code></li>

 	  

 	<li> You can change the <code>TweenLite.defaultEase</code> function if you prefer something other than <code>Regular.easeOut</code>.</li>

 	

 	<li> Kill all tweens for a particular object anytime with the <code>TweenLite.killTweensOf(mc); </code></li>

 	  

 	<li> You can kill all delayedCalls to a particular function using <code>TweenLite.killDelayedCallsTo(myFunction);</code>

 	  This can be helpful if you want to preempt a call.</li>

 	  

 	<li> Use the <code>TweenLite.from()</code> method to animate things into place. For example, if you have things set up on 

 	  the stage in the spot where they should end up, and you just want to animate them into place, you can 

 	  pass in the beginning x and/or y and/or alpha (or whatever properties you want).</li>

 	  

 	<li> If you find this class useful, please consider joining Club GreenSock which not only helps to sustain

 	  ongoing development, but also gets you bonus plugins, classes and other benefits that are ONLY available 

 	  to members. Learn more at <a href="http://www.greensock.com/club/">http://www.greensock.com/club/</a></li>

 </ul>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='TweenLite' fullname='com.greensock:TweenLite/TweenLite' isStatic='false' isFinal='false' isOverride='false'  param_names='target;duration;vars' param_types='Object;Number;Object' param_defaults='undefined;undefined;undefined' result_type='*'>
<description><![CDATA[

		 Constructor

		  

		 ]]></description>
<param><![CDATA[target Target object whose properties this tween affects. This can be ANY object, not just a DisplayObject. 

		 ]]></param>
<param><![CDATA[duration Duration in seconds (or in frames if the tween's timing mode is frames-based)

		 ]]></param>
<param><![CDATA[vars An object containing the end values of the properties you're tweening. For example, to tween to x=100, y=100, you could pass {x:100, y:100}. It can also contain special properties like "onComplete", "ease", "delay", etc.

		 ]]></param>
</method>
<method name='delayedCall' fullname='com.greensock:TweenLite/delayedCall' isStatic='true' isFinal='false' isOverride='false'  param_names='delay;onComplete;onCompleteParams;useFrames' param_types='Number;Function;Array;Boolean' param_defaults='undefined;undefined;null;false' result_type='com.greensock:TweenLite'>
<description><![CDATA[

		 Provides a simple way to call a function after a set amount of time (or frames). You can

		 optionally pass any number of parameters to the function too. For example:<br /><br /><code>

		 

		 TweenLite.delayedCall(1, myFunction, ["param1", 2]); <br />

		 function myFunction(param1:String, param2:Number):void { <br />

		     trace("called myFunction and passed params: " + param1 + ", " + param2); <br />

		 } </code>

		 

		 ]]></description>
<param><![CDATA[delay Delay in seconds (or frames if useFrames is true) before the function should be called

		 ]]></param>
<param><![CDATA[onComplete Function to call

		 ]]></param>
<param><![CDATA[onCompleteParams An Array of parameters to pass the function.

		 ]]></param>
<param><![CDATA[useFrames If the delay should be measured in frames instead of seconds, set useFrames to true (default is false)

		 ]]></param>
<return><![CDATA[TweenLite instance

		 ]]></return>
</method>
<method name='easeOut' fullname='com.greensock:TweenLite/protected:easeOut' isStatic='true' isFinal='false' isOverride='false'  param_names='t;b;c;d' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='Number'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[t time

		 ]]></param>
<param><![CDATA[b start (must always be 0)

		 ]]></param>
<param><![CDATA[c change (must always be 1)

		 ]]></param>
<param><![CDATA[d duration

		 ]]></param>
<return><![CDATA[Eased value

		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='easeProxy' fullname='com.greensock:TweenLite/protected:easeProxy' isStatic='false' isFinal='false' isOverride='false'  param_names='t;b;c;d' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='Number'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[t time

		 ]]></param>
<param><![CDATA[b start

		 ]]></param>
<param><![CDATA[c change

		 ]]></param>
<param><![CDATA[d duration

		 ]]></param>
<return><![CDATA[Eased value

		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='from' fullname='com.greensock:TweenLite/from' isStatic='true' isFinal='false' isOverride='false'  param_names='target;duration;vars' param_types='Object;Number;Object' param_defaults='undefined;undefined;undefined' result_type='com.greensock:TweenLite'>
<description><![CDATA[

		 Static method for creating a TweenLite instance that tweens in the opposite direction

		 compared to a TweenLite.to() tween. In other words, you define the START values in the 

		 vars object instead of the end values, and the tween will use the current values as 

		 the end values. This can be very useful for animating things into place on the stage

		 because you can build them in their end positions and do some simple TweenLite.from()

		 calls to animate them into place. <b>NOTE:</b> By default, <code>immediateRender</code>

		 is <code>true</code> in from() tweens, meaning that they immediately render their starting state 

		 regardless of any delay that is specified. You can override this behavior by passing 

		 <code>immediateRender:false</code> in the <code>vars</code> object so that it will wait to 

		 render until the tween actually begins (often the desired behavior when inserting into timelines). 

		 To illustrate the default behavior, the following code will immediately set the <code>alpha</code> of <code>mc</code> 

		 to 0 and then wait 2 seconds before tweening the <code>alpha</code> back to 1 over the course 

		 of 1.5 seconds:<br /><br /><code>

		 

		 TweenLite.from(mc, 1.5, {alpha:0, delay:2});</code>

		 

		 ]]></description>
<param><![CDATA[target Target object whose properties this tween affects. This can be ANY object, not just a DisplayObject. 

		 ]]></param>
<param><![CDATA[duration Duration in seconds (or in frames if the tween's timing mode is frames-based)

		 ]]></param>
<param><![CDATA[vars An object containing the start values of the properties you're tweening. For example, to tween from x=100, y=100, you could pass {x:100, y:100}. It can also contain special properties like "onComplete", "ease", "delay", etc.

		 ]]></param>
<return><![CDATA[TweenLite instance

		 ]]></return>
</method>
<method name='initClass' fullname='com.greensock:TweenLite/initClass' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='init' fullname='com.greensock:TweenLite/protected:init' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='invalidate' fullname='com.greensock:TweenLite/invalidate' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[  

		 Clears any initialization data (like starting values in tweens) which can be useful if, for example, 

		 you want to restart it without reverting to any previously recorded starting values. When you invalidate() 

		 a tween/timeline, it will be re-initialized the next time it renders and its <code>vars</code> object will be re-parsed. 

		 The timing of the tween/timeline (duration, startTime, delay) will NOT be affected. Another example would be if you

		 have a <code>TweenMax(mc, 1, {x:100, y:100})</code> that ran when mc.x and mc.y were initially at 0, but now mc.x 

		 and mc.y are 200 and you want them tween to 100 again, you could simply <code>invalidate()</code> the tween and 

		 <code>restart()</code> it. Without invalidating first, restarting it would cause the values jump back to 0 immediately 

		 (where they started when the tween originally began). When you invalidate a timeline, it automatically invalidates 

		 all of its children.

		 ]]></description>
</method>
<method name='killTweensOf' fullname='com.greensock:TweenLite/killTweensOf' isStatic='true' isFinal='false' isOverride='false'  param_names='target;complete;vars' param_types='Object;Boolean;Object' param_defaults='undefined;false;null' result_type='void'>
<description><![CDATA[

		 Kills all the tweens (or certain tweening properties) of a particular object, optionally completing them first.

		 If, for example, you want to kill all tweens of the "mc" object, you'd do:<br /><br /><code>

		 

		 TweenLite.killTweensOf(mc);<br /><br /></code>

		 

		 But if you only want to kill all the "alpha" and "x" portions of mc's tweens, you'd do:<br /><br /><code>

		 

		 TweenLite.killTweensOf(mc, false, {alpha:true, x:true});<br /><br /></code>

		 

		 <code>killTweensOf()</code> affects tweens that haven't begun yet too. If, for example, 

		 a tween of object "mc" has a delay of 5 seconds and <code>TweenLite.killTweensOf(mc)</code> is called

		 2 seconds after the tween was created, it will still be killed even though it hasn't started yet. <br /><br />

		 

		 ]]></description>
<param><![CDATA[target Object whose tweens should be immediately killed

		 ]]></param>
<param><![CDATA[complete Indicates whether or not the tweens should be forced to completion before being killed.

		 ]]></param>
<param><![CDATA[vars An object defining which tweening properties should be killed (null causes all properties to be killed). For example, if you only want to kill "alpha" and "x" tweens of object "mc", you'd do <code>myTimeline.killTweensOf(mc, true, {alpha:true, x:true})</code>. If there are no tweening properties remaining in a tween after the indicated properties are killed, the entire tween is killed, meaning any onComplete, onUpdate, onStart, etc. won't fire.

		 ]]></param>
</method>
<method name='killVars' fullname='com.greensock:TweenLite/killVars' isStatic='false' isFinal='false' isOverride='false'  param_names='vars;permanent' param_types='Object;Boolean' param_defaults='undefined;true' result_type='Boolean'>
<description><![CDATA[

		 Allows particular properties of the tween to be killed. For example, if a tween is affecting 

		 the "x", "y", and "alpha" properties and you want to kill just the "x" and "y" parts of the 

		 tween, you'd do <code>myTween.killVars({x:true, y:true});</code>

		 

		 ]]></description>
<param><![CDATA[vars An object containing a corresponding property for each one that should be killed. The values don't really matter. For example, to kill the x and y property tweens, do <code>myTween.killVars({x:true, y:true});</code>

		 ]]></param>
<param><![CDATA[permanent If true, the properties specified in the vars object will be permanently disallowed in the tween. Typically the only time false might be used is while the tween is in the process of initting and a plugin needs to make sure tweens of a particular property (or set of properties) is killed. 

		 ]]></param>
<return><![CDATA[Boolean value indicating whether or not properties may have changed on the target when any of the vars were disabled. For example, when a motionBlur (plugin) is disabled, it swaps out a BitmapData for the target and may alter the alpha. We need to know this in order to determine whether or not a new tween that is overwriting this one should be re-initted() with the changed properties. 

		 ]]></return>
</method>
<method name='renderTime' fullname='com.greensock:TweenLite/renderTime' isStatic='false' isFinal='false' isOverride='true'  param_names='time;suppressEvents;force' param_types='Number;Boolean;Boolean' param_defaults='undefined;false;false' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setEnabled' fullname='com.greensock:TweenLite/setEnabled' isStatic='false' isFinal='false' isOverride='true'  param_names='enabled;ignoreTimeline' param_types='Boolean;Boolean' param_defaults='undefined;false' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='to' fullname='com.greensock:TweenLite/to' isStatic='true' isFinal='false' isOverride='false'  param_names='target;duration;vars' param_types='Object;Number;Object' param_defaults='undefined;undefined;undefined' result_type='com.greensock:TweenLite'>
<description><![CDATA[

		 Static method for creating a TweenLite instance. This can be more intuitive for some developers 

		 and shields them from potential garbage collection issues that could arise when assigning a

		 tween instance to a variable that persists. The following lines of code produce exactly 

		 the same result: <br /><br /><code>

		 

		 var myTween:TweenLite = new TweenLite(mc, 1, {x:100}); <br />

		 TweenLite.to(mc, 1, {x:100}); <br />

		 var myTween:TweenLite = TweenLite.to(mc, 1, {x:100});</code>

		 

		 ]]></description>
<param><![CDATA[target Target object whose properties this tween affects. This can be ANY object, not just a DisplayObject. 

		 ]]></param>
<param><![CDATA[duration Duration in seconds (or in frames if the tween's timing mode is frames-based)

		 ]]></param>
<param><![CDATA[vars An object containing the end values of the properties you're tweening. For example, to tween to x=100, y=100, you could pass {x:100, y:100}. It can also contain special properties like "onComplete", "ease", "delay", etc.

		 ]]></param>
<return><![CDATA[TweenLite instance

		 ]]></return>
</method>
<method name='updateAll' fullname='com.greensock:TweenLite/protected:updateAll' isStatic='true' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[e ENTER_FRAME Event

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<field name='_ease' fullname='com.greensock:TweenLite/protected:_ease' type='Function' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_hasPlugins' fullname='com.greensock:TweenLite/protected:_hasPlugins' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_notifyPluginsOfEnabled' fullname='com.greensock:TweenLite/protected:_notifyPluginsOfEnabled' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_overwrite' fullname='com.greensock:TweenLite/protected:_overwrite' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_overwrittenProps' fullname='com.greensock:TweenLite/protected:_overwrittenProps' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_reservedProps' fullname='com.greensock:TweenLite/protected:_reservedProps' type='Object' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_shape' fullname='com.greensock:TweenLite/private:_shape' type='flash.display:Shape' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='cachedPT1' fullname='com.greensock:TweenLite/cachedPT1' type='com.greensock.core:PropTween' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='defaultEase' fullname='com.greensock:TweenLite/defaultEase' type='Function' isStatic='true' isConst='false' defaultValue='' >
<description><![CDATA[ Provides an easy way to change the default easing equation.]]></description>
</field>
<field name='fastEaseLookup' fullname='com.greensock:TweenLite/fastEaseLookup' type='flash.utils:Dictionary' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='killDelayedCallsTo' fullname='com.greensock:TweenLite/killDelayedCallsTo' type='Function' isStatic='true' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='masterList' fullname='com.greensock:TweenLite/masterList' type='flash.utils:Dictionary' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='onPluginEvent' fullname='com.greensock:TweenLite/onPluginEvent' type='Function' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='overwriteManager' fullname='com.greensock:TweenLite/overwriteManager' type='Object' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='plugins' fullname='com.greensock:TweenLite/plugins' type='Object' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='propTweenLookup' fullname='com.greensock:TweenLite/propTweenLookup' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='ratio' fullname='com.greensock:TweenLite/ratio' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='rootFramesTimeline' fullname='com.greensock:TweenLite/rootFramesTimeline' type='com.greensock.core:SimpleTimeline' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='rootFrame' fullname='com.greensock:TweenLite/rootFrame' type='Number' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='rootTimeline' fullname='com.greensock:TweenLite/rootTimeline' type='com.greensock.core:SimpleTimeline' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='target' fullname='com.greensock:TweenLite/target' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[ Target object whose properties this tween affects. This can be ANY object, not just a DisplayObject. ]]></description>
</field>
<field name='version' fullname='com.greensock:TweenLite/version' type='Number' isStatic='true' isConst='true' defaultValue='11.62' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.null' fullname='com.greensock.null'>
<description><![CDATA[

 VERSION: 11.66

 DATE: 2011-01-25

 AS3 (AS2 version is also available)

 UPDATES AND DOCS AT: http://www.greensock.com 

 ]]></description>
</packageRec>
<classRec name='TweenMax' fullname='com.greensock:TweenMax' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\TweenMax.as' namespace='com.greensock' access='public' baseclass='com.greensock:TweenLite' interfaces='flash.events:IEventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

 	TweenMax extends the extremely lightweight, fast TweenLite engine, adding many useful features

 	like timeScale, event dispatching, updateTo(), yoyo, repeat, repeatDelay, rounding, and more. It also 

 	activates many extra plugins by default, making it extremely full-featured. Since TweenMax extends 

 	TweenLite, it can do ANYTHING TweenLite can do plus much more. The syntax is identical. With plenty 

  of other tweening engines to choose from, here's why you might want to consider TweenMax: 

 

 <ul>

 		<li><b> SPEED </b>- TweenMax has been highly optimized for maximum performance. See some speed comparisons yourself at 

 			 <a href="http://www.greensock.com/tweening-speed-test/">http://www.greensock.com/tweening-speed-test/</a></li>

 

 	    <li><b> Feature set </b>- In addition to tweening ANY numeric property of ANY object, TweenMax can tween filters, 

 		  	hex colors, volume, tint, frames, saturation, contrast, hue, colorization, brightness, and even do 

 		  	bezier tweening, orientToBezier, round values, jump to any point in the tween with the <code>currentTime</code> 

 			or <code>currentProgress</code> property, automatically rotate in the shortest direction, plus LOTS more. 

 		 	Overwrite management is an important consideration for a tweening engine as well which is another area 

 		  	where the GreenSock Tweening Platform shines. You have options for AUTO overwriting or you can manually 

 		  	define how each tween will handle overlapping tweens of the same object.</li>

 		  

 		<li><b> Expandability </b>- With its plugin architecture, you can activate as many (or as few) features as your 

 		  	 project requires. Write your own plugin to handle particular special properties in custom ways. Minimize bloat, and

 		  	 maximize performance.</li>

 		  

 		<li><b> Sequencing, grouping, and management features </b>- TimelineLite and TimelineMax make it surprisingly 

 			 simple to create complex sequences or groups of tweens that you can control as a whole. play(), pause(), restart(), 

 			 or reverse(). You can even tween a timeline's <code>currentTime</code> or <code>currentProgress</code> property 

 			 to fastforward or rewind the entire timeline. Add labels, gotoAndPlay(), change the timeline's timeScale, nest 

 			 timelines within timelines, and lots more.</li>

 		  

 		<li><b> Ease of use </b>- Designers and Developers alike rave about how intuitive the platform is.</li>

 		

 		<li><b> Updates </b>- Frequent updates and feature additions make the GreenSock Tweening Platform reliable and robust.</li>

 		

 		<li><b> AS2 and AS3 </b>- Most other engines are only developed for AS2 or AS3 but not both.</li>

 	</ul>

 	         			

 <b>SPECIAL PROPERTIES:</b><br /><br />

 The following special properties can be defined in the <code>vars</code> parameter which can 

 be either a generic Object or a <code><a href="data/TweenMaxVars.html">TweenMaxVars</a></code> instance:

  <ul>

 	 <li><b> delay : Number</b>				Amount of delay in seconds (or frames for frames-based tweens) before the tween should begin.</li>

 	

 	<li><b> useFrames : Boolean</b>			If useFrames is set to true, the tweens's timing mode will be based on frames. 

 											Otherwise, it will be based on seconds/time. NOTE: a tween's timing mode is 

 											always determined by its parent timeline. </li>

 	

 	<li><b> ease : Function</b>				Use any standard easing equation to control the rate of change. For example, 

 											Elastic.easeOut. The Default is Quad.easeOut.</li>

 	

 	<li><b> easeParams : Array</b>			An Array of extra parameters to feed the easing equation (beyond the standard first 4). 

 											This can be useful when using an ease like Elastic and want to control extra parameters 

 											like the amplitude and period.	Most easing equations, however, don't require extra parameters 

 											so you won't need to pass in any easeParams.</li>

 	

 	<li><b> onInit : Function</b>			A function that should be called just before the tween inits (renders for the first time).

 											Since onInit runs before the start/end values are recorded internally, it is a good place to run

 											code that affects the target's initial position or other tween-related properties. onStart, by

 											contrast, runs AFTER the tween inits and the start/end values are recorded internally. onStart

 											is called every time the tween begins which can happen more than once if the tween is restarted

 											multiple times.</li>

 	

  <li><b> onInitParams : Array</b>		An Array of parameters to pass the onInit function.</li>	

 

  <li><b> onStart : Function</b>			A function that should be called when the tween begins (when its currentTime is at 0 and 

 											changes to some other value which can happen more than once if the tween is restarted multiple times).</li>

 	

 	<li><b> onStartParams : Array</b>		An Array of parameters to pass the onStart function.</li>

 	

 	<li><b> onUpdate : Function</b>			A function that should be called every time the tween's time/position is updated 

 											(on every frame while the timeline is active)</li>

 	

 	<li><b> onUpdateParams : Array</b>		An Array of parameters to pass the onUpdate function</li>

  

 	<li><b> onComplete : Function</b>		A function that should be called when the tween has finished </li>

 	

 	<li><b> onCompleteParams : Array</b>	An Array of parameters to pass the onComplete function</li>

 	

 	<li><b> onReverseComplete : Function</b> A function that should be called when the tween has reached its starting point again after having been reversed. </li>

 	

 	<li><b> onReverseCompleteParams : Array</b> An Array of parameters to pass the onReverseComplete function.</li>

  

 	<li><b> onRepeat : Function</b>			A function that should be called every time the tween repeats </li>

 	

 	<li><b> onRepeatParams : Array</b>		An Array of parameters to pass the onRepeat function</li>

 	

 	<li><b> immediateRender : Boolean</b> Normally when you create a tween, it begins rendering on the very next frame (when 

 											the Flash Player dispatches an ENTER_FRAME event) unless you specify a <code>delay</code>. This 

 											allows you to insert tweens into timelines and perform other actions that may affect 

 											its timing. However, if you prefer to force the tween to render immediately when it is 

 											created, set <code>immediateRender</code> to true. Or to prevent a tween with a duration of zero from

 											rendering immediately, set this to false.</li>

 

  <li><b> paused : Boolean</b>			If true, the tween will be paused initially.</li>

 

 	<li><b> reversed : Boolean</b>			If true, the tween will be reversed initially. This does not swap the starting/ending

 											values in the tween - it literally changes its orientation/direction. Imagine the playhead

 											moving backwards instead of forwards. This does NOT force it to the very end and start 

 											playing backwards. It simply affects the orientation of the tween, so if reversed is set to 

 											true initially, it will appear not to play because it is already at the beginning. To cause it to

 											play backwards from the end, set reversed to true and then set the <code>currentProgress</code> 

 											property to 1 immediately after creating the tween (or set the currentTime to the duration). </li>

 	

 	<li><b> overwrite : int</b>			Controls how (and if) other tweens of the same target are overwritten by this tween. There are

 										several modes to choose from, and TweenMax automatically calls <code>OverwriteManager.init()</code> if you haven't

 										already manually dones so, which means that by default <code>AUTO</code> mode is used (please see 

 										<a href="http://www.greensock.com/overwritemanager/">http://www.greensock.com/overwritemanager/</a> 

 										for details and a full explanation of the various modes):

 										<ul>

 			  								<li>NONE (0) (or false) </li>

 											

 											<li>ALL_IMMEDIATE (1) (or true)</li>

 													

 											<li>AUTO (2) - this is the default mode for TweenMax.</li>

 												

 											<li>CONCURRENT (3)</li>

 												

 											<li>ALL_ONSTART (4)</li>

 												

 											<li>PREEXISTING (5)</li>

 

 										</ul></li>

 	

 	<li><b> repeat : int</b>					Number of times that the tween should repeat. To repeat indefinitely, use -1.</li>

 	

 	<li><b> repeatDelay : Number</b>			Amount of time in seconds (or frames for frames-based tween) between repeats.</li>

 	

 	<li><b> yoyo : Boolean</b> 					Works in conjunction with the repeat property, determining the behavior of each 

 												cycle. When yoyo is true, the tween will go back and forth, appearing to reverse 

 												every other cycle (this has no affect on the "reversed" property though). So if repeat is

 												2 and yoyo is false, it will look like: start - 1 - 2 - 3 - 1 - 2 - 3 - 1 - 2 - 3 - end. But 

 												if repeat is 2 and yoyo is true, it will look like: start - 1 - 2 - 3 - 3 - 2 - 1 - 1 - 2 - 3 - end. </li>

 									

 	<li><b> onStartListener : Function</b>		A function to which the TweenMax instance should dispatch a TweenEvent when it begins.

 	  											This is the same as doing <code>myTween.addEventListener(TweenEvent.START, myFunction);</code></li>

 	

 	<li><b> onUpdateListener : Function</b>		A function to which the TweenMax instance should dispatch a TweenEvent every time it 

 												updates values.	This is the same as doing <code>myTween.addEventListener(TweenEvent.UPDATE, myFunction);</code></li>

 	  

 	<li><b> onCompleteListener : Function</b>	A function to which the TweenMax instance should dispatch a TweenEvent when it completes.

 	  											This is the same as doing <code>myTween.addEventListener(TweenEvent.COMPLETE, myFunction);</code></li>

 

  <li><b> onReverseCompleteListener : Function</b> A function to which the TweenMax instance should dispatch a TweenEvent when it completes

 												in the reverse direction. This is the same as doing <code>myTween.addEventListener(TweenEvent.REVERSE_COMPLETE, myFunction);</code></li>

 

  <li><b> onRepeatListener : Function</b>		A function to which the TweenMax instance should dispatch a TweenEvent when it repeats.

 	  											This is the same as doing <code>myTween.addEventListener(TweenEvent.REPEAT, myFunction);</code></li>

 	

 	<li><b> startAt : Object</b>				Allows you to define the starting values for each property. Typically, TweenMax uses the current

 												value (whatever it happens to be at the time the tween begins) as the start value, but startAt

 												allows you to override that behavior. Simply pass an object in with whatever properties you'd like

 												to set just before the tween begins. For example, if mc.x is currently 100, and you'd like to 

 												tween it from 0 to 500, do <code>TweenMax.to(mc, 2, {x:500, startAt:{x:0}});</code> </li>

 </ul>

 

 <b>Note:</b> Using a <code><a href="data/TweenMaxVars.html">TweenMaxVars</a></code> instance 

 instead of a generic Object to define your <code>vars</code> is a bit more verbose but provides 

 code hinting and improved debugging because it enforces strict data typing. Use whichever one you prefer.<br /><br />

 

 <b>PLUGINS: </b><br /><br />

 

 	There are many plugins that add capabilities through other special properties. Adding the capabilities 

 	is as simple as activating the plugin with a single line of code, like <code>TweenPlugin.activate([SetSizePlugin]);</code>

 	Get information about all the plugins at <a href="http://www.TweenMax.com">http://www.TweenMax.com</a>. The 

  following plugins are activated by default in TweenMax (you can easily prevent them from activating, thus 

  saving file size, by commenting out the associated activation lines towards the top of the class):

 	

 <ul>

 	  <li><b> autoAlpha : Number</b> - Use it instead of the alpha property to gain the additional feature of toggling 

 						   			   the visible property to false when alpha reaches 0. It will also toggle visible 

 						   			   to true before the tween starts if the value of autoAlpha is greater than zero.</li>

 						   

 	  <li><b> visible : Boolean</b> - To set a DisplayObject's "visible" property at the end of the tween, use this special property.</li>

 	  

 	  <li><b> volume : Number</b> - Tweens the volume of an object with a soundTransform property (MovieClip/SoundChannel/NetStream, etc.)</li>

 	  

 	  <li><b> tint : Number</b> - To change a DisplayObject's tint/color, set this to the hex value of the tint you'd like

 					  			  to end up at(or begin at if you're using TweenMax.from()). An example hex value would be 0xFF0000.</li>

 					  

 	  <li><b> removeTint : Boolean</b> - If you'd like to remove the tint that's applied to a DisplayObject, pass true for this special property.</li>

 	  

 	  <li><b> frame : Number</b> - Use this to tween a MovieClip to a particular frame.</li>

 	  

 	  <li><b> bezier : Array</b> - Bezier tweening allows you to tween in a non-linear way. For example, you may want to tween

 					  			  a MovieClip's position from the origin (0,0) 500 pixels to the right (500,0) but curve downwards

  				   			  through the middle of the tween. Simply pass as many objects in the bezier array as you'd like, 

 					   			  one for each "control point" (see documentation on Flash's curveTo() drawing method for more

 					   			  about how control points work). In this example, let's say the control point would be at x/y coordinates

 					   			  250,50. Just make sure your my_mc is at coordinates 0,0 and then do: 

 					   			  <code>TweenMax.to(my_mc, 3, {bezier:[{x:250, y:50}, {x:500, y:0}]});</code></li>

 					   

 	  <li><b> bezierThrough : Array</b> - Identical to bezier except that instead of passing bezier control point values, you

 							  			  pass points through which the bezier values should move. This can be more intuitive

 							  			  than using control points.</li>

 							  

 	  <li><b> orientToBezier : Array (or Boolean)</b> - A common effect that designers/developers want is for a MovieClip/Sprite to 

 	  						orient itself in the direction of a Bezier path (alter its rotation). orientToBezier

 							makes it easy. In order to alter a rotation property accurately, TweenMax needs 4 pieces

 							of information: 

 							<ol>

 								<li> Position property 1 (typically "x")</li>

 								<li> Position property 2 (typically "y")</li>

 								<li> Rotational property (typically "rotation")</li>

 								<li> Number of degrees to add (optional - makes it easy to orient your MovieClip properly)</li>

 						</ol>

 							The orientToBezier property should be an Array containing one Array for each set of these values. 

 							For maximum flexibility, you can pass in any number of arrays inside the container array, one 

 							for each rotational property. This can be convenient when working in 3D because you can rotate

 							on multiple axis. If you're doing a standard 2D x/y tween on a bezier, you can simply pass 

 							in a boolean value of true and TweenMax will use a typical setup, <code>[["x", "y", "rotation", 0]]</code>. 

 							Hint: Don't forget the container Array (notice the double outer brackets)</li>

 							

 	  <li><b> hexColors : Object</b> - Although hex colors are technically numbers, if you try to tween them conventionally,

 				 you'll notice that they don't tween smoothly. To tween them properly, the red, green, and 

 				 blue components must be extracted and tweened independently. TweenMax makes it easy. To tween

 				 a property of your object that's a hex color to another hex color, use this special hexColors 

 				 property of TweenMax. It must be an OBJECT with properties named the same as your object's 

 				 hex color properties. For example, if your my_obj object has a "myHexColor" property that you'd like

 				 to tween to red (0xFF0000) over the course of 2 seconds, do: <br />

 				 <code>TweenMax.to(my_obj, 2, {hexColors:{myHexColor:0xFF0000}});</code><br />

 				 You can pass in any number of hexColor properties.</li>

 				 

 	  <li><b> shortRotation : Object</b> - To tween the rotation property of the target object in the shortest direction, use "shortRotation" 

 	  						   instead of "rotation" as the property. For example, if <code>myObject.rotation</code> is currently 170 degrees 

 	  						   and you want to tween it to -170 degrees, a normal rotation tween would travel a total of 340 degrees 

 	  						   in the counter-clockwise direction, but if you use shortRotation, it would travel 20 degrees in the 

 	  						   clockwise direction instead.</li>

 	  					   

 	  <li><b> roundProps : Array</b> - If you'd like the inbetween values in a tween to always get rounded to the nearest integer, use the roundProps

 	  					   special property. Just pass in an Array containing the property names that you'd like rounded. For example,

 	  					   if you're tweening the x, y, and alpha properties of mc and you want to round the x and y values (not alpha)

 	  					   every time the tween is rendered, you'd do: <code>TweenMax.to(mc, 2, {x:300, y:200, alpha:0.5, roundProps:["x","y"]});</code></li>

 	  					   

 	  <li><b> blurFilter : Object</b> - To apply a BlurFilter, pass an object with one or more of the following properties:

 	  									<code>blurX, blurY, quality, remove, addFilter, index</code></li>

 	  						

 	  <li><b> glowFilter : Object</b> - To apply a GlowFilter, pass an object with one or more of the following properties:

 	  								<code>alpha, blurX, blurY, color, strength, quality, inner, knockout, remove, addFilter, index</code></li>

 	  						

 	  <li><b> colorMatrixFilter : Object</b> - To apply a ColorMatrixFilter, pass an object with one or more of the following properties:

 								   <code>colorize, amount, contrast, brightness, saturation, hue, threshold, relative, matrix, remove, addFilter, index</code></li>

 								   

 	  <li><b> dropShadowFilter : Object</b> - To apply a DropShadowFilter, pass an object with one or more of the following properties:

 								  			  <code>alpha, angle, blurX, blurY, color, distance, strength, quality, remove, addFilter, index</code></li>

 								  

 	  <li><b> bevelFilter : Object</b> - To apply a BevelFilter, pass an object with one or more of the following properties:

 							 			 <code>angle, blurX, blurY, distance, highlightAlpha, highlightColor, shadowAlpha, shadowColor, strength, quality, remove, addFilter, index</code></li>

 	</ul>

 	

 	

 <b>EXAMPLES:</b><br /><br /> 

 	

 	Please see <a href="http://www.tweenmax.com">http://www.tweenmax.com</a> for examples, tutorials, and interactive demos. <br /><br />

 

 <b>NOTES / TIPS:</b>

 <ul>

 	<li> Passing values as Strings will make the tween relative to the current value. For example, if you do

 	  <code>TweenMax.to(mc, 2, {x:"-20"});</code> it'll move the mc.x to the left 20 pixels which is the same as doing

 	  <code>TweenMax.to(mc, 2, {x:mc.x - 20});</code> You could also cast it like: <code>TweenMax.to(mc, 2, {x:String(myVariable)});</code></li>

 	  

 	<li> If you prefer, instead of using the onCompleteListener, onInitListener, onStartListener, and onUpdateListener special properties, 

 	  you can set up listeners the typical way, like:<br /><code>

 	  var myTween:TweenMax = new TweenMax(my_mc, 2, {x:200});<br />

 	  myTween.addEventListener(TweenEvent.COMPLETE, myFunction);</code></li>

 	  

 	<li> You can kill all tweens of a particular object anytime with the <code>TweenMax.killTweensOf(myObject); </code></li>

 	  

 	<li> You can kill all delayedCalls to a particular function using <code>TweenMax.killDelayedCallsTo(myFunction);</code>

 	  This can be helpful if you want to preempt a call.</li>

 	  

 	<li> Use the <code>TweenMax.from()</code> method to animate things into place. For example, if you have things set up on 

 	  the stage in the spot where they should end up, and you just want to animate them into place, you can 

 	  pass in the beginning x and/or y and/or alpha (or whatever properties you want).</li>

 

 	<li> If you find this class useful, please consider joining Club GreenSock which not only helps to sustain

 	  ongoing development, but also gets you bonus plugins, classes and other benefits that are ONLY available 

 	  to members. Learn more at <a href="http://www.greensock.com/club/">http://www.greensock.com/club/</a></li>

 	</ul>

 	  

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='TweenMax' fullname='com.greensock:TweenMax/TweenMax' isStatic='false' isFinal='false' isOverride='false'  param_names='target;duration;vars' param_types='Object;Number;Object' param_defaults='undefined;undefined;undefined' result_type='*'>
<description><![CDATA[

		 Constructor

		  

		 ]]></description>
<param><![CDATA[target Target object whose properties this tween affects. This can be ANY object, not just a DisplayObject. 

		 ]]></param>
<param><![CDATA[duration Duration in seconds (or in frames if the tween's timing mode is frames-based)

		 ]]></param>
<param><![CDATA[vars An object containing the end values of the properties you're tweening. For example, to tween to x=100, y=100, you could pass {x:100, y:100}. It can also contain special properties like "onComplete", "ease", "delay", etc.

		 ]]></param>
</method>
<method name='addEventListener' fullname='com.greensock:TweenMax/addEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener;useCapture;priority;useWeakReference' param_types='String;Function;Boolean;int;Boolean' param_defaults='undefined;undefined;false;0;false' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='allFromTo' fullname='com.greensock:TweenMax/allFromTo' isStatic='true' isFinal='false' isOverride='false'  param_names='targets;duration;fromVars;toVars;stagger;onCompleteAll;onCompleteAllParams' param_types='Array;Number;Object;Object;Number;Function;Array' param_defaults='undefined;undefined;undefined;undefined;0;null;null' result_type='Array'>
<description><![CDATA[

		 Tweens multiple targets from a common set of starting values to a common set of ending values; exactly the same 

		 as TweenMax.allTo(), but adds the ability to define the starting values. <b>NOTE</b>: Only put starting values

		 in the fromVars parameter - all special properties for the tween (like onComplete, onUpdate, delay, etc.) belong

		 in the toVars parameter. 

		 

		 ]]></description>
<param><![CDATA[targets An Array of objects to tween.

		 ]]></param>
<param><![CDATA[duration Duration (in seconds) of the tween (or in frames for frames-based tweens)

		 ]]></param>
<param><![CDATA[fromVars An object containing the starting values of all the properties you'd like to have tweened.

		 ]]></param>
<param><![CDATA[toVars An object containing the ending values of all the properties you'd like to have tweened.

		 ]]></param>
<param><![CDATA[stagger Staggers the start time of each tween. For example, you might want to have 5 MovieClips move down from y:0 to y:100 while fading from alpha:0 to alpha:1, and stagger the start times slightly by 0.2 seconds, you could do: <code>TweenMax.allFromTo([mc1, mc2, mc3, mc4, mc5], 1, {y:0, alpha:0}, {y:100, alpha:1}, 0.2)</code>.

		 ]]></param>
<param><![CDATA[onCompleteAll A function to call when all of the tweens have completed.

		 ]]></param>
<param><![CDATA[onCompleteAllParams An Array of parameters to pass the onCompleteAll function when all the tweens have completed.

		 ]]></param>
<return><![CDATA[Array of TweenMax instances

		 ]]></return>
</method>
<method name='allFrom' fullname='com.greensock:TweenMax/allFrom' isStatic='true' isFinal='false' isOverride='false'  param_names='targets;duration;vars;stagger;onCompleteAll;onCompleteAllParams' param_types='Array;Number;Object;Number;Function;Array' param_defaults='undefined;undefined;undefined;0;null;null' result_type='Array'>
<description><![CDATA[

		 Exactly the same as TweenMax.allTo(), but instead of tweening the properties from where they're 

		 at currently to whatever you define, this tweens them the opposite way - from where you define TO 

		 where ever they are when the tweens begin. This is useful when things are set up on the stage the way they should 

		 end up and you just want to tween them into place. <b>NOTE:</b> By default, <code>immediateRender</code>

		 is <code>true</code> for allFrom() tweens, meaning that they immediately render their starting state 

		 regardless of any delay or stagger that is specified. You can override this behavior by passing 

		 <code>immediateRender:false</code> in the <code>vars</code> object so that each tween will wait to render until

		 any delay/stagger has passed (often the desired behavior when inserting into timelines). To illustrate

		 the default behavior, the following code will immediately set the <code>alpha</code> of <code>mc1</code>, 

		 <code>mc2</code>, and <code>mc3</code> to 0 and then wait 2 seconds before tweening each <code>alpha</code> 

		 back to 1 over the course of 1.5 seconds with 0.1 seconds lapsing between the start times of each:<br /><br /><code>

		 

		 TweenMax.allFrom([mc1, mc2, mc3], 1.5, {alpha:0, delay:2}, 0.1);</code>

		 

		 ]]></description>
<param><![CDATA[targets An Array of objects to tween.

		 ]]></param>
<param><![CDATA[duration Duration (in seconds) of the tween (or in frames for frames-based tweens)

		 ]]></param>
<param><![CDATA[vars An object containing the start values of all the properties you'd like to have tweened.

		 ]]></param>
<param><![CDATA[stagger Staggers the start time of each tween. For example, you might want to have 5 MovieClips move down 100 pixels while fading from alpha:0, and stagger the start times slightly by 0.2 seconds, you could do: <code>TweenMax.allFromTo([mc1, mc2, mc3, mc4, mc5], 1, {y:"-100", alpha:0}, 0.2)</code>.

		 ]]></param>
<param><![CDATA[onCompleteAll A function to call when all of the tweens have completed.

		 ]]></param>
<param><![CDATA[onCompleteAllParams An Array of parameters to pass the onCompleteAll function when all the tweens have completed.

		 ]]></param>
<return><![CDATA[Array of TweenMax instances

		 ]]></return>
</method>
<method name='allTo' fullname='com.greensock:TweenMax/allTo' isStatic='true' isFinal='false' isOverride='false'  param_names='targets;duration;vars;stagger;onCompleteAll;onCompleteAllParams' param_types='Array;Number;Object;Number;Function;Array' param_defaults='undefined;undefined;undefined;0;null;null' result_type='Array'>
<description><![CDATA[

		 Tween multiple objects to the same end values. The "stagger" parameter 

		 staggers the start time of each tween. For example, you might want to have 5 MovieClips move down 

		 100 pixels while fading out, and stagger the start times slightly by 0.2 seconds:  <br /><br /><code>

		 

		 TweenMax.allTo([mc1, mc2, mc3, mc4, mc5], 1, {y:"100", alpha:0}, 0.2); <br /><br /></code>

		 

		 Note: You can easily add a group of tweens to a TimelineLite/Max instance using allTo() in conjunction with the 

		 insertMultipe() method of a timeline, like:<br /><br />

		 <code>myTimeline.insertMultiple(TweenMax.allTo([mc1, mc2, mc3], 1, {alpha:0, y:"100"}, 0.1));</code>

		 

		 ]]></description>
<param><![CDATA[targets An Array of objects to tween.

		 ]]></param>
<param><![CDATA[duration Duration in seconds (or frames for frames-based tweens) of the tween

		 ]]></param>
<param><![CDATA[vars An object containing the end values of all the properties you'd like to have tweened (or if you're using the TweenMax.allFrom() method, these variables would define the BEGINNING values).

		 ]]></param>
<param><![CDATA[stagger Staggers the start time of each tween. For example, you might want to have 5 MovieClips move down 100 pixels while fading out, and stagger the start times slightly by 0.2 seconds, you could do: <code>TweenMax.allTo([mc1, mc2, mc3, mc4, mc5], 1, {y:"100", alpha:0}, 0.2)</code>.

		 ]]></param>
<param><![CDATA[onCompleteAll A function to call when all of the tweens have completed.

		 ]]></param>
<param><![CDATA[onCompleteAllParams An Array of parameters to pass the onCompleteAll function when all the tweens have completed.

		 ]]></param>
<return><![CDATA[Array of TweenMax tweens

		 ]]></return>
</method>
<method name='changePause' fullname='com.greensock:TweenMax/private:changePause' isStatic='true' isFinal='false' isOverride='false'  param_names='pause;tweens;delayedCalls' param_types='Boolean;Boolean;Boolean' param_defaults='undefined;true;false' result_type='void'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[pause Desired paused state

		 ]]></param>
<param><![CDATA[tweens If true, all tweens will be affected.

		 ]]></param>
<param><![CDATA[delayedCalls If true, all delayedCalls will be affected. TimelineMax callbacks are treated the same as delayedCalls.

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='complete' fullname='com.greensock:TweenMax/complete' isStatic='false' isFinal='false' isOverride='true'  param_names='skipRender;suppressEvents' param_types='Boolean;Boolean' param_defaults='false;false' result_type='void'>
<description><![CDATA[

		 Forces the tween to completion.

		 

		 ]]></description>
<param><![CDATA[skipRender to skip rendering the final state of the tween, set skipRender to true. 

		 ]]></param>
<param><![CDATA[suppressEvents If true, no events or callbacks will be triggered for this render (like onComplete, onUpdate, onReverseComplete, etc.)

		 ]]></param>
</method>
<method name='delayedCall' fullname='com.greensock:TweenMax/delayedCall' isStatic='true' isFinal='false' isOverride='false'  param_names='delay;onComplete;onCompleteParams;useFrames' param_types='Number;Function;Array;Boolean' param_defaults='undefined;undefined;null;false' result_type='com.greensock:TweenMax'>
<description><![CDATA[

		 Provides a simple way to call a function after a set amount of time (or frames). You can

		 optionally pass any number of parameters to the function too. For example: <br /><br /><code>

		 

		 		TweenMax.delayedCall(1, myFunction, ["param1", 2]);<br />

		 		function myFunction(param1:String, param2:Number):void {<br />

		  		   trace("called myFunction and passed params: " + param1 + ", " + param2);<br />

		 		}<br /><br /></code>

		 

		 ]]></description>
<param><![CDATA[delay Delay in seconds (or frames if useFrames is true) before the function should be called

		 ]]></param>
<param><![CDATA[onComplete Function to call

		 ]]></param>
<param><![CDATA[onCompleteParams An Array of parameters to pass the function.

		 ]]></param>
<return><![CDATA[TweenMax instance

		 ]]></return>
</method>
<method name='dispatchEvent' fullname='com.greensock:TweenMax/dispatchEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='fromTo' fullname='com.greensock:TweenMax/fromTo' isStatic='true' isFinal='false' isOverride='false'  param_names='target;duration;fromVars;toVars' param_types='Object;Number;Object;Object' param_defaults='undefined;undefined;undefined;undefined' result_type='com.greensock:TweenMax'>
<description><![CDATA[

		 Static method for creating a TweenMax instance that tweens from a particular set of

		 values to another set of values, as opposed to a normal to() or from() tween which are 

		 based on the target's current values. <b>NOTE</b>: Only put starting values

		 in the fromVars parameter - all special properties for the tween (like onComplete, onUpdate, delay, etc.) belong

		 in the toVars parameter. 

		 

		 ]]></description>
<param><![CDATA[target Target object whose properties this tween affects. This can be ANY object, not just a DisplayObject. 

		 ]]></param>
<param><![CDATA[duration Duration in seconds (or in frames for frames-based tweens)

		 ]]></param>
<param><![CDATA[fromVars An object containing the starting values of the properties you're tweening. For example, to tween from x=0, y=0, you could pass {x:0, y:0}. Only put starting values in the fromVars parameter - all special properties for the tween (like onComplete, onUpdate, delay, etc.) belong in the toVars parameter. 

		 ]]></param>
<param><![CDATA[toVars An object containing the ending values of the properties you're tweening. For example, to tween to x=100, y=100, you could pass {x:100, y:100}. It can also contain special properties like "onComplete", "ease", "delay", etc.

		 ]]></param>
<return><![CDATA[TweenMax instance

		 ]]></return>
</method>
<method name='from' fullname='com.greensock:TweenMax/from' isStatic='true' isFinal='false' isOverride='false'  param_names='target;duration;vars' param_types='Object;Number;Object' param_defaults='undefined;undefined;undefined' result_type='com.greensock:TweenMax'>
<description><![CDATA[

		 Static method for creating a TweenMax instance that tweens in the opposite direction

		 compared to a <code>TweenMax.to()</code> tween. In other words, you define the START values in the 

		 vars object instead of the end values, and the tween will use the current values as 

		 the end values. This can be very useful for animating things into place on the stage

		 because you can build them in their end positions and do some simple <code>TweenMax.from()</code>

		 calls to animate them into place. <b>NOTE:</b> By default, <code>immediateRender</code>

		 is <code>true</code> for from() tweens, meaning that they immediately render their starting state 

		 regardless of any delay that is specified. You can override this behavior by passing 

		 <code>immediateRender:false</code> in the <code>vars</code> object so that it will wait to 

		 render until the tween actually begins (often the desired behavior when inserting into timelines). 

		 To illustrate the default behavior, the following code will immediately set the <code>alpha</code> of <code>mc</code> 

		 to 0 and then wait 2 seconds before tweening the <code>alpha</code> back to 1 over the course 

		 of 1.5 seconds:<br /><br /><code>

		 

		 TweenMax.from(mc, 1.5, {alpha:0, delay:2});</code>

		 

		 ]]></description>
<param><![CDATA[target Target object whose properties this tween affects. This can be ANY object, not just a DisplayObject. 

		 ]]></param>
<param><![CDATA[duration Duration in seconds (or in frames for frames-based tweens)

		 ]]></param>
<param><![CDATA[vars An object containing the start values of the properties you're tweening. For example, to tween from x=100, y=100, you could pass {x:100, y:100}. It can also contain special properties like "onComplete", "ease", "delay", etc.

		 ]]></param>
<return><![CDATA[TweenMax instance

		 ]]></return>
</method>
<method name='getAllTweens' fullname='com.greensock:TweenMax/getAllTweens' isStatic='true' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[

		 Returns all tweens that are in the masterList. Tweens are automatically removed from the

		 masterList when they complete and are not attached to a timeline that has 

		 autoRemoveChildren set to true.

		 

		 ]]></description>
<return><![CDATA[Array of TweenLite and/or TweenMax instances

		 ]]></return>
</method>
<method name='getTweensOf' fullname='com.greensock:TweenMax/getTweensOf' isStatic='true' isFinal='false' isOverride='false'  param_names='target' param_types='Object' param_defaults='undefined' result_type='Array'>
<description><![CDATA[

		 Gets all the tweens of a particular object.

		  

		 ]]></description>
<param><![CDATA[target The target object whose tweens you want returned

		 ]]></param>
<return><![CDATA[Array of tweens (could be TweenLite and/or TweenMax instances)

		 ]]></return>
</method>
<method name='hasEventListener' fullname='com.greensock:TweenMax/hasEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='initDispatcher' fullname='com.greensock:TweenMax/protected:initDispatcher' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='init' fullname='com.greensock:TweenMax/protected:init' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='invalidate' fullname='com.greensock:TweenMax/invalidate' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[   

		 Clears any initialization data (like starting values in tweens) which can be useful if, for example, 

		 you want to restart it without reverting to any previously recorded starting values. When you invalidate() 

		 a tween/timeline, it will be re-initialized the next time it renders and its <code>vars</code> object will be re-parsed. 

		 The timing of the tween/timeline (duration, startTime, delay) will NOT be affected. Another example would be if you

		 have a <code>TweenMax(mc, 1, {x:100, y:100})</code> that ran when mc.x and mc.y were initially at 0, but now mc.x 

		 and mc.y are 200 and you want them tween to 100 again, you could simply <code>invalidate()</code> the tween and 

		 <code>restart()</code> it. Without invalidating first, restarting it would cause the values jump back to 0 immediately 

		 (where they started when the tween originally began). When you invalidate a timeline, it automatically invalidates 

		 all of its children.

		 ]]></description>
</method>
<method name='isTweening' fullname='com.greensock:TweenMax/isTweening' isStatic='true' isFinal='false' isOverride='false'  param_names='target' param_types='Object' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Determines whether or not a particular object is actively tweening. If a tween

		 is paused or hasn't started yet, it doesn't count as active.

		 

		 ]]></description>
<param><![CDATA[target Target object whose tweens you're checking

		 ]]></param>
<return><![CDATA[Boolean value indicating whether or not any active tweens were found

		 ]]></return>
</method>
<method name='killAll' fullname='com.greensock:TweenMax/killAll' isStatic='true' isFinal='false' isOverride='false'  param_names='complete;tweens;delayedCalls' param_types='Boolean;Boolean;Boolean' param_defaults='false;true;true' result_type='void'>
<description><![CDATA[

		 Kills all tweens and/or delayedCalls/callbacks, optionally forcing them to completion first. The 

		 various parameters provide a way to distinguish between delayedCalls and tweens, so if you want to 

		 kill EVERYTHING (tweens and delayedCalls), you'd do:<br /><br /><code>

		 

		 TweenMax.killAll(false, true, true);<br /><br /></code>

		 

		 But if you want to kill only the tweens but allow the delayedCalls to continue, you'd do:<br /><br /><code>

		 

		 TweenMax.killAll(false, true, false);<br /><br /></code>

		 

		 And if you want to kill only the delayedCalls but not the tweens, you'd do:<br /><br /><code>

		 

		 TweenMax.killAll(false, false, true);<br /></code>

		  

		 ]]></description>
<param><![CDATA[complete Determines whether or not the tweens/delayedCalls/callbacks should be forced to completion before being killed.

		 ]]></param>
<param><![CDATA[tweens If true, all tweens will be killed

		 ]]></param>
<param><![CDATA[delayedCalls If true, all delayedCalls will be killed. TimelineMax callbacks are treated the same as delayedCalls.

		 ]]></param>
</method>
<method name='killChildTweensOf' fullname='com.greensock:TweenMax/killChildTweensOf' isStatic='true' isFinal='false' isOverride='false'  param_names='parent;complete' param_types='flash.display:DisplayObjectContainer;Boolean' param_defaults='undefined;false' result_type='void'>
<description><![CDATA[

		 Kills all tweens of the children of a particular DisplayObjectContainer, optionally forcing them to completion first.

		 

		 ]]></description>
<param><![CDATA[parent The DisplayObjectContainer whose children should no longer be affected by any tweens. 

		 ]]></param>
<param><![CDATA[complete Determines whether or not the tweens should be forced to completion before being killed.

		 ]]></param>
</method>
<method name='killProperties' fullname='com.greensock:TweenMax/killProperties' isStatic='false' isFinal='false' isOverride='false'  param_names='names' param_types='Array' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Allows particular properties of the tween to be killed, much like the killVars() method

		 except that killProperties() accepts an Array of property names.

		 

		 ]]></description>
<param><![CDATA[names An Array of property names whose tweens should be killed immediately.

		 ]]></param>
</method>
<method name='pauseAll' fullname='com.greensock:TweenMax/pauseAll' isStatic='true' isFinal='false' isOverride='false'  param_names='tweens;delayedCalls' param_types='Boolean;Boolean' param_defaults='true;true' result_type='void'>
<description><![CDATA[

		 Pauses all tweens and/or delayedCalls/callbacks.

		 

		 ]]></description>
<param><![CDATA[tweens If true, all tweens will be paused.

		 ]]></param>
<param><![CDATA[delayedCalls If true, all delayedCalls will be paused. TimelineMax callbacks are treated the same as delayedCalls.

		 ]]></param>
</method>
<method name='removeEventListener' fullname='com.greensock:TweenMax/removeEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener;useCapture' param_types='String;Function;Boolean' param_defaults='undefined;undefined;false' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='renderTime' fullname='com.greensock:TweenMax/renderTime' isStatic='false' isFinal='false' isOverride='true'  param_names='time;suppressEvents;force' param_types='Number;Boolean;Boolean' param_defaults='undefined;false;false' result_type='void'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[time time (or frame number for frames-based tweens) to render.

		 ]]></param>
<param><![CDATA[suppressEvents If true, no events or callbacks will be triggered for this render (like onComplete, onUpdate, onReverseComplete, etc.)

		 ]]></param>
<param><![CDATA[force Normally the tween will skip rendering if the time matches the cachedTotalTime (to improve performance), but if force is true, it forces a render. This is primarily used internally for tweens with durations of zero in TimelineLite/Max instances.

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='resumeAll' fullname='com.greensock:TweenMax/resumeAll' isStatic='true' isFinal='false' isOverride='false'  param_names='tweens;delayedCalls' param_types='Boolean;Boolean' param_defaults='true;true' result_type='void'>
<description><![CDATA[

		 Resumes all paused tweens and/or delayedCalls/callbacks.

		 

		 ]]></description>
<param><![CDATA[tweens If true, all tweens will be resumed.

		 ]]></param>
<param><![CDATA[delayedCalls If true, all delayedCalls will be resumed. TimelineMax callbacks are treated the same as delayedCalls.

		 ]]></param>
</method>
<method name='setDestination' fullname='com.greensock:TweenMax/setDestination' isStatic='false' isFinal='false' isOverride='false'  param_names='property;value;adjustStartValues' param_types='String;*;Boolean' param_defaults='undefined;undefined;true' result_type='void'>
<description><![CDATA[

		 Adjusts a destination value on the fly, optionally adjusting the start values so that it appears to redirect seamlessly

		 without skipping/jerking (<b>this method has been deprecated in favor of <code>updateTo()</code></b>). 

		 If you plan to constantly update values, please look into using the DynamicPropsPlugin.

		 

		 ]]></description>
<param><![CDATA[property Name of the property that should be updated. For example, "x".

		 ]]></param>
<param><![CDATA[value The new destination value

		 ]]></param>
<param><![CDATA[adjustStartValues If true, the property's start value will be adjusted to make the tween appear to seamlessly/smoothly redirect without any skipping/jerking. Beware that if start values are adjusted, reversing the tween will not make it travel back to the original starting value.

		 ]]></param>
</method>
<method name='to' fullname='com.greensock:TweenMax/to' isStatic='true' isFinal='false' isOverride='false'  param_names='target;duration;vars' param_types='Object;Number;Object' param_defaults='undefined;undefined;undefined' result_type='com.greensock:TweenMax'>
<description><![CDATA[

		 Static method for creating a TweenMax instance. This can be more intuitive for some developers 

		 and shields them from potential garbage collection issues that could arise when assigning a

		 tween instance to a variable that persists. The following lines of code produce exactly 

		 the same result: <br /><br /><code>

		 

		 		var myTween:TweenMax = new TweenMax(mc, 1, {x:100}); <br />

		 		TweenMax.to(mc, 1, {x:100}); <br />

		 		var myTween:TweenMax = TweenMax.to(mc, 1, {x:100}); <br /><br /></code>

		 

		 ]]></description>
<param><![CDATA[target Target object whose properties this tween affects. This can be ANY object, not just a DisplayObject. 

		 ]]></param>
<param><![CDATA[duration Duration in seconds (or in frames for frames-based tweens)

		 ]]></param>
<param><![CDATA[vars An object containing the end values of the properties you're tweening. For example, to tween to x=100, y=100, you could pass {x:100, y:100}. It can also contain special properties like "onComplete", "ease", "delay", etc.

		 ]]></param>
<return><![CDATA[TweenMax instance

		 ]]></return>
</method>
<method name='updateTo' fullname='com.greensock:TweenMax/updateTo' isStatic='false' isFinal='false' isOverride='false'  param_names='vars;resetDuration' param_types='Object;Boolean' param_defaults='undefined;false' result_type='void'>
<description><![CDATA[

		 Updates tweening values on the fly so that they appear to seamlessly change course even if the tween is in-progress.

		 Think of it as dynamically updating the <code>vars</code> object that you passed in to the tween when it was originally

		 created. You do <b>NOT</b> need to redefine all of the <code>vars</code> values - only the ones that you want

		 to update. You can even define new properties that you didn't define in the original <code>vars</code> object. 

		 If the <code>resetDuration</code> parameter is <code>true</code> and the tween has already started (or finished), 

		 <code>updateTo()</code> will restart the tween. Otherwise, the tween's timing will be honored. And if

		 <code>resetDuration</code> is <code>false</code> and the tween is in-progress, the starting values of each 

		 property will be adjusted so that the tween appears to seamlessly redirect to the new destination values. 

		 For example:<br /><br /><code>

		 

		 //create the tween <br />

		 var tween:TweenMax = new TweenMax(mc, 2, {x:100, y:200, alpha:0.5});<br /><br />

		 

		 //then later, update the destination x and y values, restarting the tween<br />

		 tween.updateTo({x:300, y:0}, true);<br /><br />

		 

		 //or to update the values mid-tween while keeping the end time the same (don't restart the tween), do this:<br />

		 tween.updateTo({x:300, y:0}, false);<br /><br /></code>

		 

		 Note: If you plan to constantly update values, please look into using the <code>DynamicPropsPlugin</code>.

		 

		 ]]></description>
<param><![CDATA[vars Object containing properties with the end values that should be udpated. You do <b>NOT</b> need to redefine all of the original <code>vars</code> values - only the ones that should be updated (although if you change a plugin value, you will need to fully define it). For example, to update the destination <code>x</code> value to 300 and the destination <code>y</code> value to 500, pass: <code>{x:300, y:500}</code>.

		 ]]></param>
<param><![CDATA[resetDuration If the tween has already started (or finished) and <code>resetDuration</code> is true, the tween will restart. If <code>resetDuration</code> is false, the tween's timing will be honored (no restart) and each tweening property's starting value will be adjusted so that it appears to seamlessly redirect to the new destination value.

		 ]]></param>
</method>
<method name='willTrigger' fullname='com.greensock:TweenMax/willTrigger' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='currentProgress' fullname='com.greensock:TweenMax/currentProgress/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 Value between 0 and 1 indicating the progress of the tween according to its <code>duration</code> 

 		 where 0 is at the beginning, 0.5 is halfway finished, and 1 is finished. <code>totalProgress</code>, 

 		 by contrast, describes the overall progress according to the tween's <code>totalDuration</code> 

 		 which includes repeats and repeatDelays (if there are any). For example, if a TweenMax instance 

		 is set to repeat once, at the end of the first cycle <code>totalProgress</code> would only be 0.5 

		 whereas <code>currentProgress</code> would be 1. If you tracked both properties over the course of the 

		 tween, you'd see <code>currentProgress</code> go from 0 to 1 twice (once for each cycle) in the same

		 time it takes the <code>totalProgress</code> property to go from 0 to 1 once.

		 ]]></description>
</method>
<method name='globalTimeScale' fullname='com.greensock:TweenMax/globalTimeScale/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Multiplier describing the speed of the root timelines where 1 is normal speed, 0.5 is half-speed, 2 is double speed, etc. The lowest globalTimeScale possible is 0.0001. ]]></description>
</method>
<method name='repeatDelay' fullname='com.greensock:TweenMax/repeatDelay/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Amount of time in seconds (or frames for frames-based tweens) between repeats ]]></description>
</method>
<method name='repeat' fullname='com.greensock:TweenMax/repeat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Number of times that the tween should repeat; -1 repeats indefinitely. ]]></description>
</method>
<method name='timeScale' fullname='com.greensock:TweenMax/timeScale/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Multiplier affecting the speed of the timeline where 1 is normal speed, 0.5 is half-speed, 2 is double speed, etc. ]]></description>
</method>
<method name='totalDuration' fullname='com.greensock:TweenMax/totalDuration/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[

		 Duration of the tween in seconds (or frames for frames-based timelines) including any repeats

		 or repeatDelays. <code>duration</code>, by contrast, does NOT include repeats and repeatDelays. 

		 ]]></description>
</method>
<method name='totalProgress' fullname='com.greensock:TweenMax/totalProgress/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 Value between 0 and 1 indicating the overall progress of the tween according to its <code>totalDuration</code>

 		 where 0 is at the beginning, 0.5 is halfway finished, and 1 is finished. <code>currentProgress</code>, 

 		 by contrast, describes the progress according to the tween's <code>duration</code> which does not

 		 include repeats and repeatDelays. For example, if a TweenMax instance is set to repeat 

 		 once, at the end of the first cycle <code>totalProgress</code> would only be 0.5 

		 whereas <code>currentProgress</code> would be 1. If you tracked both properties over the course of the 

		 tween, you'd see <code>currentProgress</code> go from 0 to 1 twice (once for each cycle) in the same

		 time it takes the <code>totalProgress</code> property to go from 0 to 1 once.

		 ]]></description>
</method>
<method name='currentProgress' fullname='com.greensock:TweenMax/currentProgress/set' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='currentTime' fullname='com.greensock:TweenMax/currentTime/set' isStatic='false' isFinal='false' isOverride='true'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Most recently rendered time (or frame for frames-based timelines) according to the tween's 

		 duration. <code>totalTime</code>, by contrast, is based on the <code>totalDuration</code> which includes repeats and repeatDelays.

		 For example, if a TweenMax instance has a duration of 5 a repeat of 1 (meaning its 

		 <code>totalDuration</code> is 10), at the end of the second cycle, <code>currentTime</code> would be 5 whereas <code>totalTime</code> 

		 would be 10. If you tracked both properties over the course of the tween, you'd see <code>currentTime</code> 

		 go from 0 to 5 twice (one for each cycle) in the same time it takes <code>totalTime</code> go from 0 to 10.

		 ]]></description>
</method>
<method name='globalTimeScale' fullname='com.greensock:TweenMax/globalTimeScale/set' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='repeatDelay' fullname='com.greensock:TweenMax/repeatDelay/set' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='repeat' fullname='com.greensock:TweenMax/repeat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='timeScale' fullname='com.greensock:TweenMax/timeScale/set' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='totalDuration' fullname='com.greensock:TweenMax/totalDuration/set' isStatic='false' isFinal='false' isOverride='true'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='totalProgress' fullname='com.greensock:TweenMax/totalProgress/set' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='_cyclesComplete' fullname='com.greensock:TweenMax/protected:_cyclesComplete' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_dispatcher' fullname='com.greensock:TweenMax/protected:_dispatcher' type='flash.events:EventDispatcher' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_easePower' fullname='com.greensock:TweenMax/protected:_easePower' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_easeType' fullname='com.greensock:TweenMax/protected:_easeType' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_hasUpdateListener' fullname='com.greensock:TweenMax/protected:_hasUpdateListener' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_overwriteMode' fullname='com.greensock:TweenMax/private:_overwriteMode' type='int' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_repeatDelay' fullname='com.greensock:TweenMax/protected:_repeatDelay' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_repeat' fullname='com.greensock:TweenMax/protected:_repeat' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='killDelayedCallsTo' fullname='com.greensock:TweenMax/killDelayedCallsTo' type='Function' isStatic='true' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='killTweensOf' fullname='com.greensock:TweenMax/killTweensOf' type='Function' isStatic='true' isConst='false' defaultValue='' >
<description><![CDATA[

		 Kills all the tweens of a particular object, optionally completing them first.

		 

		 ]]></description>
<param><![CDATA[target Object whose tweens should be immediately killed

		 ]]></param>
<param><![CDATA[complete Indicates whether or not the tweens should be forced to completion before being killed.

		 ]]></param>
</field>
<field name='version' fullname='com.greensock:TweenMax/version' type='Number' isStatic='true' isConst='true' defaultValue='11.66' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='yoyo' fullname='com.greensock:TweenMax/yoyo' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ 

		 Works in conjunction with the repeat property, determining the behavior of each cycle; when yoyo is true, 

		 the tween will go back and forth, appearing to reverse every other cycle (this has no affect on the "reversed" 

		 property though). So if repeat is 2 and yoyo is false, it will look like: start - 1 - 2 - 3 - 1 - 2 - 3 - 1 - 2 - 3 - end. 

		 But if repeat is 2 and yoyo is true, it will look like: start - 1 - 2 - 3 - 3 - 2 - 1 - 1 - 2 - 3 - end.  

		 ]]></description>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 1.4

 DATE: 2010-12-16

 AS3

 UPDATES AND DOCS AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='TweenPlugin' fullname='com.greensock.plugins:TweenPlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\TweenPlugin.as' namespace='com.greensock.plugins' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

 TweenPlugin is the base class for all TweenLite/TweenMax plugins. <br /><br />

 	

 <b>USAGE:</b><br />

 

 	To create your own plugin, extend TweenPlugin and override whichever methods you need. Typically,

 	you only need to override onInitTween() and the changeFactor setter. I'd recommend looking at a

  simple plugin like FramePlugin or ScalePlugin and using it as a template of sorts. There are a few 

  key concepts to keep in mind:

 	<ol>

 		<li> In the constructor, set this.propName to whatever special property you want your plugin to handle. </li>

 		

 		<li> When a tween that uses your plugin initializes its tween values (normally when it starts), a new instance 

 		  of your plugin will be created and the onInitTween() method will be called. That's where you'll want to 

 		  store any initial values and prepare for the tween. onInitTween() should return a Boolean value that 

 		  essentially indicates whether or not the plugin initted successfully. If you return false, TweenLite/Max 

 		  will just use a normal tween for the value, ignoring the plugin for that particular tween.</li>

 		  

 		<li> The changeFactor setter will be updated on every frame during the course of the tween with a multiplier

 		  that describes the amount of change based on how far along the tween is and the ease applied. It will be 

 		  zero at the beginning of the tween and 1 at the end, but inbetween it could be any value based on the 

 		  ease applied (for example, an Elastic.easeOut tween would cause the value to shoot past 1 and back again before 

 		  the end of the tween). So if the tween uses the Linear.easeNone easing equation, when it's halfway finished,

 		  the changeFactor will be 0.5. </li>

 		  

 		<li> The overwriteProps is an Array that should contain the properties that your plugin should overwrite

 		  when OverwriteManager's mode is AUTO and a tween of the same object is created. For example, the 

 		  autoAlpha plugin controls the "visible" and "alpha" properties of an object, so if another tween 

 		  is created that controls the alpha of the target object, your plugin's killProps() will be called 

 		  which should handle killing the "alpha" part of the tween. It is your responsibility to populate

 		  (and depopulate) the overwriteProps Array. Failure to do so properly can cause odd overwriting behavior.</li>

 		  

 		<li> Note that there's a "round" property that indicates whether or not values in your plugin should be

 		  rounded to the nearest integer (compatible with TweenMax only). If you use the _tweens Array, populating

 		  it through the addTween() method, rounding will happen automatically (if necessary) in the 

 		  updateTweens() method, but if you don't use addTween() and prefer to manually calculate tween values

 		  in your changeFactor setter, just remember to accommodate the "round" flag if it makes sense in your plugin.</li>

 		  

 		<li> If you need to run a block of code when the tween has finished, point the onComplete property to a

 		  method you created inside your plugin.</li>

 

 		<li> If you need to run a function when the tween gets disabled, point the onDisable property to a

 		  method you created inside your plugin. Same for onEnable if you need to run code when a tween is

 		  enabled. (A tween gets disabled when it gets overwritten or finishes or when its timeline gets disabled)</li>

 		

 		<li> Please use the same naming convention as the rest of the plugins, like MySpecialPropertyNamePlugin.</li>

 		

 		<li> IMPORTANT: The plugin framework is brand new, so there is a chance that it will change slightly over time and 

 		  you may need to adjust your custom plugins if the framework changes. I'll try to minimize the changes,

 		  but I'd highly recommend getting a membership to Club GreenSock to make sure you get update notifications.

 		  See http://blog.greensock.com/club/ for details.</li>

 </ol>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='TweenPlugin' fullname='com.greensock.plugins:TweenPlugin/TweenPlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='activate' fullname='com.greensock.plugins:TweenPlugin/activate' isStatic='true' isFinal='false' isOverride='false'  param_names='plugins' param_types='Array' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[plugin An Array of Plugin classes (that all extend TweenPlugin) to be activated. For example, TweenPlugin.activate([FrameLabelPlugin, ShortRotationPlugin, TintPlugin]);

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='addTween' fullname='com.greensock.plugins:TweenPlugin/protected:addTween' isStatic='false' isFinal='false' isOverride='false'  param_names='object;propName;start;end;overwriteProp' param_types='Object;String;Number;*;String' param_defaults='undefined;undefined;undefined;undefined;null' result_type='void'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[object target object whose property you'd like to tween. (i.e. myClip)

		 ]]></param>
<param><![CDATA[propName the property name that should be tweened. (i.e. "x")

		 ]]></param>
<param><![CDATA[start starting value

		 ]]></param>
<param><![CDATA[end end value (can be either numeric or a string value. If it's a string, it will be interpreted as relative to the starting value)

		 ]]></param>
<param><![CDATA[overwriteProp name of the property that should be associated with the tween for overwriting purposes. Normally, it's the same as propName, but not always. For example, you may tween the "changeFactor" property of a VisiblePlugin, but the property that it's actually controling in the end is "visible", so if a new overlapping tween of the target object is created that affects its "visible" property, this allows the plugin to kill the appropriate tween(s) when killProps() is called. 

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='killProps' fullname='com.greensock.plugins:TweenPlugin/killProps' isStatic='false' isFinal='false' isOverride='false'  param_names='lookup' param_types='Object' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[lookup An object containing properties that should be overwritten. We don't pass in an Array because looking up properties on the object is usually faster because it gives us random access. So to overwrite the "x" and "y" properties, a {x:true, y:true} object would be passed in. 

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='onInitTween' fullname='com.greensock.plugins:TweenPlugin/onInitTween' isStatic='false' isFinal='false' isOverride='false'  param_names='target;value;tween' param_types='Object;*;com.greensock:TweenLite' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[target target object of the TweenLite instance using this plugin

		 ]]></param>
<param><![CDATA[value The value that is passed in through the special property in the tween. 

		 ]]></param>
<param><![CDATA[tween The TweenLite or TweenMax instance using this plugin.

		 ]]></param>
<return><![CDATA[If the initialization failed, it returns false. Otherwise true. It may fail if, for example, the plugin requires that the target be a DisplayObject or has some other unmet criteria in which case the plugin is skipped and a normal property tween is used inside TweenLite

		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='onTweenEvent' fullname='com.greensock.plugins:TweenPlugin/private:onTweenEvent' isStatic='true' isFinal='false' isOverride='false'  param_names='type;tween' param_types='String;com.greensock:TweenLite' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[type The type of event "onInitAllProps", "onComplete", "onEnable", or "onDisable"

		 ]]></param>
<param><![CDATA[tween The TweenLite/Max instance to which the event pertains

		 ]]></param>
<return><![CDATA[A Boolean value indicating whether or not properties of the tween's target may have changed as a result of the event

		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='updateTweens' fullname='com.greensock.plugins:TweenPlugin/protected:updateTweens' isStatic='false' isFinal='false' isOverride='false'  param_names='changeFactor' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[changeFactor Multiplier describing the amount of change that should be applied. It will be zero at the beginning of the tween and 1 at the end, but inbetween it could be any value based on the ease applied (for example, an Elastic tween would cause the value to shoot past 1 and back again before the end of the tween) 

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='changeFactor' fullname='com.greensock.plugins:TweenPlugin/changeFactor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[n Multiplier describing the amount of change that should be applied. It will be zero at the beginning of the tween and 1 at the end, but inbetween it could be any value based on the ease applied (for example, an Elastic tween would cause the value to shoot past 1 and back again before the end of the tween) 

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='changeFactor' fullname='com.greensock.plugins:TweenPlugin/changeFactor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='API' fullname='com.greensock.plugins:TweenPlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='VERSION' fullname='com.greensock.plugins:TweenPlugin/VERSION' type='Number' isStatic='true' isConst='true' defaultValue='1.4' >
</field>
<field name='_changeFactor' fullname='com.greensock.plugins:TweenPlugin/protected:_changeFactor' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_tweens' fullname='com.greensock.plugins:TweenPlugin/protected:_tweens' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='activeDisable' fullname='com.greensock.plugins:TweenPlugin/activeDisable' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='onComplete' fullname='com.greensock.plugins:TweenPlugin/onComplete' type='Function' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='onDisable' fullname='com.greensock.plugins:TweenPlugin/onDisable' type='Function' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='onEnable' fullname='com.greensock.plugins:TweenPlugin/onEnable' type='Function' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='onInitAllProps' fullname='com.greensock.plugins:TweenPlugin/onInitAllProps' type='Function' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='overwriteProps' fullname='com.greensock.plugins:TweenPlugin/overwriteProps' type='Array' isStatic='false' isConst='false' >
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='priority' fullname='com.greensock.plugins:TweenPlugin/priority' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='propName' fullname='com.greensock.plugins:TweenPlugin/propName' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='round' fullname='com.greensock.plugins:TweenPlugin/round' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 2.3

 DATE: 10/17/2009

 ACTIONSCRIPT VERSION: 3.0 

 UPDATES AND DOCUMENTATION AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='AutoAlphaPlugin' fullname='com.greensock.plugins:AutoAlphaPlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\AutoAlphaPlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:TweenPlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 Tweening "autoAlpha" is exactly the same as tweening an object's "alpha" except that it ensures 

 that the object's "visible" property is true until autoAlpha reaches zero at which point it will 

 toggle the "visible" property to false. That not only improves rendering performance in the Flash Player, 

 but also hides DisplayObjects so that they don't interact with the mouse. <br /><br />

 

 <b>USAGE:</b><br /><br />

 <code>

 		import com.greensock.TweenLite; <br />

 		import com.greensock.plugins.TweenPlugin; <br />

 		import com.greensock.plugins.AutoAlphaPlugin; <br />

 		TweenPlugin.activate([AutoAlphaPlugin]); //activation is permanent in the SWF, so this line only needs to be run once.<br /><br />

 

 		TweenLite.to(mc, 2, {autoAlpha:0}); <br /><br />

 </code>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='AutoAlphaPlugin' fullname='com.greensock.plugins:AutoAlphaPlugin/AutoAlphaPlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='killProps' fullname='com.greensock.plugins:AutoAlphaPlugin/killProps' isStatic='false' isFinal='false' isOverride='true'  param_names='lookup' param_types='Object' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onInitTween' fullname='com.greensock.plugins:AutoAlphaPlugin/onInitTween' isStatic='false' isFinal='false' isOverride='true'  param_names='target;value;tween' param_types='Object;*;com.greensock:TweenLite' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='changeFactor' fullname='com.greensock.plugins:AutoAlphaPlugin/changeFactor/set' isStatic='false' isFinal='false' isOverride='true'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:AutoAlphaPlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_ignoreVisible' fullname='com.greensock.plugins:AutoAlphaPlugin/protected:_ignoreVisible' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_target' fullname='com.greensock.plugins:AutoAlphaPlugin/protected:_target' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 1.61

 DATE: 2010-09-18

 ACTIONSCRIPT VERSION: 3.0 

 UPDATES AND DOCUMENTATION AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='EndArrayPlugin' fullname='com.greensock.plugins:EndArrayPlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\EndArrayPlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:TweenPlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 Tweens numbers in an Array. <br /><br />

 

 <b>USAGE:</b><br /><br />

 <code>

 		import com.greensock.TweenLite; <br />

 		import com.greensock.plugins.TweenPlugin; <br />

 		import com.greensock.plugins.EndArrayPlugin; <br />

 		TweenPlugin.activate([EndArrayPlugin]); //activation is permanent in the SWF, so this line only needs to be run once.<br /><br />

 

 		var myArray:Array = [1,2,3,4];<br />

 		TweenLite.to(myArray, 1.5, {endArray:[10,20,30,40]}); <br /><br />

 </code>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='EndArrayPlugin' fullname='com.greensock.plugins:EndArrayPlugin/EndArrayPlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='init' fullname='com.greensock.plugins:EndArrayPlugin/init' isStatic='false' isFinal='false' isOverride='false'  param_names='start;end' param_types='Array;Array' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onInitTween' fullname='com.greensock.plugins:EndArrayPlugin/onInitTween' isStatic='false' isFinal='false' isOverride='true'  param_names='target;value;tween' param_types='Object;*;com.greensock:TweenLite' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='changeFactor' fullname='com.greensock.plugins:EndArrayPlugin/changeFactor/set' isStatic='false' isFinal='false' isOverride='true'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:EndArrayPlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_a' fullname='com.greensock.plugins:EndArrayPlugin/protected:_a' type='Array' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_info' fullname='com.greensock.plugins:EndArrayPlugin/protected:_info' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 1.03

 DATE: 10/2/2009

 ACTIONSCRIPT VERSION: 3.0 

 UPDATES AND DOCUMENTATION AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='FramePlugin' fullname='com.greensock.plugins:FramePlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\FramePlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:TweenPlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 Tweens a MovieClip to a particular frame number. <br /><br />

 

 <b>USAGE:</b><br /><br />

 <code>

 		import com.greensock.TweenLite; <br />

 		import com.greensock.plugins.TweenPlugin; <br />

 		import com.greensock.plugins.FramePlugin; <br />

 		TweenPlugin.activate([FramePlugin]); //activation is permanent in the SWF, so this line only needs to be run once.<br /><br />

 

 		TweenLite.to(mc, 1, {frame:125}); <br /><br />

 </code>

 

 Note: When tweening the frames of a MovieClip, any audio that is embedded on the MovieClip's timeline (as "stream") will not be played. 

 Doing so would be impossible because the tween might speed up or slow down the MovieClip to any degree.<br /><br />

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='FramePlugin' fullname='com.greensock.plugins:FramePlugin/FramePlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onInitTween' fullname='com.greensock.plugins:FramePlugin/onInitTween' isStatic='false' isFinal='false' isOverride='true'  param_names='target;value;tween' param_types='Object;*;com.greensock:TweenLite' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='changeFactor' fullname='com.greensock.plugins:FramePlugin/changeFactor/set' isStatic='false' isFinal='false' isOverride='true'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:FramePlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_target' fullname='com.greensock.plugins:FramePlugin/protected:_target' type='flash.display:MovieClip' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='frame' fullname='com.greensock.plugins:FramePlugin/frame' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 2.11

 DATE: 11/14/2009

 ACTIONSCRIPT VERSION: 3.0 

 UPDATES AND DOCUMENTATION AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='VisiblePlugin' fullname='com.greensock.plugins:VisiblePlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\VisiblePlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:TweenPlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 Toggles the visibility at the end of a tween. For example, if you want to set <code>visible</code> to false

 at the end of the tween, do:<br /><br /><code>

 

 TweenLite.to(mc, 1, {x:100, visible:false});<br /><br /></code>

 

 The <code>visible</code> property is forced to true during the course of the tween. <br /><br />

 

 <b>USAGE:</b><br /><br />

 <code>

 		import com.greensock.TweenLite; <br />

 		import com.greensock.plugins.TweenPlugin; <br />

 		import com.greensock.plugins.VisiblePlugin; <br />

 		TweenPlugin.activate([VisiblePlugin]); //activation is permanent in the SWF, so this line only needs to be run once.<br /><br />

 

 		TweenLite.to(mc, 1, {x:100, visible:false}); <br /><br />

 </code>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='VisiblePlugin' fullname='com.greensock.plugins:VisiblePlugin/VisiblePlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onInitTween' fullname='com.greensock.plugins:VisiblePlugin/onInitTween' isStatic='false' isFinal='false' isOverride='true'  param_names='target;value;tween' param_types='Object;*;com.greensock:TweenLite' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='changeFactor' fullname='com.greensock.plugins:VisiblePlugin/changeFactor/set' isStatic='false' isFinal='false' isOverride='true'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:VisiblePlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_initVal' fullname='com.greensock.plugins:VisiblePlugin/protected:_initVal' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_target' fullname='com.greensock.plugins:VisiblePlugin/protected:_target' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_tween' fullname='com.greensock.plugins:VisiblePlugin/protected:_tween' type='com.greensock:TweenLite' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_visible' fullname='com.greensock.plugins:VisiblePlugin/protected:_visible' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 1.03

 DATE: 10/2/2009

 ACTIONSCRIPT VERSION: 3.0 

 UPDATES AND DOCUMENTATION AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='HexColorsPlugin' fullname='com.greensock.plugins:HexColorsPlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\HexColorsPlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:TweenPlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 Although hex colors are technically numbers, if you try to tween them conventionally, 

 you'll notice that they don't tween smoothly. To tween them properly, the red, green, and 

 blue components must be extracted and tweened independently. The HexColorsPlugin makes it easy. 

 To tween a property of your object that's a hex color to another hex color, just pass a hexColors 

 Object with properties named the same as your object's hex color properties. For example, 

 if myObject has a "myHexColor" property that you'd like to tween to red (<code>0xFF0000</code>) over the 

 course of 2 seconds, you'd do:<br /><br /><code>

 	

 	TweenMax.to(myObject, 2, {hexColors:{myHexColor:0xFF0000}});<br /><br /></code>

 	

 You can pass in any number of hexColor properties. <br /><br />

 

 <b>USAGE:</b><br /><br />

 <code>

 		import com.greensock.TweenLite; <br />

 		import com.greensock.plugins.TweenPlugin; <br />

 		import com.greensock.plugins.HexColorsPlugin; <br />

 		TweenPlugin.activate([HexColorsPlugin]); //activation is permanent in the SWF, so this line only needs to be run once.<br /><br />

 

 		TweenLite.to(myObject, 2, {hexColors:{myHexColor:0xFF0000}}); <br /><br /></code>

 

 Or if you just want to tween a color and apply it somewhere on every frame, you could do:<br /><br /><code>

 

 var myColor:Object = {hex:0xFF0000};<br />

 TweenLite.to(myColor, 2, {hexColors:{hex:0x0000FF}, onUpdate:applyColor});<br />

 function applyColor():void {<br />

 		mc.graphics.clear();<br />

 		mc.graphics.beginFill(myColor.hex, 1);<br />

 		mc.graphics.drawRect(0, 0, 100, 100);<br />

 		mc.graphics.endFill();<br />

 }<br /><br />

 </code>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='HexColorsPlugin' fullname='com.greensock.plugins:HexColorsPlugin/HexColorsPlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='initColor' fullname='com.greensock.plugins:HexColorsPlugin/initColor' isStatic='false' isFinal='false' isOverride='false'  param_names='target;propName;start;end' param_types='Object;String;uint;uint' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='killProps' fullname='com.greensock.plugins:HexColorsPlugin/killProps' isStatic='false' isFinal='false' isOverride='true'  param_names='lookup' param_types='Object' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onInitTween' fullname='com.greensock.plugins:HexColorsPlugin/onInitTween' isStatic='false' isFinal='false' isOverride='true'  param_names='target;value;tween' param_types='Object;*;com.greensock:TweenLite' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='changeFactor' fullname='com.greensock.plugins:HexColorsPlugin/changeFactor/set' isStatic='false' isFinal='false' isOverride='true'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:HexColorsPlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_colors' fullname='com.greensock.plugins:HexColorsPlugin/protected:_colors' type='Array' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 2.01

 DATE: 2010-12-24

 AS3

 UPDATES AND DOCS AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='RoundPropsPlugin' fullname='com.greensock.plugins:RoundPropsPlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\RoundPropsPlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:TweenPlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 If you'd like the inbetween values in a tween to always get rounded to the nearest integer, use the roundProps

 special property. Just pass in an Array containing the property names that you'd like rounded. For example,

 if you're tweening the x, y, and alpha properties of mc and you want to round the x and y values (not alpha)

 every time the tween is rendered, you'd do: <br /><br /><code>

 	

 	TweenMax.to(mc, 2, {x:300, y:200, alpha:0.5, roundProps:["x","y"]});<br /><br /></code>

 

 <b>USAGE:</b><br /><br />

 <code>

 		import com.greensock.TweenMax; <br /> 

 		import com.greensock.plugins.RoundPropsPlugin; <br />

 		TweenPlugin.activate([RoundPropsPlugin]); //activation is permanent in the SWF, so this line only needs to be run once.<br /><br />

 

 		TweenMax.to(mc, 2, {x:300, y:200, alpha:0.5, roundProps:["x","y"]}); <br /><br />

 </code>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='RoundPropsPlugin' fullname='com.greensock.plugins:RoundPropsPlugin/RoundPropsPlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_initAllProps' fullname='com.greensock.plugins:RoundPropsPlugin/protected:_initAllProps' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_removePropTween' fullname='com.greensock.plugins:RoundPropsPlugin/protected:_removePropTween' isStatic='false' isFinal='false' isOverride='false'  param_names='propTween' param_types='com.greensock.core:PropTween' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='add' fullname='com.greensock.plugins:RoundPropsPlugin/add' isStatic='false' isFinal='false' isOverride='false'  param_names='object;propName;start;change' param_types='Object;String;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onInitTween' fullname='com.greensock.plugins:RoundPropsPlugin/onInitTween' isStatic='false' isFinal='false' isOverride='true'  param_names='target;value;tween' param_types='Object;*;com.greensock:TweenLite' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:RoundPropsPlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_tween' fullname='com.greensock.plugins:RoundPropsPlugin/protected:_tween' type='com.greensock:TweenLite' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 1.2

 DATE: 12/17/2009

 ACTIONSCRIPT VERSION: 3.0 

 UPDATES AND DOCUMENTATION AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='ShortRotationPlugin' fullname='com.greensock.plugins:ShortRotationPlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\ShortRotationPlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:TweenPlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 To tween any rotation property of the target object in the shortest direction, use "shortRotation" 

 For example, if <code>myObject.rotation</code> is currently 170 degrees and you want to tween it to -170 degrees, 

 a normal rotation tween would travel a total of 340 degrees in the counter-clockwise direction, 

 but if you use shortRotation, it would travel 20 degrees in the clockwise direction instead. You 

 can define any number of rotation properties in the shortRotation object which makes 3D tweening

 easier, like:<br /><br /><code> 

 		

 		TweenMax.to(mc, 2, {shortRotation:{rotationX:-170, rotationY:35, rotationZ:200}}); <br /><br /></code>

 

 <b>USAGE:</b><br /><br />

 <code>

 		import com.greensock.TweenLite; <br />

 		import com.greensock.plugins.TweenPlugin; <br />

 		import com.greensock.plugins.ShortRotationPlugin; <br />

 		TweenPlugin.activate([ShortRotationPlugin]); //activation is permanent in the SWF, so this line only needs to be run once.<br /><br />

 

 		TweenLite.to(mc, 1, {shortRotation:{rotation:-170}});<br /><br />

	

 		//or for a 3D tween with multiple rotation values...<br />

 		TweenLite.to(mc, 1, {shortRotation:{rotationX:-170, rotationY:35, rotationZ:10}}); <br /><br />

 </code>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='ShortRotationPlugin' fullname='com.greensock.plugins:ShortRotationPlugin/ShortRotationPlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='initRotation' fullname='com.greensock.plugins:ShortRotationPlugin/initRotation' isStatic='false' isFinal='false' isOverride='false'  param_names='target;propName;start;end' param_types='Object;String;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onInitTween' fullname='com.greensock.plugins:ShortRotationPlugin/onInitTween' isStatic='false' isFinal='false' isOverride='true'  param_names='target;value;tween' param_types='Object;*;com.greensock:TweenLite' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:ShortRotationPlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 2.22

 DATE: 2010-09-18

 ACTIONSCRIPT VERSION: 3.0 

 UPDATES AND DOCUMENTATION AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='BezierPlugin' fullname='com.greensock.plugins:BezierPlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\BezierPlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:TweenPlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 Bezier tweening allows you to tween in a non-linear way. For example, you may want to tween

 a MovieClip's position from the origin (0,0) 500 pixels to the right (500,0) but curve downwards

 through the middle of the tween. Simply pass as many objects in the bezier Array as you'd like, 

 one for each "control point" (see documentation on Flash's curveTo() drawing method for more

 about how control points work).<br /><br />

 

 Keep in mind that you can bezier tween ANY properties, not just x/y. <br /><br />

 

 Also, if you'd like to rotate the target in the direction of the bezier path, 

 use the <code>orientToBezier</code> special property. In order to alter a rotation property accurately, 

 TweenLite/Max needs 5 pieces of information: <br />

 <ol>

 		<li> Position property 1 (typically <code>"x"</code>)</li>

 		<li> Position property 2 (typically <code>"y"</code>)</li>

 		<li> Rotational property (typically <code>"rotation"</code>)</li>

 		<li> Number of degrees to add (optional - makes it easy to orient your MovieClip properly)</li>

 		<li> Tolerance (default is 0.01, but increase this if the rotation seems to jitter during the tween)</li>

 </ol><br />

 

 The <code>orientToBezier</code> property should be an Array containing one Array for each set of these values. 

 For maximum flexibility, you can pass in any number of arrays inside the container array, one 

 for each rotational property. This can be convenient when working in 3D because you can rotate

 on multiple axis. If you're doing a standard 2D x/y tween on a bezier, you can simply pass 

 in a Boolean value of true and TweenLite/Max will use a typical setup, <code>[["x", "y", "rotation", 0, 0.01]]</code>. 

 Hint: Don't forget the container Array (notice the double outer brackets)<br /><br />

 

 <b>USAGE:</b><br /><br />

 <code>

 		import com.greensock.TweenLite; <br />

 		import com.greensock.plugins.TweenPlugin; <br />

 		import com.greensock.plugins.BezierPlugin; <br />

 		TweenPlugin.activate([BezierPlugin]); //activation is permanent in the SWF, so this line only needs to be run once.<br /><br />

 

 		TweenLite.to(mc, 3, {bezier:[{x:250, y:50}, {x:500, y:0}]}); //makes my_mc travel through 250,50 and end up at 500,0. <br /><br />

 </code>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='BezierPlugin' fullname='com.greensock.plugins:BezierPlugin/BezierPlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='init' fullname='com.greensock.plugins:BezierPlugin/protected:init' isStatic='false' isFinal='false' isOverride='false'  param_names='tween;beziers;through' param_types='com.greensock:TweenLite;Array;Boolean' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='killProps' fullname='com.greensock.plugins:BezierPlugin/killProps' isStatic='false' isFinal='false' isOverride='true'  param_names='lookup' param_types='Object' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onInitTween' fullname='com.greensock.plugins:BezierPlugin/onInitTween' isStatic='false' isFinal='false' isOverride='true'  param_names='target;value;tween' param_types='Object;*;com.greensock:TweenLite' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='parseBeziers' fullname='com.greensock.plugins:BezierPlugin/parseBeziers' isStatic='true' isFinal='false' isOverride='false'  param_names='props;through' param_types='Object;Boolean' param_defaults='undefined;false' result_type='Object'>
<description><![CDATA[

		 Helper method for translating control points into bezier information.

		 

		 ]]></description>
<param><![CDATA[props Object containing a property corresponding to each one you'd like bezier paths for. Each property's value should be a single Array with the numeric point values (i.e. <code>props.x = [12,50,80]</code> and <code>props.y = [50,97,158]</code>). 

		 ]]></param>
<param><![CDATA[through If you want the paths drawn THROUGH the supplied control points, set this to true.

		 ]]></param>
<return><![CDATA[A new object with an Array of values for each property. The first element in the Array is the start value, the second is the control point, and the 3rd is the end value. (i.e. <code>returnObject.x = [[12, 32, 50}, [50, 65, 80]]</code>)

		 ]]></return>
</method>
<method name='changeFactor' fullname='com.greensock.plugins:BezierPlugin/changeFactor/set' isStatic='false' isFinal='false' isOverride='true'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:BezierPlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_RAD2DEG' fullname='com.greensock.plugins:BezierPlugin/protected:_RAD2DEG' type='Number' isStatic='true' isConst='true' defaultValue='57.29577951308232' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_beziers' fullname='com.greensock.plugins:BezierPlugin/protected:_beziers' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_future' fullname='com.greensock.plugins:BezierPlugin/protected:_future' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_orientData' fullname='com.greensock.plugins:BezierPlugin/protected:_orientData' type='Array' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_orient' fullname='com.greensock.plugins:BezierPlugin/protected:_orient' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_target' fullname='com.greensock.plugins:BezierPlugin/protected:_target' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 1.12

 DATE: 10/2/2009

 ACTIONSCRIPT VERSION: 3.0 

 UPDATES AND DOCUMENTATION AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='TintPlugin' fullname='com.greensock.plugins:TintPlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\TintPlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:TweenPlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 To change a DisplayObject's tint/color, set this to the hex value of the tint you'd like

 to end up at (or begin at if you're using <code>TweenMax.from()</code>). An example hex value would be <code>0xFF0000</code>.<br /><br />

 

 To remove a tint completely, use the RemoveTintPlugin (after activating it, you can just set <code>removeTint:true</code>) <br /><br />

 

 <b>USAGE:</b><br /><br />

 <code>

 		import com.greensock.TweenLite; <br />

 		import com.greensock.plugins.TweenPlugin; <br />

 		import com.greensock.plugins.TintPlugin; <br />

 		TweenPlugin.activate([TintPlugin]); //activation is permanent in the SWF, so this line only needs to be run once.<br /><br />

 

 		TweenLite.to(mc, 1, {tint:0xFF0000}); <br /><br />

 </code>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='TintPlugin' fullname='com.greensock.plugins:TintPlugin/TintPlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='init' fullname='com.greensock.plugins:TintPlugin/init' isStatic='false' isFinal='false' isOverride='false'  param_names='target;end' param_types='flash.display:DisplayObject;flash.geom:ColorTransform' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onInitTween' fullname='com.greensock.plugins:TintPlugin/onInitTween' isStatic='false' isFinal='false' isOverride='true'  param_names='target;value;tween' param_types='Object;*;com.greensock:TweenLite' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='changeFactor' fullname='com.greensock.plugins:TintPlugin/changeFactor/set' isStatic='false' isFinal='false' isOverride='true'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:TintPlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_ct' fullname='com.greensock.plugins:TintPlugin/protected:_ct' type='flash.geom:ColorTransform' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_ignoreAlpha' fullname='com.greensock.plugins:TintPlugin/protected:_ignoreAlpha' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_props' fullname='com.greensock.plugins:TintPlugin/protected:_props' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_transform' fullname='com.greensock.plugins:TintPlugin/protected:_transform' type='flash.geom:Transform' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 1.1

 DATE: 2010-09-16

 ACTIONSCRIPT VERSION: 3.0 

 UPDATES AND DOCUMENTATION AT: http://www.GreenSock.com

 ]]></description>
</packageRec>
<classRec name='VolumePlugin' fullname='com.greensock.plugins:VolumePlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\VolumePlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:TweenPlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 Tweens the volume of an object with a soundTransform property (MovieClip/SoundChannel/NetStream, etc.). <br /><br />

 

 <b>USAGE:</b><br /><br />

 <code>

 		import com.greensock.TweenLite; <br />

 		import com.greensock.plugins.TweenPlugin; <br />

 		import com.greensock.plugins.VolumePlugin; <br />

 		TweenPlugin.activate([VolumePlugin]); //activation is permanent in the SWF, so this line only needs to be run once.<br /><br />

 

 		TweenLite.to(mc, 1, {volume:0}); <br /><br />

 </code>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='VolumePlugin' fullname='com.greensock.plugins:VolumePlugin/VolumePlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onInitTween' fullname='com.greensock.plugins:VolumePlugin/onInitTween' isStatic='false' isFinal='false' isOverride='true'  param_names='target;value;tween' param_types='Object;*;com.greensock:TweenLite' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='changeFactor' fullname='com.greensock.plugins:VolumePlugin/changeFactor/set' isStatic='false' isFinal='false' isOverride='true'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:VolumePlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_st' fullname='com.greensock.plugins:VolumePlugin/protected:_st' type='flash.media:SoundTransform' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_target' fullname='com.greensock.plugins:VolumePlugin/protected:_target' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 2.03

 DATE: 10/22/2009

 ACTIONSCRIPT VERSION: 3.0 

 UPDATES AND DOCUMENTATION AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='FilterPlugin' fullname='com.greensock.plugins:FilterPlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\FilterPlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:TweenPlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 Base class for all filter plugins (like blurFilter, colorMatrixFilter, glowFilter, etc.). Handles common routines. 

 There is no reason to use this class directly.<br /><br />

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='FilterPlugin' fullname='com.greensock.plugins:FilterPlugin/FilterPlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='initFilter' fullname='com.greensock.plugins:FilterPlugin/protected:initFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='props;defaultFilter;propNames' param_types='Object;flash.filters:BitmapFilter;Array' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onCompleteTween' fullname='com.greensock.plugins:FilterPlugin/onCompleteTween' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='changeFactor' fullname='com.greensock.plugins:FilterPlugin/changeFactor/set' isStatic='false' isFinal='false' isOverride='true'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:FilterPlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='VERSION' fullname='com.greensock.plugins:FilterPlugin/VERSION' type='Number' isStatic='true' isConst='true' defaultValue='2.03' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_filter' fullname='com.greensock.plugins:FilterPlugin/protected:_filter' type='flash.filters:BitmapFilter' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_index' fullname='com.greensock.plugins:FilterPlugin/protected:_index' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_remove' fullname='com.greensock.plugins:FilterPlugin/protected:_remove' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_target' fullname='com.greensock.plugins:FilterPlugin/protected:_target' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_type' fullname='com.greensock.plugins:FilterPlugin/protected:_type' type='Class' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 1.03

 DATE: 10/2/2009

 ACTIONSCRIPT VERSION: 3.0 

 UPDATES AND DOCUMENTATION AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='FrameLabelPlugin' fullname='com.greensock.plugins:FrameLabelPlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\FrameLabelPlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:FramePlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 Tweens a MovieClip to a particular frame label. <br /><br />

 

 <b>USAGE:</b><br /><br />

 <code>

 		import com.greensock.TweenLite; <br />

 		import com.greensock.plugins.TweenPlugin; <br />

 		import com.greensock.plugins.FrameLabelPlugin; <br />

 		TweenPlugin.activate([FrameLabelPlugin]); //activation is permanent in the SWF, so this line only needs to be run once.<br /><br />

 

 		TweenLite.to(mc, 1, {frameLabel:"myLabel"}); <br /><br />

 </code>

 

 Note: When tweening the frames of a MovieClip, any audio that is embedded on the MovieClip's timeline (as "stream") will not be played. 

 Doing so would be impossible because the tween might speed up or slow down the MovieClip to any degree.<br /><br />

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='FrameLabelPlugin' fullname='com.greensock.plugins:FrameLabelPlugin/FrameLabelPlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onInitTween' fullname='com.greensock.plugins:FrameLabelPlugin/onInitTween' isStatic='false' isFinal='false' isOverride='true'  param_names='target;value;tween' param_types='Object;*;com.greensock:TweenLite' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:FrameLabelPlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 1.12

 DATE: 10/2/2009

 ACTIONSCRIPT VERSION: 3.0 

 UPDATES AND DOCUMENTATION AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='BezierThroughPlugin' fullname='com.greensock.plugins:BezierThroughPlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\BezierThroughPlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:BezierPlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 Identical to bezier except that instead of defining bezier control point values, you

 define points through which the bezier values should move. This can be more intuitive

 than using control points. Simply pass as many objects in the bezier Array as you'd like, 

 one for each point through which the values should travel. For example, if you want the

 curved motion path to travel through the coordinates x:250, y:100 and x:50, y:200 and then

 end up at 500, 100, you'd do: <br /><br />

 

 <code>TweenLite.to(mc, 2, {bezierThrough:[{x:250, y:100}, {x:50, y:200}, {x:500, y:200}]});</code><br /><br />

 

 Keep in mind that you can bezierThrough tween ANY properties, not just x/y. <br /><br />

 

 Also, if you'd like to rotate the target in the direction of the bezier path, 

 use the orientToBezier special property. In order to alter a rotation property accurately, 

 TweenLite/Max needs 5 pieces of information: 

 <ol>

 		<li> Position property 1 (typically <code>"x"</code>)</li>

 		<li> Position property 2 (typically <code>"y"</code>)</li>

 		<li> Rotational property (typically <code>"rotation"</code>)</li>

 		<li> Number of degrees to add (optional - makes it easy to orient your MovieClip properly)</li>

 		<li> Tolerance (default is 0.01, but increase this if the rotation seems to jitter during the tween)</li>

 </ol><br />

 

 The orientToBezier property should be an Array containing one Array for each set of these values. 

 For maximum flexibility, you can pass in any number of arrays inside the container array, one 

 for each rotational property. This can be convenient when working in 3D because you can rotate

 on multiple axis. If you're doing a standard 2D x/y tween on a bezier, you can simply pass 

 in a boolean value of true and TweenLite/Max will use a typical setup, <code>[["x", "y", "rotation", 0, 0.01]]</code>. 

 Hint: Don't forget the container Array (notice the double outer brackets) <br /><br />

 

 <b>USAGE:</b><br /><br />

 <code>

 		import com.greensock.TweenLite; <br />

 		import com.greensock.plugins.TweenPlugin; <br />

 		import com.greensock.plugins.BezierThroughPlugin; <br />

 		TweenPlugin.activate([BezierThroughPlugin]); //activation is permanent in the SWF, so this line only needs to be run once.<br /><br />

 

 		TweenLite.to(mc, 2, {bezierThrough:[{x:250, y:100}, {x:50, y:200}, {x:500, y:200}]}); <br /><br />

 </code>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='BezierThroughPlugin' fullname='com.greensock.plugins:BezierThroughPlugin/BezierThroughPlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onInitTween' fullname='com.greensock.plugins:BezierThroughPlugin/onInitTween' isStatic='false' isFinal='false' isOverride='true'  param_names='target;value;tween' param_types='Object;*;com.greensock:TweenLite' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:BezierThroughPlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 1.52

 DATE: 10/2/2009

 ACTIONSCRIPT VERSION: 3.0 

 UPDATES AND DOCUMENTATION AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='ColorTransformPlugin' fullname='com.greensock.plugins:ColorTransformPlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\ColorTransformPlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:TintPlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 Ever wanted to tween ColorTransform properties of a DisplayObject to do advanced effects like overexposing, altering

 the brightness or setting the percent/amount of tint? Or maybe tween individual ColorTransform 

 properties like redMultiplier, redOffset, blueMultiplier, blueOffset, etc. ColorTransformPlugin gives you an easy way to 

 do just that. <br /><br />

 

 <b>PROPERTIES:</b><br />

 <ul>

 		<li><code> tint (or color) : uint</code> - Color of the tint. Use a hex value, like 0xFF0000 for red.</li>

 		<li><code> tintAmount : Number</code> - Number between 0 and 1. Works with the "tint" property and indicats how much of an effect the tint should have. 0 makes the tint invisible, 0.5 is halfway tinted, and 1 is completely tinted.</li>

 		<li><code> brightness : Number</code> - Number between 0 and 2 where 1 is normal brightness, 0 is completely dark/black, and 2 is completely bright/white</li>

 		<li><code> exposure : Number</code> - Number between 0 and 2 where 1 is normal exposure, 0, is completely underexposed, and 2 is completely overexposed. Overexposing an object is different then changing the brightness - it seems to almost bleach the image and looks more dynamic and interesting (subjectively speaking).</li> 

 		<li><code> redOffset : Number</code></li>

 		<li><code> greenOffset : Number</code></li>

 		<li><code> blueOffset : Number</code></li>

 		<li><code> alphaOffset : Number</code></li>

 		<li><code> redMultiplier : Number</code></li>

 		<li><code> greenMultiplier : Number</code></li>

 		<li><code> blueMultiplier : Number</code></li>

 		<li><code> alphaMultiplier : Number</code> </li>

 </ul><br /><br />

 

 <b>USAGE:</b><br /><br />

 <code>

 		import com.greensock.TweenLite; <br />

 		import com.greensock.plugins.TweenPlugin; <br />

 		import com.greensock.plugins.ColorTransformPlugin; <br />

 		TweenPlugin.activate([ColorTransformPlugin]); //activation is permanent in the SWF, so this line only needs to be run once.<br /><br />

 

 		TweenLite.to(mc, 1, {colorTransform:{tint:0xFF0000, tintAmount:0.5}}); <br /><br />

 </code>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='ColorTransformPlugin' fullname='com.greensock.plugins:ColorTransformPlugin/ColorTransformPlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onInitTween' fullname='com.greensock.plugins:ColorTransformPlugin/onInitTween' isStatic='false' isFinal='false' isOverride='true'  param_names='target;value;tween' param_types='Object;*;com.greensock:TweenLite' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:ColorTransformPlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 1.03

 DATE: 10/2/2009

 ACTIONSCRIPT VERSION: 3.0 

 UPDATES AND DOCUMENTATION AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='RemoveTintPlugin' fullname='com.greensock.plugins:RemoveTintPlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\RemoveTintPlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:TintPlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 Removes the tint of a DisplayObject over time. <br /><br />

 

 <b>USAGE:</b><br /><br />

 <code>

 		import com.greensock.TweenLite; <br />

 		import com.greensock.plugins.TweenPlugin; <br />

 		import com.greensock.plugins.RemoveTintPlugin; <br />

 		TweenPlugin.activate([RemoveTintPlugin]); //activation is permanent in the SWF, so this line only needs to be run once.<br /><br />

 

 		TweenLite.to(mc, 1, {removeTint:true}); <br /><br />

 </code>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='RemoveTintPlugin' fullname='com.greensock.plugins:RemoveTintPlugin/RemoveTintPlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:RemoveTintPlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 2.0

 DATE: 8/18/2009

 ACTIONSCRIPT VERSION: 3.0 

 UPDATES AND DOCUMENTATION AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='ColorMatrixFilterPlugin' fullname='com.greensock.plugins:ColorMatrixFilterPlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\ColorMatrixFilterPlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:FilterPlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 ColorMatrixFilter tweening offers an easy way to tween a DisplayObject's saturation, hue, contrast,

 brightness, and colorization. The following properties are available (you only need to define the ones you want to tween):

 <ul>

 		<li><code> colorize : uint </code> (colorizing a DisplayObject makes it look as though you're seeing it through a colored piece of glass whereas tinting it makes every pixel exactly that color. You can control the amount of colorization using the "amount" value where 1 is full strength, 0.5 is half-strength, and 0 has no colorization effect.)</li>

 		<li><code> amount : Number [1] </code> (only used in conjunction with "colorize")</li>

 		<li><code> contrast : Number </code> (1 is normal contrast, 0 has no contrast, and 2 is double the normal contrast, etc.)</li>

 		<li><code> saturation : Number </code> (1 is normal saturation, 0 makes the DisplayObject look black and white, and 2 would be double the normal saturation)</li>

 		<li><code> hue : Number </code> (changes the hue of every pixel. Think of it as degrees, so 180 would be rotating the hue to be exactly opposite as normal, 360 would be the same as 0, etc.)</li>

 		<li><code> brightness : Number </code> (1 is normal brightness, 0 is much darker than normal, and 2 is twice the normal brightness, etc.)</li>

 		<li><code> threshold : Number </code> (number from 0 to 255 that controls the threshold of where the pixels turn white or black)</li>

 		<li><code> matrix : Array </code> (If you already have a matrix from a ColorMatrixFilter that you want to tween to, pass it in with the "matrix" property. This makes it possible to match effects created in the Flash IDE.)</li>

 		<li><code> index : Number </code> (only necessary if you already have a filter applied and you want to target it with the tween.)</li>

 		<li><code> addFilter : Boolean [false] </code></li>

 		<li><code> remove : Boolean [false] </code> (Set remove to true if you want the filter to be removed when the tween completes.)</li>

 </ul>

 HINT: If you'd like to match the ColorMatrixFilter values you created in the Flash IDE on a particular object, you can get its matrix like this:<br /><br /><code>

 

 	import flash.display.DisplayObject; <br />

 	import flash.filters.ColorMatrixFilter; <br /><br />

 	

 	function getColorMatrix(mc:DisplayObject):Array { <br />

 	   var f:Array = mc.filters, i:uint; <br />

 	   for (i = 0; i &lt; f.length; i++) { <br />

 	      if (f[i] is ColorMatrixFilter) { <br />

 	         return f[i].matrix; <br />

 	      } <br />

 	   } <br />

 	   return null; <br />

 	} <br /><br />

 	 

 	var myOriginalMatrix:Array = getColorMatrix(my_mc); //store it so you can tween back to it anytime like TweenMax.to(my_mc, 1, {colorMatrixFilter:{matrix:myOriginalMatrix}});

 </code>

 <br /><br />

 

 <b>USAGE:</b><br /><br />

 <code>

 		import com.greensock.TweenLite; <br />

 		import com.greensock.plugins.TweenPlugin; <br />

 		import com.greensock.plugins.ColorMatrixFilterPlugin; <br />

 		TweenPlugin.activate([ColorMatrixFilterPlugin]); //activation is permanent in the SWF, so this line only needs to be run once.<br /><br />

 

 		TweenLite.to(mc, 1, {colorMatrixFilter:{colorize:0xFF0000}}); <br /><br />

 </code>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='ColorMatrixFilterPlugin' fullname='com.greensock.plugins:ColorMatrixFilterPlugin/ColorMatrixFilterPlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='applyMatrix' fullname='com.greensock.plugins:ColorMatrixFilterPlugin/applyMatrix' isStatic='true' isFinal='false' isOverride='false'  param_names='m;m2' param_types='Array;Array' param_defaults='undefined;undefined' result_type='Array'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='colorize' fullname='com.greensock.plugins:ColorMatrixFilterPlugin/colorize' isStatic='true' isFinal='false' isOverride='false'  param_names='m;color;amount' param_types='Array;Number;Number' param_defaults='undefined;undefined;1' result_type='Array'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onInitTween' fullname='com.greensock.plugins:ColorMatrixFilterPlugin/onInitTween' isStatic='false' isFinal='false' isOverride='true'  param_names='target;value;tween' param_types='Object;*;com.greensock:TweenLite' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setBrightness' fullname='com.greensock.plugins:ColorMatrixFilterPlugin/setBrightness' isStatic='true' isFinal='false' isOverride='false'  param_names='m;n' param_types='Array;Number' param_defaults='undefined;undefined' result_type='Array'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setContrast' fullname='com.greensock.plugins:ColorMatrixFilterPlugin/setContrast' isStatic='true' isFinal='false' isOverride='false'  param_names='m;n' param_types='Array;Number' param_defaults='undefined;undefined' result_type='Array'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setHue' fullname='com.greensock.plugins:ColorMatrixFilterPlugin/setHue' isStatic='true' isFinal='false' isOverride='false'  param_names='m;n' param_types='Array;Number' param_defaults='undefined;undefined' result_type='Array'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setSaturation' fullname='com.greensock.plugins:ColorMatrixFilterPlugin/setSaturation' isStatic='true' isFinal='false' isOverride='false'  param_names='m;n' param_types='Array;Number' param_defaults='undefined;undefined' result_type='Array'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setThreshold' fullname='com.greensock.plugins:ColorMatrixFilterPlugin/setThreshold' isStatic='true' isFinal='false' isOverride='false'  param_names='m;n' param_types='Array;Number' param_defaults='undefined;undefined' result_type='Array'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='changeFactor' fullname='com.greensock.plugins:ColorMatrixFilterPlugin/changeFactor/set' isStatic='false' isFinal='false' isOverride='true'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:ColorMatrixFilterPlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_idMatrix' fullname='com.greensock.plugins:ColorMatrixFilterPlugin/protected:_idMatrix' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_lumB' fullname='com.greensock.plugins:ColorMatrixFilterPlugin/protected:_lumB' type='Number' isStatic='true' isConst='false' defaultValue='0.072169' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_lumG' fullname='com.greensock.plugins:ColorMatrixFilterPlugin/protected:_lumG' type='Number' isStatic='true' isConst='false' defaultValue='0.715160' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_lumR' fullname='com.greensock.plugins:ColorMatrixFilterPlugin/protected:_lumR' type='Number' isStatic='true' isConst='false' defaultValue='0.212671' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_matrixTween' fullname='com.greensock.plugins:ColorMatrixFilterPlugin/protected:_matrixTween' type='com.greensock.plugins:EndArrayPlugin' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_matrix' fullname='com.greensock.plugins:ColorMatrixFilterPlugin/protected:_matrix' type='Array' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_propNames' fullname='com.greensock.plugins:ColorMatrixFilterPlugin/private:_propNames' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 2.0

 DATE: 8/18/2009

 ACTIONSCRIPT VERSION: 3.0 

 UPDATES AND DOCUMENTATION AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='GlowFilterPlugin' fullname='com.greensock.plugins:GlowFilterPlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\GlowFilterPlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:FilterPlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 Tweens a GlowFilter. The following properties are available (you only need to define the ones you want to tween):

 <code>

 <ul>

 		<li> color : uint [0x000000]</li>

 		<li> alpha :Number [0]</li>

 		<li> blurX : Number [0]</li>

 		<li> blurY : Number [0]</li>

 		<li> strength : Number [1]</li>

 		<li> quality : uint [2]</li>

 		<li> inner : Boolean [false]</li>

 		<li> knockout : Boolean [false]</li>

 		<li> index : uint</li>

 		<li> addFilter : Boolean [false]</li>

 		<li> remove : Boolean [false]</li>

 </ul>

 </code>

 

 Set <code>remove</code> to true if you want the filter to be removed when the tween completes. <br /><br />

 

 <b>USAGE:</b><br /><br />

 <code>

 		import com.greensock.TweenLite; <br />

 		import com.greensock.plugins.TweenPlugin; <br />

 		import com.greensock.plugins.GlowFilterPlugin; <br />

 		TweenPlugin.activate([GlowFilterPlugin]); //activation is permanent in the SWF, so this line only needs to be run once.<br /><br />

 

 		TweenLite.to(mc, 1, {glowFilter:{color:0x00FF00, blurX:10, blurY:10, strength:1, alpha:1}});<br /><br />

 </code>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='GlowFilterPlugin' fullname='com.greensock.plugins:GlowFilterPlugin/GlowFilterPlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onInitTween' fullname='com.greensock.plugins:GlowFilterPlugin/onInitTween' isStatic='false' isFinal='false' isOverride='true'  param_names='target;value;tween' param_types='Object;*;com.greensock:TweenLite' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:GlowFilterPlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_propNames' fullname='com.greensock.plugins:GlowFilterPlugin/private:_propNames' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 2.0

 DATE: 8/18/2009

 ACTIONSCRIPT VERSION: 3.0 

 UPDATES AND DOCUMENTATION AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='BlurFilterPlugin' fullname='com.greensock.plugins:BlurFilterPlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\BlurFilterPlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:FilterPlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 Tweens a BlurFilter. The following properties are available (you only need to define the ones you want to tween):

 <code>

 <ul>

 		<li> blurX : Number [0]</li>

 		<li> blurY : Number [0]</li>

 		<li> quality : uint [2]</li>

 		<li> index : uint</li>

 		<li> addFilter : Boolean [false]</li>

 		<li> remove : Boolean [false]</li>

 </ul>

 </code>

 	

 Set <code>remove</code> to true if you want the filter to be removed when the tween completes. <br /><br />

 

 <b>USAGE:</b><br /><br />

 <code>

 		import com.greensock.TweenLite; <br />

 		import com.greensock.plugins.TweenPlugin; <br />

 		import com.greensock.plugins.BlurFilterPlugin; <br />

 		TweenPlugin.activate([BlurFilterPlugin]); //activation is permanent in the SWF, so this line only needs to be run once.<br /><br />

 

 		TweenLite.to(mc, 1, {blurFilter:{blurX:10, blurY:10}}); <br /><br />

 </code>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='BlurFilterPlugin' fullname='com.greensock.plugins:BlurFilterPlugin/BlurFilterPlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onInitTween' fullname='com.greensock.plugins:BlurFilterPlugin/onInitTween' isStatic='false' isFinal='false' isOverride='true'  param_names='target;value;tween' param_types='Object;*;com.greensock:TweenLite' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:BlurFilterPlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_propNames' fullname='com.greensock.plugins:BlurFilterPlugin/private:_propNames' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 2.0

 DATE: 8/18/2009

 ACTIONSCRIPT VERSION: 3.0 

 UPDATES AND DOCUMENTATION AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='BevelFilterPlugin' fullname='com.greensock.plugins:BevelFilterPlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\BevelFilterPlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:FilterPlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 Tweens a BevelFilter. The following properties are available (you only need to define the ones you want to tween): <br />

 <code>

 <ul>

 		<li> distance : Number [0]</li>

 		<li> angle : Number [0]</li>

 		<li> highlightColor : uint [0xFFFFFF]</li>

 		<li> highlightAlpha : Number [0.5]</li>

 		<li> shadowColor : uint [0x000000]</li>

 		<li> shadowAlpha :Number [0.5]</li>

 		<li> blurX : Number [2]</li>

 		<li> blurY : Number [2]</li>

 		<li> strength : Number [0]</li>

 		<li> quality : uint [2]</li>

 		<li> index : uint</li>

 		<li> addFilter : Boolean [false]</li>

 		<li> remove : Boolean [false]</li>

 </ul>

 </code>

 

 

 <b>USAGE:</b><br /><br />

 <code>

 		import com.greensock.TweenLite; <br />

 		import com.greensock.plugins.TweenPlugin; <br />

 		import com.greensock.plugins.BevelFilterPlugin; <br />

 		TweenPlugin.activate([BevelFilterPlugin]); //activation is permanent in the SWF, so this line only needs to be run once.<br /><br />

 

 		TweenLite.to(mc, 1, {bevelFilter:{blurX:10, blurY:10, distance:6, angle:45, strength:1}});<br /><br />

 </code>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='BevelFilterPlugin' fullname='com.greensock.plugins:BevelFilterPlugin/BevelFilterPlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onInitTween' fullname='com.greensock.plugins:BevelFilterPlugin/onInitTween' isStatic='false' isFinal='false' isOverride='true'  param_names='target;value;tween' param_types='Object;*;com.greensock:TweenLite' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:BevelFilterPlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_propNames' fullname='com.greensock.plugins:BevelFilterPlugin/private:_propNames' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='com.greensock.plugins.null' fullname='com.greensock.plugins.null'>
<description><![CDATA[

 VERSION: 2.0

 DATE: 8/18/2009

 ACTIONSCRIPT VERSION: 3.0 

 UPDATES AND DOCUMENTATION AT: http://www.TweenMax.com

 ]]></description>
</packageRec>
<classRec name='DropShadowFilterPlugin' fullname='com.greensock.plugins:DropShadowFilterPlugin' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\plugins\DropShadowFilterPlugin.as' namespace='com.greensock.plugins' access='public' baseclass='com.greensock.plugins:FilterPlugin' isFinal='false' isDynamic='false' >
<description><![CDATA[

 Tweens a DropShadowFilter. The following properties are available (you only need to define the ones you want to tween):

 <code>

 <ul>

 		<li> distance : Number [0]</li>

 		<li> angle : Number [45]</li>

 		<li> color : uint [0x000000]</li>

 		<li> alpha :Number [0]</li>

 		<li> blurX : Number [0]</li>

 		<li> blurY : Number [0]</li>

 		<li> strength : Number [1]</li>

 		<li> quality : uint [2]</li>

 		<li> inner : Boolean [false]</li>

 		<li> knockout : Boolean [false]</li>

 		<li> hideObject : Boolean [false]</li>

 		<li> index : uint</li>

 		<li> addFilter : Boolean [false]</li>

 		<li> remove : Boolean [false]</li>

 </ul>

 </code>

 Set <code>remove</code> to true if you want the filter to be removed when the tween completes. <br /><br />

 

 <b>USAGE:</b><br /><br />

 <code>

 		import com.greensock.TweenLite; <br />

 		import com.greensock.plugins.TweenPlugin; <br />

 		import com.greensock.plugins.DropShadowFilterPlugin; <br />

 		TweenPlugin.activate([DropShadowFilterPlugin]); //activation is permanent in the SWF, so this line only needs to be run once.<br /><br />

 

 		TweenLite.to(mc, 1, {dropShadowFilter:{blurX:5, blurY:5, distance:5, alpha:0.6}}); <br /><br />

 </code>

 

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='DropShadowFilterPlugin' fullname='com.greensock.plugins:DropShadowFilterPlugin/DropShadowFilterPlugin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onInitTween' fullname='com.greensock.plugins:DropShadowFilterPlugin/onInitTween' isStatic='false' isFinal='false' isOverride='true'  param_names='target;value;tween' param_types='Object;*;com.greensock:TweenLite' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='API' fullname='com.greensock.plugins:DropShadowFilterPlugin/API' type='Number' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_propNames' fullname='com.greensock.plugins:DropShadowFilterPlugin/private:_propNames' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='PersonActionControl' fullname='happyfish.scene.personAction.control:PersonActionControl' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\personAction\control\PersonActionControl.as' namespace='happyfish.scene.personAction.control' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='PersonActionControl' fullname='happyfish.scene.personAction.control:PersonActionControl/PersonActionControl' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='PersonActionControl.as$393:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='activeNextAction' fullname='happyfish.scene.personAction.control:PersonActionControl/private:activeNextAction' isStatic='false' isFinal='false' isOverride='false'  param_names='person' param_types='happyfish.scene.world.grid:Person' param_defaults='undefined' result_type='void'>
</method>
<method name='addPerson' fullname='happyfish.scene.personAction.control:PersonActionControl/addPerson' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happyfish.scene.world.grid:Person' param_defaults='undefined' result_type='void'>
</method>
<method name='clear' fullname='happyfish.scene.personAction.control:PersonActionControl/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='cloneActions' fullname='happyfish.scene.personAction.control:PersonActionControl/private:cloneActions' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='Array'>
</method>
<method name='customAction' fullname='happyfish.scene.personAction.control:PersonActionControl/customAction' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='filterCanWalkNode' fullname='happyfish.scene.personAction.control:PersonActionControl/private:filterCanWalkNode' isStatic='false' isFinal='false' isOverride='false'  param_names='element;index;arr' param_types='*;int;Array' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
</method>
<method name='getFreePerson' fullname='happyfish.scene.personAction.control:PersonActionControl/private:getFreePerson' isStatic='false' isFinal='false' isOverride='false'  result_type='happyfish.scene.world.grid:Person'>
</method>
<method name='getInstance' fullname='happyfish.scene.personAction.control:PersonActionControl/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.scene.personAction.control:PersonActionControl'>
</method>
<method name='getMeetNodes' fullname='happyfish.scene.personAction.control:PersonActionControl/private:getMeetNodes' isStatic='false' isFinal='false' isOverride='false'  param_names='targetNode' param_types='happyfish.scene.astar:Node' param_defaults='undefined' result_type='Array'>
</method>
<method name='getNeedRequest' fullname='happyfish.scene.personAction.control:PersonActionControl/private:getNeedRequest' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='getRequestByTrigger' fullname='happyfish.scene.personAction.control:PersonActionControl/private:getRequestByTrigger' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='Object'>
</method>
<method name='nodeToPoint3D' fullname='happyfish.scene.personAction.control:PersonActionControl/private:nodeToPoint3D' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='happyfish.scene.astar:Node' param_defaults='undefined' result_type='com.friendsofed.isometric:Point3D'>
</method>
<method name='setTrigger' fullname='happyfish.scene.personAction.control:PersonActionControl/private:setTrigger' isStatic='false' isFinal='false' isOverride='false'  param_names='triggerName' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 标记触发器,如果触发器完成

		 ]]></description>
<param><![CDATA[person

		 ]]></param>
<param><![CDATA[triggerName

		 ]]></param>
</method>
<method name='showMoodComplete' fullname='happyfish.scene.personAction.control:PersonActionControl/private:showMoodComplete' isStatic='false' isFinal='false' isOverride='false'  param_names='person' param_types='happyfish.scene.world.grid:Person' param_defaults='undefined' result_type='void'>
</method>
<method name='takeActions' fullname='happyfish.scene.personAction.control:PersonActionControl/takeActions' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='triggerComplete' fullname='happyfish.scene.personAction.control:PersonActionControl/private:triggerComplete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happyfish.events:TriggerEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 触发器完成,所有相关person执行下一步

		 ]]></description>
<param><![CDATA[e

		 ]]></param>
</method>
<method name='actions' fullname='happyfish.scene.personAction.control:PersonActionControl/actions/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='persons' fullname='happyfish.scene.personAction.control:PersonActionControl/persons/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='actions' fullname='happyfish.scene.personAction.control:PersonActionControl/actions/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='persons' fullname='happyfish.scene.personAction.control:PersonActionControl/persons/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<field name='_actions' fullname='happyfish.scene.personAction.control:PersonActionControl/private:_actions' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_freePersons' fullname='happyfish.scene.personAction.control:PersonActionControl/private:_freePersons' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_persons' fullname='happyfish.scene.personAction.control:PersonActionControl/private:_persons' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_requestMeetList' fullname='happyfish.scene.personAction.control:PersonActionControl/private:_requestMeetList' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='activeActions' fullname='happyfish.scene.personAction.control:PersonActionControl/private:activeActions' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='instance' fullname='happyfish.scene.personAction.control:PersonActionControl/private:instance' type='happyfish.scene.personAction.control:PersonActionControl' isStatic='true' isConst='false' >
</field>
<field name='state' fullname='happyfish.scene.personAction.control:PersonActionControl/state' type='happyfish.scene.world:WorldState' isStatic='false' isConst='false' >
</field>
<classRec name='TriggerControl' fullname='happyfish.scene.personAction.control:TriggerControl' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\personAction\control\TriggerControl.as' namespace='happyfish.scene.personAction.control' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='TriggerControl' fullname='happyfish.scene.personAction.control:TriggerControl/TriggerControl' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='TriggerControl.as$553:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='addTrigger' fullname='happyfish.scene.personAction.control:TriggerControl/addTrigger' isStatic='false' isFinal='false' isOverride='false'  param_names='name;triggerKey;value' param_types='String;uint;*' param_defaults='undefined;undefined;null' result_type='void'>
</method>
<method name='changeTrigger' fullname='happyfish.scene.personAction.control:TriggerControl/changeTrigger' isStatic='false' isFinal='false' isOverride='false'  param_names='name;change' param_types='String;int' param_defaults='undefined;1' result_type='void'>
</method>
<method name='checkTrigger' fullname='happyfish.scene.personAction.control:TriggerControl/private:checkTrigger' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='clearTrigger' fullname='happyfish.scene.personAction.control:TriggerControl/clearTrigger' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='finishTrigger' fullname='happyfish.scene.personAction.control:TriggerControl/finishTrigger' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='getInstance' fullname='happyfish.scene.personAction.control:TriggerControl/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.scene.personAction.control:TriggerControl'>
</method>
<method name='getTriggerState' fullname='happyfish.scene.personAction.control:TriggerControl/getTriggerState' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='uint'>
</method>
<method name='hasTrigger' fullname='happyfish.scene.personAction.control:TriggerControl/hasTrigger' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='resetTrigger' fullname='happyfish.scene.personAction.control:TriggerControl/resetTrigger' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='instance' fullname='happyfish.scene.personAction.control:TriggerControl/private:instance' type='happyfish.scene.personAction.control:TriggerControl' isStatic='true' isConst='false' >
</field>
<field name='triggers' fullname='happyfish.scene.personAction.control:TriggerControl/private:triggers' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<classRec name='MixMvControl' fullname='happymagic.display.view.magicBook:MixMvControl' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magicBook\MixMvControl.as' namespace='happymagic.display.view.magicBook' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MixMvControl' fullname='happymagic.display.view.magicBook:MixMvControl/MixMvControl' isStatic='false' isFinal='false' isOverride='false'  param_names='_needItemsLayout;_itemIcon;_itemPoint;_callBack' param_types='happyfish.display.ui:RoundLayout;happyfish.display.view:IconView;flash.geom:Point;Function' param_defaults='undefined;undefined;undefined;undefined' result_type='*'>
</method>
<method name='flashItemIcon' fullname='happymagic.display.view.magicBook:MixMvControl/private:flashItemIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='start' fullname='happymagic.display.view.magicBook:MixMvControl/start' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='tweenNeedItem_complete' fullname='happymagic.display.view.magicBook:MixMvControl/private:tweenNeedItem_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='happymagic.display.view.ui:NeedIconView' param_defaults='undefined' result_type='void'>
</method>
<method name='tweenNeedItem' fullname='happymagic.display.view.magicBook:MixMvControl/private:tweenNeedItem' isStatic='false' isFinal='false' isOverride='false'  param_names='item;delay' param_types='happymagic.display.view.ui:NeedIconView;Number' param_defaults='undefined;undefined' result_type='void'>
</method>
<field name='callBack' fullname='happymagic.display.view.magicBook:MixMvControl/private:callBack' type='Function' isStatic='false' isConst='false' >
</field>
<field name='itemIcon' fullname='happymagic.display.view.magicBook:MixMvControl/private:itemIcon' type='happyfish.display.view:IconView' isStatic='false' isConst='false' >
</field>
<field name='itemPoint' fullname='happymagic.display.view.magicBook:MixMvControl/private:itemPoint' type='flash.geom:Point' isStatic='false' isConst='false' >
</field>
<field name='needItemNum' fullname='happymagic.display.view.magicBook:MixMvControl/private:needItemNum' type='uint' isStatic='false' isConst='false' >
</field>
<field name='needItemsLayout' fullname='happymagic.display.view.magicBook:MixMvControl/private:needItemsLayout' type='happyfish.display.ui:RoundLayout' isStatic='false' isConst='false' >
</field>
<classRec name='TransMagicItemView' fullname='happymagic.display.view.magicBook:TransMagicItemView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magicBook\TransMagicItemView.as' namespace='happymagic.display.view.magicBook' access='public' baseclass='happyfish.display.ui:GridItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='TransMagicItemView' fullname='happymagic.display.view.magicBook:TransMagicItemView/TransMagicItemView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='*'>
</method>
<method name='loadIcon' fullname='happymagic.display.view.magicBook:TransMagicItemView/private:loadIcon' isStatic='false' isFinal='false' isOverride='false'  param_names='hasLearn' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.magicBook:TransMagicItemView/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='data' fullname='happymagic.display.view.magicBook:TransMagicItemView/data' type='happymagic.model.vo:TransMagicVo' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.magicBook:TransMagicItemView/private:iview' type='transMagicItemUi' isStatic='false' isConst='false' >
</field>
<classRec name='MagicClassBookItemView' fullname='happymagic.display.view.magicBook:MagicClassBookItemView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magicBook\MagicClassBookItemView.as' namespace='happymagic.display.view.magicBook' access='public' baseclass='happyfish.display.ui:GridItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MagicClassBookItemView' fullname='happymagic.display.view.magicBook:MagicClassBookItemView/MagicClassBookItemView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='*'>
</method>
<method name='loadIcon' fullname='happymagic.display.view.magicBook:MagicClassBookItemView/private:loadIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.magicBook:MagicClassBookItemView/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='data' fullname='happymagic.display.view.magicBook:MagicClassBookItemView/data' type='happymagic.model.vo:MagicClassVo' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.magicBook:MagicClassBookItemView/private:iview' type='magicClassItemUi' isStatic='false' isConst='false' >
</field>
<classRec name='MixMagicItemView' fullname='happymagic.display.view.magicBook:MixMagicItemView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magicBook\MixMagicItemView.as' namespace='happymagic.display.view.magicBook' access='public' baseclass='happyfish.display.ui:GridItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MixMagicItemView' fullname='happymagic.display.view.magicBook:MixMagicItemView/MixMagicItemView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='*'>
</method>
<method name='loadIcon' fullname='happymagic.display.view.magicBook:MixMagicItemView/private:loadIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.magicBook:MixMagicItemView/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='data' fullname='happymagic.display.view.magicBook:MixMagicItemView/data' type='happymagic.model.vo:MixMagicVo' isStatic='false' isConst='false' >
</field>
<field name='decor' fullname='happymagic.display.view.magicBook:MixMagicItemView/private:decor' type='happymagic.model.vo:DecorClassVo' isStatic='false' isConst='false' >
</field>
<field name='icon' fullname='happymagic.display.view.magicBook:MixMagicItemView/private:icon' type='happyfish.display.view:IconView' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.magicBook:MixMagicItemView/private:iview' type='mixMagicItemUi' isStatic='false' isConst='false' >
</field>
<classRec name='MagicBookView' fullname='happymagic.display.view.magicBook:MagicBookView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magicBook\MagicBookView.as' namespace='happymagic.display.view.magicBook' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MagicBookView' fullname='happymagic.display.view.magicBook:MagicBookView/MagicBookView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clear' fullname='happymagic.display.view.magicBook:MagicBookView/private:clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clickFun' fullname='happymagic.display.view.magicBook:MagicBookView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='init' fullname='happymagic.display.view.magicBook:MagicBookView/init' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='rightTab_select' fullname='happymagic.display.view.magicBook:MagicBookView/private:rightTab_select' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='selectTab' fullname='happymagic.display.view.magicBook:MagicBookView/private:selectTab' isStatic='false' isFinal='false' isOverride='false'  param_names='tab' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='showChangeMagic' fullname='happymagic.display.view.magicBook:MagicBookView/private:showChangeMagic' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:MagicBookEvent' param_defaults='undefined' result_type='void'>
</method>
<field name='Tab_blue' fullname='happymagic.display.view.magicBook:MagicBookView/Tab_blue' type='String' isStatic='false' isConst='true' defaultValue='tab_magic_blue' >
</field>
<field name='Tab_green' fullname='happymagic.display.view.magicBook:MagicBookView/Tab_green' type='String' isStatic='false' isConst='true' defaultValue='tab_magic_green' >
</field>
<field name='Tab_mix' fullname='happymagic.display.view.magicBook:MagicBookView/Tab_mix' type='String' isStatic='false' isConst='true' defaultValue='tab_mix' >
</field>
<field name='Tab_red' fullname='happymagic.display.view.magicBook:MagicBookView/Tab_red' type='String' isStatic='false' isConst='true' defaultValue='tab_magic_red' >
</field>
<field name='Tab_trans' fullname='happymagic.display.view.magicBook:MagicBookView/Tab_trans' type='String' isStatic='false' isConst='true' defaultValue='tab_trans' >
</field>
<field name='body' fullname='happymagic.display.view.magicBook:MagicBookView/private:body' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='currentTab' fullname='happymagic.display.view.magicBook:MagicBookView/private:currentTab' type='String' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.magicBook:MagicBookView/private:iview' type='magicBookUi' isStatic='false' isConst='false' >
</field>
<field name='magicClassView' fullname='happymagic.display.view.magicBook:MagicBookView/private:magicClassView' type='happymagic.display.view.magicBook:MagicClassBookView' isStatic='false' isConst='false' >
</field>
<field name='magicTypeSelecter' fullname='happymagic.display.view.magicBook:MagicBookView/private:magicTypeSelecter' type='happymagic.display.view.magicBook:MagicTypeSelectView' isStatic='false' isConst='false' >
</field>
<field name='mixView' fullname='happymagic.display.view.magicBook:MagicBookView/private:mixView' type='happymagic.display.view.magicBook:MixMagicView' isStatic='false' isConst='false' >
</field>
<field name='rightTab' fullname='happymagic.display.view.magicBook:MagicBookView/private:rightTab' type='happyfish.display.ui:TabelView' isStatic='false' isConst='false' >
</field>
<field name='transView' fullname='happymagic.display.view.magicBook:MagicBookView/private:transView' type='happymagic.display.view.magicBook:TransMagicView' isStatic='false' isConst='false' >
</field>
<classRec name='MixMagicResultMsgView' fullname='happymagic.display.view.magicBook:MixMagicResultMsgView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magicBook\MixMagicResultMsgView.as' namespace='happymagic.display.view.magicBook' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MixMagicResultMsgView' fullname='happymagic.display.view.magicBook:MixMagicResultMsgView/MixMagicResultMsgView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.magicBook:MixMagicResultMsgView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='loadIcon' fullname='happymagic.display.view.magicBook:MixMagicResultMsgView/private:loadIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.magicBook:MixMagicResultMsgView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value;num' param_types='happymagic.model.vo:MixMagicVo;uint' param_defaults='undefined;undefined' result_type='void'>
</method>
<field name='data' fullname='happymagic.display.view.magicBook:MixMagicResultMsgView/private:data' type='happymagic.model.vo:MixMagicVo' isStatic='false' isConst='false' >
</field>
<field name='decor' fullname='happymagic.display.view.magicBook:MixMagicResultMsgView/private:decor' type='happymagic.model.vo:DecorClassVo' isStatic='false' isConst='false' >
</field>
<field name='icon' fullname='happymagic.display.view.magicBook:MixMagicResultMsgView/private:icon' type='happyfish.display.view:IconView' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.magicBook:MixMagicResultMsgView/private:iview' type='mixedMsgUi' isStatic='false' isConst='false' >
</field>
<classRec name='ChangeMagicTypeConfirmView' fullname='happymagic.display.view.magicBook:ChangeMagicTypeConfirmView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magicBook\ChangeMagicTypeConfirmView.as' namespace='happymagic.display.view.magicBook' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ChangeMagicTypeConfirmView' fullname='happymagic.display.view.magicBook:ChangeMagicTypeConfirmView/ChangeMagicTypeConfirmView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.magicBook:ChangeMagicTypeConfirmView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.magicBook:ChangeMagicTypeConfirmView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<field name='callBack' fullname='happymagic.display.view.magicBook:ChangeMagicTypeConfirmView/private:callBack' type='Function' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.magicBook:ChangeMagicTypeConfirmView/private:iview' type='changeMagicTypeConfirmUi' isStatic='false' isConst='false' >
</field>
<field name='result' fullname='happymagic.display.view.magicBook:ChangeMagicTypeConfirmView/result' type='Boolean' isStatic='false' isConst='false' >
</field>
<classRec name='LeanMagicClassMsgView' fullname='happymagic.display.view.magicBook:LeanMagicClassMsgView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magicBook\LeanMagicClassMsgView.as' namespace='happymagic.display.view.magicBook' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='LeanMagicClassMsgView' fullname='happymagic.display.view.magicBook:LeanMagicClassMsgView/LeanMagicClassMsgView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.magicBook:LeanMagicClassMsgView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='closeMe' fullname='happymagic.display.view.magicBook:LeanMagicClassMsgView/closeMe' isStatic='false' isFinal='false' isOverride='true'  param_names='del' param_types='Boolean' param_defaults='true' result_type='void'>
</method>
<method name='loadIcon' fullname='happymagic.display.view.magicBook:LeanMagicClassMsgView/private:loadIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.magicBook:LeanMagicClassMsgView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='data' fullname='happymagic.display.view.magicBook:LeanMagicClassMsgView/private:data' type='Object' isStatic='false' isConst='false' >
</field>
<field name='icon' fullname='happymagic.display.view.magicBook:LeanMagicClassMsgView/private:icon' type='happyfish.display.view:IconView' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.magicBook:LeanMagicClassMsgView/private:iview' type='learnedMsgUi' isStatic='false' isConst='false' >
</field>
<classRec name='TransListView' fullname='happymagic.display.view.magicBook:TransListView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magicBook\TransListView.as' namespace='happymagic.display.view.magicBook' access='public' baseclass='happyfish.display.ui:GridPage' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='TransListView' fullname='happymagic.display.view.magicBook:TransListView/TransListView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview;_container' param_types='flash.display:MovieClip;flash.display:DisplayObjectContainer' param_defaults='undefined;undefined' result_type='*'>
</method>
<method name='createItem' fullname='happymagic.display.view.magicBook:TransListView/protected:createItem' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='happyfish.display.ui:GridItem'>
</method>
<classRec name='MagicClassBookListView' fullname='happymagic.display.view.magicBook:MagicClassBookListView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magicBook\MagicClassBookListView.as' namespace='happymagic.display.view.magicBook' access='public' baseclass='happyfish.display.ui:GridPage' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MagicClassBookListView' fullname='happymagic.display.view.magicBook:MagicClassBookListView/MagicClassBookListView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview;_container' param_types='flash.display:MovieClip;flash.display:DisplayObjectContainer' param_defaults='undefined;undefined' result_type='*'>
</method>
<method name='createItem' fullname='happymagic.display.view.magicBook:MagicClassBookListView/protected:createItem' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='happyfish.display.ui:GridItem'>
</method>
<classRec name='MixMagicListView' fullname='happymagic.display.view.magicBook:MixMagicListView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magicBook\MixMagicListView.as' namespace='happymagic.display.view.magicBook' access='public' baseclass='happyfish.display.ui:GridPage' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MixMagicListView' fullname='happymagic.display.view.magicBook:MixMagicListView/MixMagicListView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview;_container' param_types='flash.display:MovieClip;flash.display:DisplayObjectContainer' param_defaults='undefined;undefined' result_type='*'>
</method>
<method name='createItem' fullname='happymagic.display.view.magicBook:MixMagicListView/protected:createItem' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='happyfish.display.ui:GridItem'>
</method>
<classRec name='TransMagicView' fullname='happymagic.display.view.magicBook:TransMagicView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magicBook\TransMagicView.as' namespace='happymagic.display.view.magicBook' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='TransMagicView' fullname='happymagic.display.view.magicBook:TransMagicView/TransMagicView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='item_select' fullname='happymagic.display.view.magicBook:TransMagicView/private:item_select' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.magicBook:TransMagicView/setData' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='infoView' fullname='happymagic.display.view.magicBook:TransMagicView/private:infoView' type='happymagic.display.view.magicBook:TransInfoView' isStatic='false' isConst='false' >
</field>
<field name='list' fullname='happymagic.display.view.magicBook:TransMagicView/private:list' type='happymagic.display.view.magicBook:TransListView' isStatic='false' isConst='false' >
</field>
<classRec name='MagicClassBookView' fullname='happymagic.display.view.magicBook:MagicClassBookView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magicBook\MagicClassBookView.as' namespace='happymagic.display.view.magicBook' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MagicClassBookView' fullname='happymagic.display.view.magicBook:MagicClassBookView/MagicClassBookView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='item_select' fullname='happymagic.display.view.magicBook:MagicClassBookView/private:item_select' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.magicBook:MagicClassBookView/setData' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='infoView' fullname='happymagic.display.view.magicBook:MagicClassBookView/private:infoView' type='happymagic.display.view.magicBook:MagicClassInfoView' isStatic='false' isConst='false' >
</field>
<field name='list' fullname='happymagic.display.view.magicBook:MagicClassBookView/private:list' type='happymagic.display.view.magicBook:MagicClassBookListView' isStatic='false' isConst='false' >
</field>
<classRec name='MagicTypeSelectView' fullname='happymagic.display.view.magicBook:MagicTypeSelectView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magicBook\MagicTypeSelectView.as' namespace='happymagic.display.view.magicBook' access='public' baseclass='selecMagicTypeUi' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MagicTypeSelectView' fullname='happymagic.display.view.magicBook:MagicTypeSelectView/MagicTypeSelectView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='changeMagicType_complete' fullname='happymagic.display.view.magicBook:MagicTypeSelectView/private:changeMagicType_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='changeMagicType' fullname='happymagic.display.view.magicBook:MagicTypeSelectView/private:changeMagicType' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clickFun' fullname='happymagic.display.view.magicBook:MagicTypeSelectView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='init' fullname='happymagic.display.view.magicBook:MagicTypeSelectView/private:init' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='showConfirm_result' fullname='happymagic.display.view.magicBook:MagicTypeSelectView/private:showConfirm_result' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:MagicBookEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='showConfirm' fullname='happymagic.display.view.magicBook:MagicTypeSelectView/private:showConfirm' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='type' fullname='happymagic.display.view.magicBook:MagicTypeSelectView/private:type' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='MixMagicView' fullname='happymagic.display.view.magicBook:MixMagicView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magicBook\MixMagicView.as' namespace='happymagic.display.view.magicBook' access='public' baseclass='mixMagicUi' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MixMagicView' fullname='happymagic.display.view.magicBook:MixMagicView/MixMagicView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.magicBook:MixMagicView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='listClickFun' fullname='happymagic.display.view.magicBook:MixMagicView/private:listClickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='tab_select' fullname='happymagic.display.view.magicBook:MixMagicView/private:tab_select' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<field name='infoView' fullname='happymagic.display.view.magicBook:MixMagicView/private:infoView' type='happymagic.display.view.magicBook:MixMagicInfoView' isStatic='false' isConst='false' >
</field>
<field name='leftTab' fullname='happymagic.display.view.magicBook:MixMagicView/private:leftTab' type='happyfish.display.ui:TabelView' isStatic='false' isConst='false' >
</field>
<field name='list' fullname='happymagic.display.view.magicBook:MixMagicView/private:list' type='happymagic.display.view.magicBook:MixMagicListView' isStatic='false' isConst='false' >
</field>
<classRec name='TransInfoView' fullname='happymagic.display.view.magicBook:TransInfoView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magicBook\TransInfoView.as' namespace='happymagic.display.view.magicBook' access='public' baseclass='transInfoUi' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='TransInfoView' fullname='happymagic.display.view.magicBook:TransInfoView/TransInfoView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='bubbleComplete' fullname='happymagic.display.view.magicBook:TransInfoView/bubbleComplete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clearGetItemIcons' fullname='happymagic.display.view.magicBook:TransInfoView/private:clearGetItemIcons' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clear' fullname='happymagic.display.view.magicBook:TransInfoView/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clickFun' fullname='happymagic.display.view.magicBook:TransInfoView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='learnMvEnd' fullname='happymagic.display.view.magicBook:TransInfoView/private:learnMvEnd' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='learn_complete' fullname='happymagic.display.view.magicBook:TransInfoView/private:learn_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='learn' fullname='happymagic.display.view.magicBook:TransInfoView/private:learn' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='loadGetItemIcons' fullname='happymagic.display.view.magicBook:TransInfoView/private:loadGetItemIcons' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='loadIcon' fullname='happymagic.display.view.magicBook:TransInfoView/private:loadIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='happyfish.display.view:IconView'>
</method>
<method name='setData' fullname='happymagic.display.view.magicBook:TransInfoView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happymagic.model.vo:TransMagicVo' param_defaults='undefined' result_type='void'>
</method>
<method name='startLearnMv' fullname='happymagic.display.view.magicBook:TransInfoView/private:startLearnMv' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='useTrans' fullname='happymagic.display.view.magicBook:TransInfoView/private:useTrans' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='bubble' fullname='happymagic.display.view.magicBook:TransInfoView/private:bubble' type='happyfish.cacher:CacheSprite' isStatic='false' isConst='false' >
</field>
<field name='data' fullname='happymagic.display.view.magicBook:TransInfoView/data' type='happymagic.model.vo:TransMagicVo' isStatic='false' isConst='false' >
</field>
<field name='getItemLayout' fullname='happymagic.display.view.magicBook:TransInfoView/private:getItemLayout' type='xrope:HLineLayout' isStatic='false' isConst='false' >
</field>
<field name='icon' fullname='happymagic.display.view.magicBook:TransInfoView/private:icon' type='happyfish.display.view:IconView' isStatic='false' isConst='false' >
</field>
<field name='needCrystalList' fullname='happymagic.display.view.magicBook:TransInfoView/private:needCrystalList' type='happymagic.display.view.ui:NeedCrystalGridView' isStatic='false' isConst='false' >
</field>
<classRec name='MagicClassInfoView' fullname='happymagic.display.view.magicBook:MagicClassInfoView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magicBook\MagicClassInfoView.as' namespace='happymagic.display.view.magicBook' access='public' baseclass='magicClassInfoUi' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MagicClassInfoView' fullname='happymagic.display.view.magicBook:MagicClassInfoView/MagicClassInfoView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clear' fullname='happymagic.display.view.magicBook:MagicClassInfoView/private:clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clickFun' fullname='happymagic.display.view.magicBook:MagicClassInfoView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='learnMvEnd' fullname='happymagic.display.view.magicBook:MagicClassInfoView/private:learnMvEnd' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='learn_complete' fullname='happymagic.display.view.magicBook:MagicClassInfoView/private:learn_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='learn' fullname='happymagic.display.view.magicBook:MagicClassInfoView/private:learn' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='loadIcon' fullname='happymagic.display.view.magicBook:MagicClassInfoView/private:loadIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='happyfish.display.view:IconView'>
</method>
<method name='setData' fullname='happymagic.display.view.magicBook:MagicClassInfoView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happymagic.model.vo:MagicClassVo' param_defaults='undefined' result_type='void'>
</method>
<method name='startLearnMv' fullname='happymagic.display.view.magicBook:MagicClassInfoView/private:startLearnMv' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='data' fullname='happymagic.display.view.magicBook:MagicClassInfoView/private:data' type='happymagic.model.vo:MagicClassVo' isStatic='false' isConst='false' >
</field>
<field name='icon' fullname='happymagic.display.view.magicBook:MagicClassInfoView/private:icon' type='happyfish.display.view:IconView' isStatic='false' isConst='false' >
</field>
<field name='needCrystalList' fullname='happymagic.display.view.magicBook:MagicClassInfoView/private:needCrystalList' type='happymagic.display.view.ui:NeedCrystalGridView' isStatic='false' isConst='false' >
</field>
<classRec name='MixMagicInfoView' fullname='happymagic.display.view.magicBook:MixMagicInfoView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magicBook\MixMagicInfoView.as' namespace='happymagic.display.view.magicBook' access='public' baseclass='mixMagicInfoUi' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MixMagicInfoView' fullname='happymagic.display.view.magicBook:MixMagicInfoView/MixMagicInfoView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clear' fullname='happymagic.display.view.magicBook:MixMagicInfoView/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clickFun' fullname='happymagic.display.view.magicBook:MixMagicInfoView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='createNeedItems' fullname='happymagic.display.view.magicBook:MixMagicInfoView/private:createNeedItems' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='initNeedItems' fullname='happymagic.display.view.magicBook:MixMagicInfoView/private:initNeedItems' isStatic='false' isFinal='false' isOverride='false'  param_names='num' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='loadIcon' fullname='happymagic.display.view.magicBook:MixMagicInfoView/private:loadIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='mixMv_complete' fullname='happymagic.display.view.magicBook:MixMagicInfoView/private:mixMv_complete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='mix_complete' fullname='happymagic.display.view.magicBook:MixMagicInfoView/private:mix_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='mix' fullname='happymagic.display.view.magicBook:MixMagicInfoView/private:mix' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setBuyNum' fullname='happymagic.display.view.magicBook:MixMagicInfoView/setBuyNum' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.magicBook:MixMagicInfoView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happymagic.model.vo:MixMagicVo' param_defaults='undefined' result_type='void'>
</method>
<method name='startMix' fullname='happymagic.display.view.magicBook:MixMagicInfoView/private:startMix' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='textInput' fullname='happymagic.display.view.magicBook:MixMagicInfoView/private:textInput' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<field name='buyNum' fullname='happymagic.display.view.magicBook:MixMagicInfoView/private:buyNum' type='uint' isStatic='false' isConst='false' >
</field>
<field name='data' fullname='happymagic.display.view.magicBook:MixMagicInfoView/data' type='happymagic.model.vo:MixMagicVo' isStatic='false' isConst='false' >
</field>
<field name='decor' fullname='happymagic.display.view.magicBook:MixMagicInfoView/private:decor' type='happymagic.model.vo:DecorClassVo' isStatic='false' isConst='false' >
</field>
<field name='icon' fullname='happymagic.display.view.magicBook:MixMagicInfoView/private:icon' type='happyfish.display.view:IconView' isStatic='false' isConst='false' >
</field>
<field name='needItem_blue' fullname='happymagic.display.view.magicBook:MixMagicInfoView/private:needItem_blue' type='happymagic.display.view.ui:NeedIconView' isStatic='false' isConst='false' >
</field>
<field name='needItem_gem' fullname='happymagic.display.view.magicBook:MixMagicInfoView/private:needItem_gem' type='happymagic.display.view.ui:NeedIconView' isStatic='false' isConst='false' >
</field>
<field name='needItem_green' fullname='happymagic.display.view.magicBook:MixMagicInfoView/private:needItem_green' type='happymagic.display.view.ui:NeedIconView' isStatic='false' isConst='false' >
</field>
<field name='needItem_red' fullname='happymagic.display.view.magicBook:MixMagicInfoView/private:needItem_red' type='happymagic.display.view.ui:NeedIconView' isStatic='false' isConst='false' >
</field>
<field name='needListLayout' fullname='happymagic.display.view.magicBook:MixMagicInfoView/private:needListLayout' type='happyfish.display.ui:RoundLayout' isStatic='false' isConst='false' >
</field>
<field name='needListMc' fullname='happymagic.display.view.magicBook:MixMagicInfoView/private:needListMc' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<classRec name='CrystalNumView' fullname='happymagic.display.view.magicBook:CrystalNumView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magicBook\CrystalNumView.as' namespace='happymagic.display.view.magicBook' access='public' baseclass='mixCrystalUi' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='CrystalNumView' fullname='happymagic.display.view.magicBook:CrystalNumView/CrystalNumView' isStatic='false' isFinal='false' isOverride='false'  param_names='_type;_num;_showEnough' param_types='uint;int;Boolean' param_defaults='undefined;undefined;false' result_type='*'>
</method>
<method name='initNum' fullname='happymagic.display.view.magicBook:CrystalNumView/private:initNum' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setNum' fullname='happymagic.display.view.magicBook:CrystalNumView/setNum' isStatic='false' isFinal='false' isOverride='false'  param_names='_num' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<field name='num' fullname='happymagic.display.view.magicBook:CrystalNumView/num' type='int' isStatic='false' isConst='false' >
</field>
<field name='showEnough' fullname='happymagic.display.view.magicBook:CrystalNumView/private:showEnough' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='happymagic.display.view.magicBook:CrystalNumView/type' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='PersonActionType' fullname='happyfish.scene.personAction:PersonActionType' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\personAction\PersonActionType.as' namespace='happyfish.scene.personAction' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='PersonActionType' fullname='happyfish.scene.personAction:PersonActionType/PersonActionType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='FIDDLE' fullname='happyfish.scene.personAction:PersonActionType/FIDDLE' type='String' isStatic='true' isConst='true' defaultValue='fiddle' >
</field>
<field name='HIDE' fullname='happyfish.scene.personAction:PersonActionType/HIDE' type='String' isStatic='true' isConst='true' defaultValue='hide' >
</field>
<field name='OUT_SCENE' fullname='happyfish.scene.personAction:PersonActionType/OUT_SCENE' type='String' isStatic='true' isConst='true' defaultValue='outScene' >
</field>
<field name='REQUEST_MEET' fullname='happyfish.scene.personAction:PersonActionType/REQUEST_MEET' type='String' isStatic='true' isConst='true' defaultValue='requestMeet' >
</field>
<field name='ROUND_RECT' fullname='happyfish.scene.personAction:PersonActionType/ROUND_RECT' type='String' isStatic='true' isConst='true' defaultValue='roundRect' >
</field>
<field name='ROUND_ROOM' fullname='happyfish.scene.personAction:PersonActionType/ROUND_ROOM' type='String' isStatic='true' isConst='true' defaultValue='roundRoom' >
</field>
<field name='SHOW_CHAT' fullname='happyfish.scene.personAction:PersonActionType/SHOW_CHAT' type='String' isStatic='true' isConst='true' defaultValue='showChat' >
</field>
<field name='SHOW_MOOD' fullname='happyfish.scene.personAction:PersonActionType/SHOW_MOOD' type='String' isStatic='true' isConst='true' defaultValue='showMood' >
</field>
<field name='TO_ITEM' fullname='happyfish.scene.personAction:PersonActionType/TO_ITEM' type='String' isStatic='true' isConst='true' defaultValue='toItem' >
</field>
<field name='TO_NODE' fullname='happyfish.scene.personAction:PersonActionType/TO_NODE' type='String' isStatic='true' isConst='true' defaultValue='toNode' >
</field>
<field name='TO_ROUND_NODE' fullname='happyfish.scene.personAction:PersonActionType/TO_ROUND_NODE' type='String' isStatic='true' isConst='true' defaultValue='toRoundNode' >
</field>
<classRec name='PersonActionVo' fullname='happyfish.scene.personAction:PersonActionVo' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\scene\personAction\PersonActionVo.as' namespace='happyfish.scene.personAction' access='public' baseclass='happymagic.model.vo:BasicVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='PersonActionVo' fullname='happyfish.scene.personAction:PersonActionVo/PersonActionVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clone' fullname='happyfish.scene.personAction:PersonActionVo/clone' isStatic='false' isFinal='false' isOverride='false'  result_type='happyfish.scene.personAction:PersonActionVo'>
</method>
<method name='setData' fullname='happyfish.scene.personAction:PersonActionVo/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='happymagic.model.vo:BasicVo'>
</method>
<field name='chat' fullname='happyfish.scene.personAction:PersonActionVo/chat' type='String' isStatic='false' isConst='false' >
</field>
<field name='iconClass' fullname='happyfish.scene.personAction:PersonActionVo/iconClass' type='String' isStatic='false' isConst='false' >
</field>
<field name='isoItem' fullname='happyfish.scene.personAction:PersonActionVo/isoItem' type='happyfish.scene.world.grid:IsoItem' isStatic='false' isConst='false' >
</field>
<field name='num' fullname='happyfish.scene.personAction:PersonActionVo/num' type='int' isStatic='false' isConst='false' >
</field>
<field name='rectArr' fullname='happyfish.scene.personAction:PersonActionVo/rectArr' type='Array' isStatic='false' isConst='false' >
</field>
<field name='rect' fullname='happyfish.scene.personAction:PersonActionVo/rect' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
</field>
<field name='showTime' fullname='happyfish.scene.personAction:PersonActionVo/showTime' type='uint' isStatic='false' isConst='false' >
</field>
<field name='targetNodeArr' fullname='happyfish.scene.personAction:PersonActionVo/targetNodeArr' type='Array' isStatic='false' isConst='false' >
</field>
<field name='targetNode' fullname='happyfish.scene.personAction:PersonActionVo/targetNode' type='happyfish.scene.astar:Node' isStatic='false' isConst='false' >
</field>
<field name='times' fullname='happyfish.scene.personAction:PersonActionVo/times' type='uint' isStatic='false' isConst='false' >
</field>
<field name='towardsNodeArr' fullname='happyfish.scene.personAction:PersonActionVo/towardsNodeArr' type='Array' isStatic='false' isConst='false' >
</field>
<field name='towardsNode' fullname='happyfish.scene.personAction:PersonActionVo/towardsNode' type='happyfish.scene.astar:Node' isStatic='false' isConst='false' >
</field>
<field name='triggerName' fullname='happyfish.scene.personAction:PersonActionVo/triggerName' type='String' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='happyfish.scene.personAction:PersonActionVo/type' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='AqMath' fullname='com.aquioux:AqMath' sourcefile='E:\work\happyMagic\src\client\libs\com\aquioux\AqMath.as' namespace='com.aquioux' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='createRandomInt' fullname='com.aquioux:AqMath/createRandomInt' isStatic='true' isFinal='false' isOverride='false'  param_names='max;min' param_types='int;int' param_defaults='undefined;0' result_type='int'>
</method>
<method name='d2r' fullname='com.aquioux:AqMath/d2r' isStatic='true' isFinal='false' isOverride='false'  param_names='degree' param_types='Number' param_defaults='undefined' result_type='Number'>
</method>
<method name='flipCoin' fullname='com.aquioux:AqMath/flipCoin' isStatic='true' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='r2d' fullname='com.aquioux:AqMath/r2d' isStatic='true' isFinal='false' isOverride='false'  param_names='radian' param_types='Number' param_defaults='undefined' result_type='Number'>
</method>
<field name='GORLDEN_RATE' fullname='com.aquioux:AqMath/GORLDEN_RATE' type='Number' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<classRec name='GameMouseEvent' fullname='happyfish.events:GameMouseEvent' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\events\GameMouseEvent.as' namespace='happyfish.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='GameMouseEvent' fullname='happyfish.events:GameMouseEvent/GameMouseEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='$mouse_event_type;$item;$item_type;$event;$data;bubbles;cancelable' param_types='String;happyfish.scene.world.grid:IsoItem;String;flash.events:MouseEvent;Object;Boolean;Boolean' param_defaults='undefined;undefined;undefined;null;null;true;false' result_type='*'>
</method>
<field name='CLICK' fullname='happyfish.events:GameMouseEvent/CLICK' type='String' isStatic='true' isConst='true' defaultValue='Click' >
</field>
<field name='GAME_MOUSE_EVENT' fullname='happyfish.events:GameMouseEvent/GAME_MOUSE_EVENT' type='String' isStatic='true' isConst='true' defaultValue='game mouse event' >
</field>
<field name='OUT' fullname='happyfish.events:GameMouseEvent/OUT' type='String' isStatic='true' isConst='true' defaultValue='Out' >
</field>
<field name='OVER' fullname='happyfish.events:GameMouseEvent/OVER' type='String' isStatic='true' isConst='true' defaultValue='Over' >
</field>
<field name='data' fullname='happyfish.events:GameMouseEvent/data' type='Object' isStatic='false' isConst='false' >
</field>
<field name='itemType' fullname='happyfish.events:GameMouseEvent/itemType' type='String' isStatic='false' isConst='false' >
</field>
<field name='item' fullname='happyfish.events:GameMouseEvent/item' type='happyfish.scene.world.grid:IsoItem' isStatic='false' isConst='false' >
</field>
<field name='mouseEventType' fullname='happyfish.events:GameMouseEvent/mouseEventType' type='String' isStatic='false' isConst='false' >
</field>
<field name='mouseEvent' fullname='happyfish.events:GameMouseEvent/mouseEvent' type='flash.events:MouseEvent' isStatic='false' isConst='false' >
</field>
<classRec name='ModuleEvent' fullname='happyfish.events:ModuleEvent' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\events\ModuleEvent.as' namespace='happyfish.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ModuleEvent' fullname='happyfish.events:ModuleEvent/ModuleEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='happyfish.events:ModuleEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='happyfish.events:ModuleEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='MODULE_CLOSE' fullname='happyfish.events:ModuleEvent/MODULE_CLOSE' type='String' isStatic='true' isConst='true' defaultValue='moduleClose' >
</field>
<field name='MODULE_INIT_COMPLETE' fullname='happyfish.events:ModuleEvent/MODULE_INIT_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='moduleInitComplete' >
</field>
<field name='moduleName' fullname='happyfish.events:ModuleEvent/moduleName' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='UrlConnectEvent' fullname='happyfish.events:UrlConnectEvent' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\events\UrlConnectEvent.as' namespace='happyfish.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
</classRec>
<method name='UrlConnectEvent' fullname='happyfish.events:UrlConnectEvent/UrlConnectEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='happyfish.events:UrlConnectEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='happyfish.events:UrlConnectEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='ERROR' fullname='happyfish.events:UrlConnectEvent/ERROR' type='String' isStatic='true' isConst='true' defaultValue='UrlConnectError' >
</field>
<field name='IO_ERROR' fullname='happyfish.events:UrlConnectEvent/IO_ERROR' type='String' isStatic='true' isConst='true' defaultValue='ioErroe' >
</field>
<field name='OUT_TIME' fullname='happyfish.events:UrlConnectEvent/OUT_TIME' type='String' isStatic='true' isConst='true' defaultValue='outTime' >
</field>
<field name='SECURITY_ERROR' fullname='happyfish.events:UrlConnectEvent/SECURITY_ERROR' type='String' isStatic='true' isConst='true' defaultValue='SecurityError' >
</field>
<field name='SYS_ERROR' fullname='happyfish.events:UrlConnectEvent/SYS_ERROR' type='String' isStatic='true' isConst='true' defaultValue='sysError' >
</field>
<field name='errorType' fullname='happyfish.events:UrlConnectEvent/errorType' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='SwfClassCacheEvent' fullname='happyfish.events:SwfClassCacheEvent' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\events\SwfClassCacheEvent.as' namespace='happyfish.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
</classRec>
<method name='SwfClassCacheEvent' fullname='happyfish.events:SwfClassCacheEvent/SwfClassCacheEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='happyfish.events:SwfClassCacheEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='happyfish.events:SwfClassCacheEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='COMPLETE' fullname='happyfish.events:SwfClassCacheEvent/COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='ClassCacheComplete' >
</field>
<field name='className' fullname='happyfish.events:SwfClassCacheEvent/className' type='String' isStatic='false' isConst='false' >
</field>
<field name='hasClass' fullname='happyfish.events:SwfClassCacheEvent/hasClass' type='Boolean' isStatic='false' isConst='false' >
</field>
<classRec name='TriggerEvent' fullname='happyfish.events:TriggerEvent' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\events\TriggerEvent.as' namespace='happyfish.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='TriggerEvent' fullname='happyfish.events:TriggerEvent/TriggerEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;_triggerName;_value;bubbles;cancelable' param_types='String;String;*;Boolean;Boolean' param_defaults='undefined;undefined;undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='happyfish.events:TriggerEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='happyfish.events:TriggerEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='TRIGGER_CANCEL' fullname='happyfish.events:TriggerEvent/TRIGGER_CANCEL' type='String' isStatic='true' isConst='true' defaultValue='triggerCancel' >
</field>
<field name='TRIGGER_COMPLETE' fullname='happyfish.events:TriggerEvent/TRIGGER_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='triggerComplete' >
</field>
<field name='triggerName' fullname='happyfish.events:TriggerEvent/triggerName' type='String' isStatic='false' isConst='false' >
</field>
<field name='value' fullname='happyfish.events:TriggerEvent/value' type='' isStatic='false' isConst='false' >
</field>
<classRec name='ItemBoxEvent' fullname='happymagic.display.view.itembox.events:ItemBoxEvent' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\itembox\events\ItemBoxEvent.as' namespace='happymagic.display.view.itembox.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ItemBoxEvent' fullname='happymagic.display.view.itembox.events:ItemBoxEvent/ItemBoxEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;_item;bubbles;cancelable' param_types='String;happymagic.display.view.itembox:ItemBoxItemView;Boolean;Boolean' param_defaults='undefined;null;false;false' result_type='*'>
</method>
<method name='clone' fullname='happymagic.display.view.itembox.events:ItemBoxEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='happymagic.display.view.itembox.events:ItemBoxEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='HIDE_ITEMBOX' fullname='happymagic.display.view.itembox.events:ItemBoxEvent/HIDE_ITEMBOX' type='String' isStatic='true' isConst='true' defaultValue='hideItemBox' >
</field>
<field name='ITEM_CLICK' fullname='happymagic.display.view.itembox.events:ItemBoxEvent/ITEM_CLICK' type='String' isStatic='true' isConst='true' defaultValue='itemClick' >
</field>
<field name='REFRESH_CUR_PAGE' fullname='happymagic.display.view.itembox.events:ItemBoxEvent/REFRESH_CUR_PAGE' type='String' isStatic='true' isConst='true' defaultValue='refreshCurPage' >
</field>
<field name='SHOW_ITEMBOX' fullname='happymagic.display.view.itembox.events:ItemBoxEvent/SHOW_ITEMBOX' type='String' isStatic='true' isConst='true' defaultValue='showItemBox' >
</field>
<field name='item' fullname='happymagic.display.view.itembox.events:ItemBoxEvent/item' type='happymagic.display.view.itembox:ItemBoxItemView' isStatic='false' isConst='false' >
</field>
<classRec name='ItemShopEvent' fullname='happymagic.display.view.itembox.events:ItemShopEvent' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\itembox\events\ItemShopEvent.as' namespace='happymagic.display.view.itembox.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ItemShopEvent' fullname='happymagic.display.view.itembox.events:ItemShopEvent/ItemShopEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;_item;bubbles;cancelable' param_types='String;happymagic.model.vo:ItemClassVo;Boolean;Boolean' param_defaults='undefined;undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='happymagic.display.view.itembox.events:ItemShopEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='happymagic.display.view.itembox.events:ItemShopEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='ITEM_CLICK' fullname='happymagic.display.view.itembox.events:ItemShopEvent/ITEM_CLICK' type='String' isStatic='true' isConst='true' defaultValue='itemShopItemClick' >
</field>
<field name='item' fullname='happymagic.display.view.itembox.events:ItemShopEvent/item' type='happymagic.model.vo:ItemClassVo' isStatic='false' isConst='false' >
</field>
<classRec name='WorldMapEvent' fullname='happymagic.display.view.worldMap.events:WorldMapEvent' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\worldMap\events\WorldMapEvent.as' namespace='happymagic.display.view.worldMap.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='WorldMapEvent' fullname='happymagic.display.view.worldMap.events:WorldMapEvent/WorldMapEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;_scene;bubbles;cancelable' param_types='String;happymagic.display.view.worldMap:WorldMapSceneIconView;Boolean;Boolean' param_defaults='undefined;undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='happymagic.display.view.worldMap.events:WorldMapEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='happymagic.display.view.worldMap.events:WorldMapEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='SCENEICON_CLICK' fullname='happymagic.display.view.worldMap.events:WorldMapEvent/SCENEICON_CLICK' type='String' isStatic='true' isConst='true' defaultValue='sceneClick' >
</field>
<field name='scene' fullname='happymagic.display.view.worldMap.events:WorldMapEvent/scene' type='happymagic.display.view.worldMap:WorldMapSceneIconView' isStatic='false' isConst='false' >
</field>
<classRec name='GridPageEvent' fullname='happyfish.display.ui.events:GridPageEvent' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\display\ui\events\GridPageEvent.as' namespace='happyfish.display.ui.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='GridPageEvent' fullname='happyfish.display.ui.events:GridPageEvent/GridPageEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='happyfish.display.ui.events:GridPageEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='happyfish.display.ui.events:GridPageEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='ITEM_SELECT' fullname='happyfish.display.ui.events:GridPageEvent/ITEM_SELECT' type='String' isStatic='true' isConst='true' defaultValue='itemSelect' >
</field>
<field name='data' fullname='happyfish.display.ui.events:GridPageEvent/data' type='' isStatic='false' isConst='false' >
</field>
<field name='item' fullname='happyfish.display.ui.events:GridPageEvent/item' type='happyfish.display.ui:GridItem' isStatic='false' isConst='false' >
</field>
<classRec name='TweenEvent' fullname='com.greensock.events:TweenEvent' sourcefile='E:\work\happyMagic\src\client\libs\com\greensock\events\TweenEvent.as' namespace='com.greensock.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

 Used for dispatching events from the GreenSock Tweening Platform. <br /><br />

 	  

 <b>Copyright 2011, GreenSock. All rights reserved.</b> This work is subject to the terms in <a href="http://www.greensock.com/terms_of_use.html">http://www.greensock.com/terms_of_use.html</a> or for corporate Club GreenSock members, the software agreement that was issued with the corporate membership.

 

 ]]></description>
<author><![CDATA[Jack Doyle, jack]]></author>
<greensock.com><![CDATA[
 ]]></greensock.com>
</classRec>
<method name='TweenEvent' fullname='com.greensock.events:TweenEvent/TweenEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='com.greensock.events:TweenEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<field name='COMPLETE' fullname='com.greensock.events:TweenEvent/COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='complete' >
</field>
<field name='INIT' fullname='com.greensock.events:TweenEvent/INIT' type='String' isStatic='true' isConst='true' defaultValue='init' >
</field>
<field name='REPEAT' fullname='com.greensock.events:TweenEvent/REPEAT' type='String' isStatic='true' isConst='true' defaultValue='repeat' >
</field>
<field name='REVERSE_COMPLETE' fullname='com.greensock.events:TweenEvent/REVERSE_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='reverseComplete' >
</field>
<field name='START' fullname='com.greensock.events:TweenEvent/START' type='String' isStatic='true' isConst='true' defaultValue='start' >
</field>
<field name='UPDATE' fullname='com.greensock.events:TweenEvent/UPDATE' type='String' isStatic='true' isConst='true' defaultValue='change' >
</field>
<field name='VERSION' fullname='com.greensock.events:TweenEvent/VERSION' type='Number' isStatic='true' isConst='true' defaultValue='1.1' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='BitmapCacherEvent' fullname='happyfish.cacher.bitmapMc.events:BitmapCacherEvent' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\cacher\bitmapMc\events\BitmapCacherEvent.as' namespace='happyfish.cacher.bitmapMc.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='BitmapCacherEvent' fullname='happyfish.cacher.bitmapMc.events:BitmapCacherEvent/BitmapCacherEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;$class_name;$data;bubbles;cancelable' param_types='String;String;Object;Boolean;Boolean' param_defaults='undefined;;null;true;true' result_type='*'>
</method>
<field name='BITMAP_CACHE_COMPLETED' fullname='happyfish.cacher.bitmapMc.events:BitmapCacherEvent/BITMAP_CACHE_COMPLETED' type='String' isStatic='true' isConst='true' defaultValue='bitmap_cache_completed' >
</field>
<field name='SPRITE_CACHE_COMPLETED' fullname='happyfish.cacher.bitmapMc.events:BitmapCacherEvent/SPRITE_CACHE_COMPLETED' type='String' isStatic='true' isConst='true' defaultValue='sprite_cache_completed' >
</field>
<field name='class_name' fullname='happyfish.cacher.bitmapMc.events:BitmapCacherEvent/class_name' type='String' isStatic='false' isConst='false' >
</field>
<field name='data' fullname='happyfish.cacher.bitmapMc.events:BitmapCacherEvent/data' type='Object' isStatic='false' isConst='false' >
</field>
<classRec name='MagicWorld' fullname='happymagic.scene.world:MagicWorld' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\MagicWorld.as' namespace='happymagic.scene.world' access='public' baseclass='happyfish.scene.world:GameWorld' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='MagicWorld' fullname='happymagic.scene.world:MagicWorld/MagicWorld' isStatic='false' isFinal='false' isOverride='false'  param_names='$worldState' param_types='happyfish.scene.world:WorldState' param_defaults='undefined' result_type='*'>
</method>
<method name='addItem' fullname='happymagic.scene.world:MagicWorld/addItem' isStatic='false' isFinal='false' isOverride='true'  param_names='$baseItem' param_types='happyfish.scene.world.grid:BaseItem' param_defaults='undefined' result_type='void'>
</method>
<method name='allItemStopDiyState' fullname='happymagic.scene.world:MagicWorld/allItemStopDiyState' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='allItemToDiyState' fullname='happymagic.scene.world:MagicWorld/allItemToDiyState' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 隐藏所有人形

		 所有物件进入diy状态

		 ]]></description>
</method>
<method name='cleaerTile' fullname='happymagic.scene.world:MagicWorld/private:cleaerTile' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 清除地板

		 ]]></description>
</method>
<method name='clearPlayerFlag' fullname='happymagic.scene.world:MagicWorld/clearPlayerFlag' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clear' fullname='happymagic.scene.world:MagicWorld/clear' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='createAwardItem' fullname='happymagic.scene.world:MagicWorld/createAwardItem' isStatic='false' isFinal='false' isOverride='false'  param_names='_type;_num;startP;id' param_types='uint;uint;com.friendsofed.isometric:Point3D;uint' param_defaults='undefined;undefined;undefined;0' result_type='void'>
<description><![CDATA[

		 增加一个掉落物

		 目前会把按1\10\100来分割成几个水晶来表现

		 ]]></description>
<param><![CDATA[_type

		 ]]></param>
<param><![CDATA[_num

		 ]]></param>
<param><![CDATA[startP

		 ]]></param>
</method>
<method name='createDecor_complete' fullname='happymagic.scene.world:MagicWorld/private:createDecor_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='createDecor' fullname='happymagic.scene.world:MagicWorld/private:createDecor' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='createOther' fullname='happymagic.scene.world:MagicWorld/createOther' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 后创建

		 ]]></description>
<param><![CDATA[$init_flg

		 ]]></param>
</method>
<method name='createPlayer_complete' fullname='happymagic.scene.world:MagicWorld/private:createPlayer_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='createPlayer' fullname='happymagic.scene.world:MagicWorld/private:createPlayer' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='createTile' fullname='happymagic.scene.world:MagicWorld/private:createTile' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='createWall_complete' fullname='happymagic.scene.world:MagicWorld/private:createWall_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='createWall' fullname='happymagic.scene.world:MagicWorld/createWall' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='create' fullname='happymagic.scene.world:MagicWorld/create' isStatic='false' isFinal='false' isOverride='true'  param_names='$data;$init_flg' param_types='Object;Boolean' param_defaults='undefined;true' result_type='void'>
</method>
<method name='decorComplete' fullname='happymagic.scene.world:MagicWorld/private:decorComplete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='destroyItems' fullname='happymagic.scene.world:MagicWorld/destroyItems' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='diyCancel' fullname='happymagic.scene.world:MagicWorld/private:diyCancel' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:SceneEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='diyFinished' fullname='happymagic.scene.world:MagicWorld/private:diyFinished' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:SceneEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 退出DIY时

		 ]]></description>
<param><![CDATA[e

		 ]]></param>
</method>
<method name='doorComplete' fullname='happymagic.scene.world:MagicWorld/doorComplete' isStatic='false' isFinal='false' isOverride='false'  param_names='target' param_types='happymagic.scene.world.grid.item:WallDecor' param_defaults='undefined' result_type='void'>
</method>
<method name='enterEditMode' fullname='happymagic.scene.world:MagicWorld/enterEditMode' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
<description><![CDATA[

		 进入DIY模式

		 ]]></description>
<param><![CDATA[e

		 ]]></param>
</method>
<method name='getAddMaxMp' fullname='happymagic.scene.world:MagicWorld/getAddMaxMp' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 

		 ]]></description>
<return><![CDATA[
		 ]]></return>
</method>
<method name='getCustomDoor' fullname='happymagic.scene.world:MagicWorld/getCustomDoor' isStatic='false' isFinal='false' isOverride='false'  result_type='happymagic.scene.world.grid.item:Door'>
</method>
<method name='getEventStudent' fullname='happymagic.scene.world:MagicWorld/getEventStudent' isStatic='false' isFinal='false' isOverride='false'  result_type='happymagic.scene.world.grid.person:Student'>
<description><![CDATA[

		 获取一个中断中的学生

		 ]]></description>
<return><![CDATA[
		 ]]></return>
</method>
<method name='getHaveCrystalDesk' fullname='happymagic.scene.world:MagicWorld/getHaveCrystalDesk' isStatic='false' isFinal='false' isOverride='false'  result_type='happymagic.scene.world.grid.item:Desk'>
<description><![CDATA[

		 获取一个可以收水晶的课桌

		 ]]></description>
<return><![CDATA[
		 ]]></return>
</method>
<method name='getNeedTeachStudent' fullname='happymagic.scene.world:MagicWorld/getNeedTeachStudent' isStatic='false' isFinal='false' isOverride='false'  result_type='happymagic.scene.world.grid.person:Student'>
<description><![CDATA[

		 获取一个可以教的学生

		 ]]></description>
<return><![CDATA[
		 ]]></return>
</method>
<method name='getReadyDoor' fullname='happymagic.scene.world:MagicWorld/getReadyDoor' isStatic='false' isFinal='false' isOverride='false'  result_type='happymagic.scene.world.grid.item:Door'>
<description><![CDATA[

		 获取一个可以放人的门

		 ]]></description>
<return><![CDATA[
		 ]]></return>
</method>
<method name='goFriendsHome' fullname='happymagic.scene.world:MagicWorld/goFriendsHome' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:SceneEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='init' fullname='happymagic.scene.world:MagicWorld/init' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='isDecorView' fullname='happymagic.scene.world:MagicWorld/private:isDecorView' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happyfish.scene.world.grid:IsoItem' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='layTile' fullname='happymagic.scene.world:MagicWorld/layTile' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
<description><![CDATA[

		 渲染地板

		 ]]></description>
<param><![CDATA[e

		 ]]></param>
</method>
<method name='leaveEditMode' fullname='happymagic.scene.world:MagicWorld/leaveEditMode' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[

		 离开编辑模式

		 ]]></description>
</method>
<method name='loadBigSceneBg' fullname='happymagic.scene.world:MagicWorld/loadBigSceneBg' isStatic='false' isFinal='false' isOverride='false'  param_names='isInit' param_types='Boolean' param_defaults='false' result_type='void'>
</method>
<method name='mouseGridFun' fullname='happymagic.scene.world:MagicWorld/private:mouseGridFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='onGameMouseEvent' fullname='happymagic.scene.world:MagicWorld/private:onGameMouseEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='happyfish.events:GameMouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 场景内所有点击事件统一处理接口

		 ]]></description>
<param><![CDATA[event

		 ]]></param>
</method>
<method name='personComplete' fullname='happymagic.scene.world:MagicWorld/private:personComplete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='preInit' fullname='happymagic.scene.world:MagicWorld/preInit' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='resizeFun' fullname='happymagic.scene.world:MagicWorld/resizeFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 居中

		 ]]></description>
</method>
<method name='setPlayerFlag' fullname='happymagic.scene.world:MagicWorld/setPlayerFlag' isStatic='false' isFinal='false' isOverride='false'  param_names='p' param_types='com.friendsofed.isometric:Point3D' param_defaults='undefined' result_type='void'>
</method>
<method name='startCreateScene' fullname='happymagic.scene.world:MagicWorld/private:startCreateScene' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='startDragMouseGrid' fullname='happymagic.scene.world:MagicWorld/private:startDragMouseGrid' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='tile_complete' fullname='happymagic.scene.world:MagicWorld/private:tile_complete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 某块地板完成时调用,判断全部完成时进入下一步

		 ]]></description>
</method>
<method name='wallComplete' fullname='happymagic.scene.world:MagicWorld/private:wallComplete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='decorList' fullname='happymagic.scene.world:MagicWorld/decorList/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='userInfo' fullname='happymagic.scene.world:MagicWorld/userInfo/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Object'>
</method>
<field name='_decorList' fullname='happymagic.scene.world:MagicWorld/private:_decorList' type='Object' isStatic='false' isConst='false' >
</field>
<field name='_floorList' fullname='happymagic.scene.world:MagicWorld/private:_floorList' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_initFlg' fullname='happymagic.scene.world:MagicWorld/private:_initFlg' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_student' fullname='happymagic.scene.world:MagicWorld/private:_student' type='happymagic.scene.world.grid.person:Student' isStatic='false' isConst='false' >
</field>
<field name='_studentsList' fullname='happymagic.scene.world:MagicWorld/private:_studentsList' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_userInfo' fullname='happymagic.scene.world:MagicWorld/private:_userInfo' type='happymagic.model.vo:UserVo' isStatic='false' isConst='false' >
</field>
<field name='_wallList' fullname='happymagic.scene.world:MagicWorld/private:_wallList' type='Array' isStatic='false' isConst='false' >
</field>
<field name='avatarsAreHidden' fullname='happymagic.scene.world:MagicWorld/avatarsAreHidden' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='bigSceneView' fullname='happymagic.scene.world:MagicWorld/bigSceneView' type='happymagic.scene.world.bigScene:BigSceneView' isStatic='false' isConst='false' >
</field>
<field name='decorNeedLoad' fullname='happymagic.scene.world:MagicWorld/private:decorNeedLoad' type='uint' isStatic='false' isConst='false' >
</field>
<field name='doorControl' fullname='happymagic.scene.world:MagicWorld/doorControl' type='happymagic.scene.world.control:DoorStateControl' isStatic='false' isConst='false' >
</field>
<field name='mouseGridIcon' fullname='happymagic.scene.world:MagicWorld/private:mouseGridIcon' type='gotoIcon' isStatic='false' isConst='false' >
</field>
<field name='personNeedLoad' fullname='happymagic.scene.world:MagicWorld/private:personNeedLoad' type='uint' isStatic='false' isConst='false' >
</field>
<field name='physicsControl' fullname='happymagic.scene.world:MagicWorld/private:physicsControl' type='happyfish.scene.world.control:IsoPhysicsControl' isStatic='false' isConst='false' >
</field>
<field name='playerFlagIcon' fullname='happymagic.scene.world:MagicWorld/private:playerFlagIcon' type='playerHalo' isStatic='false' isConst='false' >
</field>
<field name='sceneVo' fullname='happymagic.scene.world:MagicWorld/sceneVo' type='happymagic.model.vo:SceneVo' isStatic='false' isConst='false' >
</field>
<field name='tileList' fullname='happymagic.scene.world:MagicWorld/private:tileList' type='Array' isStatic='false' isConst='false' >
</field>
<field name='tileNeedLoad' fullname='happymagic.scene.world:MagicWorld/private:tileNeedLoad' type='uint' isStatic='false' isConst='false' >
</field>
<field name='wallNeedLoad' fullname='happymagic.scene.world:MagicWorld/private:wallNeedLoad' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='MagicState' fullname='happymagic.scene.world:MagicState' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\MagicState.as' namespace='happymagic.scene.world' access='public' baseclass='happyfish.scene.world:WorldState' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='MagicState' fullname='happymagic.scene.world:MagicState/MagicState' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='getState' fullname='happymagic.scene.world:MagicState/getState' isStatic='true' isFinal='false' isOverride='false'  param_names='$uid;$scene' param_types='int;int' param_defaults='undefined;undefined' result_type='happyfish.scene.world:WorldState'>
</method>
<field name='instances' fullname='happymagic.scene.world:MagicState/instances' type='Array' isStatic='true' isConst='false' >
</field>
<classRec name='MagicView' fullname='happymagic.scene.world:MagicView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\MagicView.as' namespace='happymagic.scene.world' access='public' baseclass='happyfish.scene.world:WorldView' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='MagicView' fullname='happymagic.scene.world:MagicView/MagicView' isStatic='false' isFinal='false' isOverride='false'  param_names='$worldState' param_types='happyfish.scene.world:WorldState' param_defaults='undefined' result_type='*'>
</method>
<classRec name='ActVo' fullname='happyfish.manager.actModule.vo:ActVo' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\manager\actModule\vo\ActVo.as' namespace='happyfish.manager.actModule.vo' access='public' baseclass='happymagic.model.vo:BasicVo' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ActVo' fullname='happyfish.manager.actModule.vo:ActVo/ActVo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<field name='actName' fullname='happyfish.manager.actModule.vo:ActVo/actName' type='String' isStatic='false' isConst='false' >
</field>
<field name='btn' fullname='happyfish.manager.actModule.vo:ActVo/btn' type='String' isStatic='false' isConst='false' >
</field>
<field name='data' fullname='happyfish.manager.actModule.vo:ActVo/data' type='Object' isStatic='false' isConst='false' >
</field>
<field name='goBuy' fullname='happyfish.manager.actModule.vo:ActVo/goBuy' type='int' isStatic='false' isConst='false' defaultValue='-1' >
</field>
<field name='index' fullname='happyfish.manager.actModule.vo:ActVo/index' type='uint' isStatic='false' isConst='false' >
</field>
<field name='link' fullname='happyfish.manager.actModule.vo:ActVo/link' type='String' isStatic='false' isConst='false' >
</field>
<field name='module' fullname='happyfish.manager.actModule.vo:ActVo/module' type='String' isStatic='false' isConst='false' >
</field>
<field name='needAct' fullname='happyfish.manager.actModule.vo:ActVo/needAct' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='showNews' fullname='happyfish.manager.actModule.vo:ActVo/showNews' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='state' fullname='happyfish.manager.actModule.vo:ActVo/state' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='ItemBoxItemView' fullname='happymagic.display.view.itembox:ItemBoxItemView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\itembox\ItemBoxItemView.as' namespace='happymagic.display.view.itembox' access='public' baseclass='happyfish.display.ui:GridItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ItemBoxItemView' fullname='happymagic.display.view.itembox:ItemBoxItemView/ItemBoxItemView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.itembox:ItemBoxItemView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='loadIcon' fullname='happymagic.display.view.itembox:ItemBoxItemView/private:loadIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='outFun' fullname='happymagic.display.view.itembox:ItemBoxItemView/private:outFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='overFun' fullname='happymagic.display.view.itembox:ItemBoxItemView/private:overFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.itembox:ItemBoxItemView/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='data' fullname='happymagic.display.view.itembox:ItemBoxItemView/data' type='happymagic.model.vo:ItemVo' isStatic='false' isConst='false' >
</field>
<field name='icon' fullname='happymagic.display.view.itembox:ItemBoxItemView/private:icon' type='happyfish.display.view:IconView' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.itembox:ItemBoxItemView/private:iview' type='itemBoxItemUi' isStatic='false' isConst='false' >
</field>
<classRec name='ItemShopItemView' fullname='happymagic.display.view.itembox:ItemShopItemView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\itembox\ItemShopItemView.as' namespace='happymagic.display.view.itembox' access='public' baseclass='happyfish.display.ui:GridItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ItemShopItemView' fullname='happymagic.display.view.itembox:ItemShopItemView/ItemShopItemView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.itembox:ItemShopItemView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='loadIcon' fullname='happymagic.display.view.itembox:ItemShopItemView/private:loadIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='outFun' fullname='happymagic.display.view.itembox:ItemShopItemView/private:outFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='overFun' fullname='happymagic.display.view.itembox:ItemShopItemView/private:overFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.itembox:ItemShopItemView/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='data' fullname='happymagic.display.view.itembox:ItemShopItemView/data' type='happymagic.model.vo:ItemClassVo' isStatic='false' isConst='false' >
</field>
<field name='icon' fullname='happymagic.display.view.itembox:ItemShopItemView/private:icon' type='happyfish.display.view:IconView' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.itembox:ItemShopItemView/private:iview' type='itemShopItemUi' isStatic='false' isConst='false' >
</field>
<classRec name='ItemBoxView' fullname='happymagic.display.view.itembox:ItemBoxView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\itembox\ItemBoxView.as' namespace='happymagic.display.view.itembox' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ItemBoxView' fullname='happymagic.display.view.itembox:ItemBoxView/ItemBoxView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.itembox:ItemBoxView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='initCurPage' fullname='happymagic.display.view.itembox:ItemBoxView/initCurPage' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 刷新当前页面,不更换页数

		 ]]></description>
</method>
<method name='itemClickFun' fullname='happymagic.display.view.itembox:ItemBoxView/private:itemClickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.display.view.itembox.events:ItemBoxEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='refreshFun' fullname='happymagic.display.view.itembox:ItemBoxView/private:refreshFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.display.view.itembox.events:ItemBoxEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='tab_select' fullname='happymagic.display.view.itembox:ItemBoxView/private:tab_select' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='useItem_complete' fullname='happymagic.display.view.itembox:ItemBoxView/private:useItem_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='useItem' fullname='happymagic.display.view.itembox:ItemBoxView/private:useItem' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='happymagic.model.vo:ItemVo' param_defaults='undefined' result_type='void'>
</method>
<field name='currentUseItem' fullname='happymagic.display.view.itembox:ItemBoxView/private:currentUseItem' type='happymagic.display.view.itembox:ItemBoxItemView' isStatic='false' isConst='false' >
</field>
<field name='data' fullname='happymagic.display.view.itembox:ItemBoxView/private:data' type='Array' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.itembox:ItemBoxView/private:iview' type='itemBoxUi' isStatic='false' isConst='false' >
</field>
<field name='list' fullname='happymagic.display.view.itembox:ItemBoxView/private:list' type='happymagic.display.view.itembox:ItemBoxListView' isStatic='false' isConst='false' >
</field>
<field name='tab' fullname='happymagic.display.view.itembox:ItemBoxView/private:tab' type='happyfish.display.ui:TabelView' isStatic='false' isConst='false' >
</field>
<classRec name='ItemShopView' fullname='happymagic.display.view.itembox:ItemShopView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\itembox\ItemShopView.as' namespace='happymagic.display.view.itembox' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ItemShopView' fullname='happymagic.display.view.itembox:ItemShopView/ItemShopView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.itembox:ItemShopView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='itemClickFun' fullname='happymagic.display.view.itembox:ItemShopView/private:itemClickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.display.view.itembox.events:ItemShopEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='showBuyMsg' fullname='happymagic.display.view.itembox:ItemShopView/private:showBuyMsg' isStatic='false' isFinal='false' isOverride='false'  param_names='itemClass' param_types='happymagic.model.vo:ItemClassVo' param_defaults='undefined' result_type='void'>
</method>
<method name='tab_select' fullname='happymagic.display.view.itembox:ItemShopView/private:tab_select' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<field name='iview' fullname='happymagic.display.view.itembox:ItemShopView/private:iview' type='itemShopUi' isStatic='false' isConst='false' >
</field>
<field name='list' fullname='happymagic.display.view.itembox:ItemShopView/private:list' type='happymagic.display.view.itembox:ItemShopListView' isStatic='false' isConst='false' >
</field>
<field name='tab' fullname='happymagic.display.view.itembox:ItemShopView/private:tab' type='happyfish.display.ui:TabelView' isStatic='false' isConst='false' >
</field>
<classRec name='BuyItemMsgView' fullname='happymagic.display.view.itembox:BuyItemMsgView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\itembox\BuyItemMsgView.as' namespace='happymagic.display.view.itembox' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='BuyItemMsgView' fullname='happymagic.display.view.itembox:BuyItemMsgView/BuyItemMsgView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='buyItem_complete' fullname='happymagic.display.view.itembox:BuyItemMsgView/private:buyItem_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='buyItem' fullname='happymagic.display.view.itembox:BuyItemMsgView/private:buyItem' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clickFun' fullname='happymagic.display.view.itembox:BuyItemMsgView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='loadIcon' fullname='happymagic.display.view.itembox:BuyItemMsgView/private:loadIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.itembox:BuyItemMsgView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happymagic.model.vo:ItemClassVo' param_defaults='undefined' result_type='void'>
</method>
<field name='data' fullname='happymagic.display.view.itembox:BuyItemMsgView/data' type='happymagic.model.vo:ItemClassVo' isStatic='false' isConst='false' >
</field>
<field name='icon' fullname='happymagic.display.view.itembox:BuyItemMsgView/private:icon' type='happyfish.display.view:IconView' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.itembox:BuyItemMsgView/private:iview' type='buyItemMsgUi' isStatic='false' isConst='false' >
</field>
<field name='numSelecter' fullname='happymagic.display.view.itembox:BuyItemMsgView/private:numSelecter' type='happyfish.display.ui:NumSelecterView' isStatic='false' isConst='false' >
</field>
<classRec name='ItemBoxListView' fullname='happymagic.display.view.itembox:ItemBoxListView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\itembox\ItemBoxListView.as' namespace='happymagic.display.view.itembox' access='public' baseclass='happyfish.display.ui:GridPage' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ItemBoxListView' fullname='happymagic.display.view.itembox:ItemBoxListView/ItemBoxListView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview;_container' param_types='flash.display:MovieClip;flash.display:DisplayObjectContainer' param_defaults='undefined;undefined' result_type='*'>
</method>
<method name='createItem' fullname='happymagic.display.view.itembox:ItemBoxListView/protected:createItem' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='happyfish.display.ui:GridItem'>
</method>
<classRec name='ItemShopListView' fullname='happymagic.display.view.itembox:ItemShopListView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\itembox\ItemShopListView.as' namespace='happymagic.display.view.itembox' access='public' baseclass='happyfish.display.ui:GridPage' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ItemShopListView' fullname='happymagic.display.view.itembox:ItemShopListView/ItemShopListView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview;_container' param_types='flash.display:MovieClip;flash.display:DisplayObjectContainer' param_defaults='undefined;undefined' result_type='*'>
</method>
<method name='createItem' fullname='happymagic.display.view.itembox:ItemShopListView/protected:createItem' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='happyfish.display.ui:GridItem'>
</method>
<classRec name='DecorListItemView' fullname='happymagic.display.view.edit:DecorListItemView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\edit\DecorListItemView.as' namespace='happymagic.display.view.edit' access='public' baseclass='happyfish.display.ui:GridItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='DecorListItemView' fullname='happymagic.display.view.edit:DecorListItemView/DecorListItemView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='*'>
</method>
<method name='add' fullname='happymagic.display.view.edit:DecorListItemView/add' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='clickFun' fullname='happymagic.display.view.edit:DecorListItemView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='delNum' fullname='happymagic.display.view.edit:DecorListItemView/delNum' isStatic='false' isFinal='false' isOverride='true'  param_names='num' param_types='uint' param_defaults='undefined' result_type='Array'>
</method>
<method name='getAndDelOne' fullname='happymagic.display.view.edit:DecorListItemView/getAndDelOne' isStatic='false' isFinal='false' isOverride='false'  result_type='happymagic.model.vo:DecorVo'>
</method>
<method name='initNumTxt' fullname='happymagic.display.view.edit:DecorListItemView/private:initNumTxt' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.edit:DecorListItemView/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='data' fullname='happymagic.display.view.edit:DecorListItemView/data' type='happymagic.model.vo:DecorVo' isStatic='false' isConst='false' >
</field>
<field name='icon' fullname='happymagic.display.view.edit:DecorListItemView/private:icon' type='happyfish.display.view:IconView' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.edit:DecorListItemView/private:iview' type='ui_decor' isStatic='false' isConst='false' >
</field>
<classRec name='BuildingItemList' fullname='happymagic.display.view.edit:BuildingItemList' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\edit\BuildingItemList.as' namespace='happymagic.display.view.edit' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 建筑道具列表

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='BuildingItemList' fullname='happymagic.display.view.edit:BuildingItemList/BuildingItemList' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='addItem' fullname='happymagic.display.view.edit:BuildingItemList/addItem' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happymagic.model.vo:DecorVo' param_defaults='undefined' result_type='void'>
</method>
<method name='clickFun' fullname='happymagic.display.view.edit:BuildingItemList/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='diyFinished' fullname='happymagic.display.view.edit:BuildingItemList/private:diyFinished' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:SceneEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='hideTips' fullname='happymagic.display.view.edit:BuildingItemList/hideTips' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='initData' fullname='happymagic.display.view.edit:BuildingItemList/initData' isStatic='false' isFinal='false' isOverride='false'  param_names='savePage' param_types='Boolean' param_defaults='false' result_type='void'>
</method>
<method name='leaveEdit_complete' fullname='happymagic.display.view.edit:BuildingItemList/private:leaveEdit_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='loadData_complete' fullname='happymagic.display.view.edit:BuildingItemList/private:loadData_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='loadData' fullname='happymagic.display.view.edit:BuildingItemList/private:loadData' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='onBuildingItemOut' fullname='happymagic.display.view.edit:BuildingItemList/onBuildingItemOut' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onBuildingItemOver' fullname='happymagic.display.view.edit:BuildingItemList/onBuildingItemOver' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='selectTab' fullname='happymagic.display.view.edit:BuildingItemList/private:selectTab' isStatic='false' isFinal='false' isOverride='false'  param_names='tab' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='showTips' fullname='happymagic.display.view.edit:BuildingItemList/showTips' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='happymagic.display.view.edit:DecorListItemView' param_defaults='undefined' result_type='void'>
</method>
<method name='tabel_select' fullname='happymagic.display.view.edit:BuildingItemList/private:tabel_select' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<field name='_iview' fullname='happymagic.display.view.edit:BuildingItemList/protected:_iview' type='ui_diymenu' isStatic='false' isConst='false' >
</field>
<field name='currentTab' fullname='happymagic.display.view.edit:BuildingItemList/private:currentTab' type='uint' isStatic='false' isConst='false' >
</field>
<field name='itemTips' fullname='happymagic.display.view.edit:BuildingItemList/private:itemTips' type='happymagic.display.view.edit:DecorItemTipsView' isStatic='false' isConst='false' >
</field>
<field name='list' fullname='happymagic.display.view.edit:BuildingItemList/list' type='happymagic.display.view.edit:DecorListView' isStatic='false' isConst='false' >
</field>
<field name='page_list' fullname='happymagic.display.view.edit:BuildingItemList/page_list' type='happyfish.display.view:PageList' isStatic='false' isConst='false' >
</field>
<field name='tabel' fullname='happymagic.display.view.edit:BuildingItemList/private:tabel' type='happyfish.display.ui:TabelView' isStatic='false' isConst='false' >
</field>
<classRec name='DecorListView' fullname='happymagic.display.view.edit:DecorListView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\edit\DecorListView.as' namespace='happymagic.display.view.edit' access='public' baseclass='happyfish.display.ui:GridPage' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='DecorListView' fullname='happymagic.display.view.edit:DecorListView/DecorListView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview;_container' param_types='flash.display:MovieClip;flash.display:DisplayObjectContainer' param_defaults='undefined;undefined' result_type='*'>
</method>
<method name='createItem' fullname='happymagic.display.view.edit:DecorListView/protected:createItem' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='happyfish.display.ui:GridItem'>
</method>
<classRec name='DecorItemTipsView' fullname='happymagic.display.view.edit:DecorItemTipsView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\edit\DecorItemTipsView.as' namespace='happymagic.display.view.edit' access='public' baseclass='diyItem_tipsUI' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='DecorItemTipsView' fullname='happymagic.display.view.edit:DecorItemTipsView/DecorItemTipsView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='setData' fullname='happymagic.display.view.edit:DecorItemTipsView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='happymagic.model.vo:DecorVo' param_defaults='undefined' result_type='void'>
</method>
<classRec name='TaskListItemView' fullname='happymagic.display.view.task:TaskListItemView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\task\TaskListItemView.as' namespace='happymagic.display.view.task' access='public' baseclass='happyfish.display.ui:GridItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='TaskListItemView' fullname='happymagic.display.view.task:TaskListItemView/TaskListItemView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='*'>
</method>
<method name='backToActived' fullname='happymagic.display.view.task:TaskListItemView/backToActived' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clickFun' fullname='happymagic.display.view.task:TaskListItemView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='finishMv' fullname='happymagic.display.view.task:TaskListItemView/finishMv' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.task:TaskListItemView/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='data' fullname='happymagic.display.view.task:TaskListItemView/data' type='happymagic.model.vo:TaskVo' isStatic='false' isConst='false' >
</field>
<field name='icon' fullname='happymagic.display.view.task:TaskListItemView/private:icon' type='happyfish.display.view:IconView' isStatic='false' isConst='false' >
</field>
<field name='stateIcon' fullname='happymagic.display.view.task:TaskListItemView/private:stateIcon' type='taskStateIcon' isStatic='false' isConst='false' >
</field>
<classRec name='TaskNeedItemView' fullname='happymagic.display.view.task:TaskNeedItemView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\task\TaskNeedItemView.as' namespace='happymagic.display.view.task' access='public' baseclass='happyfish.display.ui:GridItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='TaskNeedItemView' fullname='happymagic.display.view.task:TaskNeedItemView/TaskNeedItemView' isStatic='false' isFinal='false' isOverride='false'  param_names='__showEnough' param_types='Boolean' param_defaults='false' result_type='*'>
</method>
<method name='setData' fullname='happymagic.display.view.task:TaskNeedItemView/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='currentNum' fullname='happymagic.display.view.task:TaskNeedItemView/currentNum' type='uint' isStatic='false' isConst='false' >
</field>
<field name='data' fullname='happymagic.display.view.task:TaskNeedItemView/data' type='happymagic.model.vo:ConditionVo' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.task:TaskNeedItemView/private:iview' type='taskConditionItemUi' isStatic='false' isConst='false' >
</field>
<field name='showEnough' fullname='happymagic.display.view.task:TaskNeedItemView/showEnough' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='showNeed' fullname='happymagic.display.view.task:TaskNeedItemView/showNeed' type='Boolean' isStatic='false' isConst='false' >
</field>
<classRec name='TaskListView' fullname='happymagic.display.view.task:TaskListView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\task\TaskListView.as' namespace='happymagic.display.view.task' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='TaskListView' fullname='happymagic.display.view.task:TaskListView/TaskListView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='addTask' fullname='happymagic.display.view.task:TaskListView/private:addTask' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happymagic.model.vo:TaskVo' param_defaults='undefined' result_type='void'>
</method>
<method name='changeTask' fullname='happymagic.display.view.task:TaskListView/private:changeTask' isStatic='false' isFinal='false' isOverride='false'  param_names='taskVo' param_types='happymagic.model.vo:TaskVo' param_defaults='undefined' result_type='void'>
</method>
<method name='finishTask' fullname='happymagic.display.view.task:TaskListView/private:finishTask' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happymagic.model.vo:TaskVo' param_defaults='undefined' result_type='void'>
</method>
<method name='initPage' fullname='happymagic.display.view.task:TaskListView/private:initPage' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='selectFun' fullname='happymagic.display.view.task:TaskListView/private:selectFun' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='happymagic.display.view.task:TaskListItemView' param_defaults='undefined' result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.task:TaskListView/setData' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='taskChange' fullname='happymagic.display.view.task:TaskListView/private:taskChange' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:TaskEvent' param_defaults='undefined' result_type='void'>
</method>
<field name='currentPage' fullname='happymagic.display.view.task:TaskListView/currentPage' type='uint' isStatic='false' isConst='false' >
</field>
<field name='data' fullname='happymagic.display.view.task:TaskListView/private:data' type='Array' isStatic='false' isConst='false' >
</field>
<field name='layouter' fullname='happymagic.display.view.task:TaskListView/private:layouter' type='happymagic.display.view.task:TaskGridPageView' isStatic='false' isConst='false' >
</field>
<field name='pageLength' fullname='happymagic.display.view.task:TaskListView/pageLength' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='TaskInfoView' fullname='happymagic.display.view.task:TaskInfoView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\task\TaskInfoView.as' namespace='happymagic.display.view.task' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='TaskInfoView' fullname='happymagic.display.view.task:TaskInfoView/TaskInfoView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='canFinish' fullname='happymagic.display.view.task:TaskInfoView/private:canFinish' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='clear' fullname='happymagic.display.view.task:TaskInfoView/private:clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clickFun' fullname='happymagic.display.view.task:TaskInfoView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='closeMe' fullname='happymagic.display.view.task:TaskInfoView/closeMe' isStatic='false' isFinal='false' isOverride='true'  param_names='del' param_types='Boolean' param_defaults='true' result_type='void'>
</method>
<method name='finishTask_complete' fullname='happymagic.display.view.task:TaskInfoView/private:finishTask_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='finishTask' fullname='happymagic.display.view.task:TaskInfoView/private:finishTask' isStatic='false' isFinal='false' isOverride='false'  param_names='t_id' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='initCurrent' fullname='happymagic.display.view.task:TaskInfoView/private:initCurrent' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='nextTask' fullname='happymagic.display.view.task:TaskInfoView/private:nextTask' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='prevTask' fullname='happymagic.display.view.task:TaskInfoView/private:prevTask' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='removeTask' fullname='happymagic.display.view.task:TaskInfoView/private:removeTask' isStatic='false' isFinal='false' isOverride='false'  param_names='t_id' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.task:TaskInfoView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<field name='awardsMc' fullname='happymagic.display.view.task:TaskInfoView/private:awardsMc' type='happymagic.display.view.task:TaskNeedItemListView' isStatic='false' isConst='false' >
</field>
<field name='conditionsMc' fullname='happymagic.display.view.task:TaskInfoView/private:conditionsMc' type='happymagic.display.view.task:TaskNeedItemListView' isStatic='false' isConst='false' >
</field>
<field name='currentIndex' fullname='happymagic.display.view.task:TaskInfoView/private:currentIndex' type='uint' isStatic='false' isConst='false' >
</field>
<field name='datas' fullname='happymagic.display.view.task:TaskInfoView/private:datas' type='Array' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.task:TaskInfoView/private:iview' type='taskInfoUi' isStatic='false' isConst='false' >
</field>
<field name='npcFace' fullname='happymagic.display.view.task:TaskInfoView/private:npcFace' type='happyfish.display.view:IconView' isStatic='false' isConst='false' >
</field>
<classRec name='FinishTaskResultView' fullname='happymagic.display.view.task:FinishTaskResultView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\task\FinishTaskResultView.as' namespace='happymagic.display.view.task' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='FinishTaskResultView' fullname='happymagic.display.view.task:FinishTaskResultView/FinishTaskResultView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.task:FinishTaskResultView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='closeMe' fullname='happymagic.display.view.task:FinishTaskResultView/closeMe' isStatic='false' isFinal='false' isOverride='true'  param_names='del' param_types='Boolean' param_defaults='true' result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.task:FinishTaskResultView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happymagic.model.vo:TaskVo' param_defaults='undefined' result_type='void'>
</method>
<field name='awardsMc' fullname='happymagic.display.view.task:FinishTaskResultView/private:awardsMc' type='happymagic.display.view.task:TaskNeedItemListView' isStatic='false' isConst='false' >
</field>
<field name='data' fullname='happymagic.display.view.task:FinishTaskResultView/private:data' type='happymagic.model.vo:TaskVo' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.task:FinishTaskResultView/private:iview' type='finishTaskResultUi' isStatic='false' isConst='false' >
</field>
<field name='npcFace' fullname='happymagic.display.view.task:FinishTaskResultView/private:npcFace' type='happyfish.display.view:IconView' isStatic='false' isConst='false' >
</field>
<classRec name='TaskGridPageView' fullname='happymagic.display.view.task:TaskGridPageView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\task\TaskGridPageView.as' namespace='happymagic.display.view.task' access='public' baseclass='happyfish.display.ui:GridPage' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='TaskGridPageView' fullname='happymagic.display.view.task:TaskGridPageView/TaskGridPageView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview;_container' param_types='flash.display:MovieClip;flash.display:DisplayObjectContainer' param_defaults='undefined;undefined' result_type='*'>
</method>
<method name='createItem' fullname='happymagic.display.view.task:TaskGridPageView/protected:createItem' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='happyfish.display.ui:GridItem'>
</method>
<method name='itemSelectFun' fullname='happymagic.display.view.task:TaskGridPageView/protected:itemSelectFun' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='happyfish.display.ui.events:GridPageEvent' param_defaults='undefined' result_type='void'>
</method>
<classRec name='TaskNeedItemListView' fullname='happymagic.display.view.task:TaskNeedItemListView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\task\TaskNeedItemListView.as' namespace='happymagic.display.view.task' access='public' baseclass='happymagic.display.view.ui.defaultList:DefaultListView' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='TaskNeedItemListView' fullname='happymagic.display.view.task:TaskNeedItemListView/TaskNeedItemListView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview;_container;_pageLength' param_types='flash.display:MovieClip;flash.display:DisplayObjectContainer;uint' param_defaults='undefined;undefined;5' result_type='*'>
</method>
<method name='selectFun' fullname='happymagic.display.view.task:TaskNeedItemListView/private:selectFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<field name='selectItem' fullname='happymagic.display.view.task:TaskNeedItemListView/selectItem' type='happymagic.model.vo:ConditionVo' isStatic='false' isConst='false' >
</field>
<classRec name='RoomUpItemView' fullname='happymagic.display.view.roomUp:RoomUpItemView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\roomUp\RoomUpItemView.as' namespace='happymagic.display.view.roomUp' access='public' baseclass='happyfish.display.ui:GridItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='RoomUpItemView' fullname='happymagic.display.view.roomUp:RoomUpItemView/RoomUpItemView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.roomUp:RoomUpItemView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.roomUp:RoomUpItemView/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='data' fullname='happymagic.display.view.roomUp:RoomUpItemView/data' type='happymagic.model.vo:RoomSizeVo' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.roomUp:RoomUpItemView/private:iview' type='roomUpListItemUi' isStatic='false' isConst='false' >
</field>
<classRec name='RoomUpView' fullname='happymagic.display.view.roomUp:RoomUpView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\roomUp\RoomUpView.as' namespace='happymagic.display.view.roomUp' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='RoomUpView' fullname='happymagic.display.view.roomUp:RoomUpView/RoomUpView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.roomUp:RoomUpView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='roomUp_complete' fullname='happymagic.display.view.roomUp:RoomUpView/private:roomUp_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='roomUp' fullname='happymagic.display.view.roomUp:RoomUpView/roomUp' isStatic='false' isFinal='false' isOverride='false'  param_names='id;type' param_types='uint;uint' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.roomUp:RoomUpView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='setNextRoomSizeView' fullname='happymagic.display.view.roomUp:RoomUpView/private:setNextRoomSizeView' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happymagic.model.vo:RoomSizeVo' param_defaults='undefined' result_type='void'>
</method>
<field name='datas' fullname='happymagic.display.view.roomUp:RoomUpView/private:datas' type='Array' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.roomUp:RoomUpView/private:iview' type='roomUpUi' isStatic='false' isConst='false' >
</field>
<field name='list' fullname='happymagic.display.view.roomUp:RoomUpView/private:list' type='happymagic.display.view.ui.defaultList:DefaultListView' isStatic='false' isConst='false' >
</field>
<field name='needCrystalItem' fullname='happymagic.display.view.roomUp:RoomUpView/private:needCrystalItem' type='happymagic.display.view.ui:NeedCrystalLabelView' isStatic='false' isConst='false' >
</field>
<field name='needGemItem' fullname='happymagic.display.view.roomUp:RoomUpView/private:needGemItem' type='happymagic.display.view.ui:NeedCrystalLabelView' isStatic='false' isConst='false' >
</field>
<field name='nextRoomSize' fullname='happymagic.display.view.roomUp:RoomUpView/private:nextRoomSize' type='happymagic.model.vo:RoomSizeVo' isStatic='false' isConst='false' >
</field>
<classRec name='SwitchHistoryItemView' fullname='happymagic.display.view.switchCrystal:SwitchHistoryItemView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\switchCrystal\SwitchHistoryItemView.as' namespace='happymagic.display.view.switchCrystal' access='public' baseclass='happyfish.display.ui:GridItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='SwitchHistoryItemView' fullname='happymagic.display.view.switchCrystal:SwitchHistoryItemView/SwitchHistoryItemView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='*'>
</method>
<method name='setData' fullname='happymagic.display.view.switchCrystal:SwitchHistoryItemView/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='data' fullname='happymagic.display.view.switchCrystal:SwitchHistoryItemView/data' type='happymagic.model.vo:SwitchRecordVo' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.switchCrystal:SwitchHistoryItemView/private:iview' type='switchHistoryItemUi' isStatic='false' isConst='false' >
</field>
<classRec name='SwitchHistoryView' fullname='happymagic.display.view.switchCrystal:SwitchHistoryView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\switchCrystal\SwitchHistoryView.as' namespace='happymagic.display.view.switchCrystal' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='SwitchHistoryView' fullname='happymagic.display.view.switchCrystal:SwitchHistoryView/SwitchHistoryView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.switchCrystal:SwitchHistoryView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='getSwitch_complete' fullname='happymagic.display.view.switchCrystal:SwitchHistoryView/private:getSwitch_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='getSwitch' fullname='happymagic.display.view.switchCrystal:SwitchHistoryView/private:getSwitch' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.switchCrystal:SwitchHistoryView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happymagic.model.vo:SwitchVo' param_defaults='undefined' result_type='void'>
</method>
<field name='iview' fullname='happymagic.display.view.switchCrystal:SwitchHistoryView/private:iview' type='switchHistoryUi' isStatic='false' isConst='false' >
</field>
<field name='list' fullname='happymagic.display.view.switchCrystal:SwitchHistoryView/private:list' type='happymagic.display.view.switchCrystal:SwitchHistoryList' isStatic='false' isConst='false' >
</field>
<classRec name='SwitchView' fullname='happymagic.display.view.switchCrystal:SwitchView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\switchCrystal\SwitchView.as' namespace='happymagic.display.view.switchCrystal' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='SwitchView' fullname='happymagic.display.view.switchCrystal:SwitchView/SwitchView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.switchCrystal:SwitchView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.switchCrystal:SwitchView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value;user' param_types='happymagic.model.vo:SwitchVo;happymagic.model.vo:UserVo' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[value	对方水晶交换包数据

		 ]]></param>
<param><![CDATA[user	对方用户数据

		 ]]></param>
</method>
<method name='switchCrystal_complete' fullname='happymagic.display.view.switchCrystal:SwitchView/private:switchCrystal_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='switchCrystal' fullname='happymagic.display.view.switchCrystal:SwitchView/private:switchCrystal' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='data' fullname='happymagic.display.view.switchCrystal:SwitchView/data' type='happymagic.model.vo:SwitchVo' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.switchCrystal:SwitchView/private:iview' type='switchUi' isStatic='false' isConst='false' >
</field>
<field name='numSelecter' fullname='happymagic.display.view.switchCrystal:SwitchView/private:numSelecter' type='happyfish.display.ui:NumSelecterView' isStatic='false' isConst='false' >
</field>
<field name='userFace1' fullname='happymagic.display.view.switchCrystal:SwitchView/private:userFace1' type='happymagic.display.view.ui:UserFaceView' isStatic='false' isConst='false' >
</field>
<field name='userFace2' fullname='happymagic.display.view.switchCrystal:SwitchView/private:userFace2' type='happymagic.display.view.ui:UserFaceView' isStatic='false' isConst='false' >
</field>
<classRec name='PutSwitchView' fullname='happymagic.display.view.switchCrystal:PutSwitchView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\switchCrystal\PutSwitchView.as' namespace='happymagic.display.view.switchCrystal' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='PutSwitchView' fullname='happymagic.display.view.switchCrystal:PutSwitchView/PutSwitchView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.switchCrystal:PutSwitchView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='putCrystal_complete' fullname='happymagic.display.view.switchCrystal:PutSwitchView/private:putCrystal_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='putCrystal' fullname='happymagic.display.view.switchCrystal:PutSwitchView/private:putCrystal' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.switchCrystal:PutSwitchView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='switchVo;bagLevel' param_types='happymagic.model.vo:SwitchVo;uint' param_defaults='undefined;undefined' result_type='void'>
</method>
<field name='iview' fullname='happymagic.display.view.switchCrystal:PutSwitchView/private:iview' type='putCrystalUi' isStatic='false' isConst='false' >
</field>
<field name='numSelecter' fullname='happymagic.display.view.switchCrystal:PutSwitchView/private:numSelecter' type='happyfish.display.ui:NumSelecterView' isStatic='false' isConst='false' >
</field>
<classRec name='SwitchHistoryList' fullname='happymagic.display.view.switchCrystal:SwitchHistoryList' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\switchCrystal\SwitchHistoryList.as' namespace='happymagic.display.view.switchCrystal' access='public' baseclass='happyfish.display.ui:GridPage' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='SwitchHistoryList' fullname='happymagic.display.view.switchCrystal:SwitchHistoryList/SwitchHistoryList' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview;_container' param_types='flash.display:MovieClip;flash.display:DisplayObjectContainer' param_defaults='undefined;undefined' result_type='*'>
</method>
<method name='createItem' fullname='happymagic.display.view.switchCrystal:SwitchHistoryList/protected:createItem' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='happyfish.display.ui:GridItem'>
</method>
<classRec name='FriendsItemView' fullname='happymagic.display.view.friends:FriendsItemView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\friends\FriendsItemView.as' namespace='happymagic.display.view.friends' access='public' baseclass='happyfish.display.ui:GridItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='FriendsItemView' fullname='happymagic.display.view.friends:FriendsItemView/FriendsItemView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.friends:FriendsItemView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='outFun' fullname='happymagic.display.view.friends:FriendsItemView/private:outFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='overFun' fullname='happymagic.display.view.friends:FriendsItemView/private:overFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.friends:FriendsItemView/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='_index' fullname='happymagic.display.view.friends:FriendsItemView/private:_index' type='uint' isStatic='false' isConst='false' >
</field>
<field name='data' fullname='happymagic.display.view.friends:FriendsItemView/data' type='happymagic.model.vo:UserVo' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.friends:FriendsItemView/private:iview' type='friendItemUi' isStatic='false' isConst='false' >
</field>
<classRec name='FriendsView' fullname='happymagic.display.view.friends:FriendsView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\friends\FriendsView.as' namespace='happymagic.display.view.friends' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='FriendsView' fullname='happymagic.display.view.friends:FriendsView/FriendsView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='bodyAddToStage' fullname='happymagic.display.view.friends:FriendsView/private:bodyAddToStage' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='clickFun' fullname='happymagic.display.view.friends:FriendsView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='data_complete' fullname='happymagic.display.view.friends:FriendsView/private:data_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:FriendsEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='diyFinished' fullname='happymagic.display.view.friends:FriendsView/private:diyFinished' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:SceneEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='diyStart' fullname='happymagic.display.view.friends:FriendsView/private:diyStart' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:SceneEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='hideEvent' fullname='happymagic.display.view.friends:FriendsView/private:hideEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:FriendsEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='loadData' fullname='happymagic.display.view.friends:FriendsView/private:loadData' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='moduleClose' fullname='happymagic.display.view.friends:FriendsView/private:moduleClose' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happyfish.events:ModuleEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.friends:FriendsView/private:setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='showEvent' fullname='happymagic.display.view.friends:FriendsView/private:showEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:FriendsEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='showMagicClass' fullname='happymagic.display.view.friends:FriendsView/private:showMagicClass' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:MagicClassBookEvent' param_defaults='undefined' result_type='void'>
</method>
<field name='data' fullname='happymagic.display.view.friends:FriendsView/private:data' type='Array' isStatic='false' isConst='false' >
</field>
<field name='friendList' fullname='happymagic.display.view.friends:FriendsView/private:friendList' type='happymagic.display.view.friends:FriendsListView' isStatic='false' isConst='false' >
</field>
<classRec name='FriendsListView' fullname='happymagic.display.view.friends:FriendsListView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\friends\FriendsListView.as' namespace='happymagic.display.view.friends' access='public' baseclass='happyfish.display.ui:GridPage' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='FriendsListView' fullname='happymagic.display.view.friends:FriendsListView/FriendsListView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview;_container' param_types='flash.display:MovieClip;flash.display:DisplayObjectContainer' param_defaults='undefined;undefined' result_type='*'>
</method>
<method name='createItem' fullname='happymagic.display.view.friends:FriendsListView/protected:createItem' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='happyfish.display.ui:GridItem'>
</method>
<classRec name='DiaryListItemView' fullname='happymagic.display.view.diary:DiaryListItemView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\diary\DiaryListItemView.as' namespace='happymagic.display.view.diary' access='public' baseclass='happyfish.display.ui:GridItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='DiaryListItemView' fullname='happymagic.display.view.diary:DiaryListItemView/DiaryListItemView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='*'>
</method>
<method name='setData' fullname='happymagic.display.view.diary:DiaryListItemView/setData' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='data' fullname='happymagic.display.view.diary:DiaryListItemView/private:data' type='happymagic.model.vo:DiaryVo' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.diary:DiaryListItemView/private:iview' type='diaryListItemUi' isStatic='false' isConst='false' >
</field>
<classRec name='DiaryView' fullname='happymagic.display.view.diary:DiaryView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\diary\DiaryView.as' namespace='happymagic.display.view.diary' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='DiaryView' fullname='happymagic.display.view.diary:DiaryView/DiaryView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.diary:DiaryView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='diaryAdded' fullname='happymagic.display.view.diary:DiaryView/private:diaryAdded' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:DiaryEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='tab_select' fullname='happymagic.display.view.diary:DiaryView/private:tab_select' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<field name='iview' fullname='happymagic.display.view.diary:DiaryView/private:iview' type='diaryUi' isStatic='false' isConst='false' >
</field>
<field name='list' fullname='happymagic.display.view.diary:DiaryView/private:list' type='happymagic.display.view.diary:DiaryListView' isStatic='false' isConst='false' >
</field>
<field name='tab' fullname='happymagic.display.view.diary:DiaryView/private:tab' type='happyfish.display.ui:TabelView' isStatic='false' isConst='false' >
</field>
<classRec name='DiaryListView' fullname='happymagic.display.view.diary:DiaryListView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\diary\DiaryListView.as' namespace='happymagic.display.view.diary' access='public' baseclass='happyfish.display.ui:GridPage' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='DiaryListView' fullname='happymagic.display.view.diary:DiaryListView/DiaryListView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview;_container' param_types='flash.display:MovieClip;flash.display:DisplayObjectContainer' param_defaults='undefined;undefined' result_type='*'>
</method>
<method name='createItem' fullname='happymagic.display.view.diary:DiaryListView/protected:createItem' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='happyfish.display.ui:GridItem'>
</method>
<classRec name='MagicItemRender' fullname='happymagic.display.view.magic:MagicItemRender' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magic\MagicItemRender.as' namespace='happymagic.display.view.magic' access='public' baseclass='happyfish.display.view:ItemRender' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='MagicItemRender' fullname='happymagic.display.view.magic:MagicItemRender/MagicItemRender' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.magic:MagicItemRender/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='data' fullname='happymagic.display.view.magic:MagicItemRender/data/set' isStatic='false' isFinal='false' isOverride='true'  param_names='$data' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='_iview' fullname='happymagic.display.view.magic:MagicItemRender/private:_iview' type='ui_allmagic' isStatic='false' isConst='false' >
</field>
<field name='asset' fullname='happymagic.display.view.magic:MagicItemRender/protected:asset' type='happyfish.cacher:CacheSprite' isStatic='false' isConst='false' >
</field>
<classRec name='MagicItemList' fullname='happymagic.display.view.magic:MagicItemList' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\magic\MagicItemList.as' namespace='happymagic.display.view.magic' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='MagicItemList' fullname='happymagic.display.view.magic:MagicItemList/MagicItemList' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='addToStage' fullname='happymagic.display.view.magic:MagicItemList/private:addToStage' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='clickFun' fullname='happymagic.display.view.magic:MagicItemList/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='getItemByMid' fullname='happymagic.display.view.magic:MagicItemList/getItemByMid' isStatic='false' isFinal='false' isOverride='false'  param_names='mid' param_types='uint' param_defaults='undefined' result_type='happymagic.display.view.magic:MagicItemRender'>
</method>
<field name='_iview' fullname='happymagic.display.view.magic:MagicItemList/private:_iview' type='ui_allmagicmenu' isStatic='false' isConst='false' >
</field>
<field name='page_list' fullname='happymagic.display.view.magic:MagicItemList/page_list' type='happyfish.display.view:PageList' isStatic='false' isConst='false' >
</field>
<classRec name='AbstractLayoutAlgorithm' fullname='xrope.algorithms:AbstractLayoutAlgorithm' sourcefile='E:\work\happyMagic\src\client\libs\xrope\algorithms\AbstractLayoutAlgorithm.as' namespace='xrope.algorithms' access='public' baseclass='Object' interfaces='xrope:ILayoutAlgorithm' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Abstract class for layout Algorithm.
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</classRec>
<method name='beReady' fullname='xrope.algorithms:AbstractLayoutAlgorithm/beReady' isStatic='false' isFinal='false' isOverride='false'  param_names='group;valueKey;sizeKey;startValue;gap' param_types='xrope:ILayoutGroup;String;String;Number;Number' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ 
         Be ready  for the layout value calculation.
         ]]></description>
<param><![CDATA[group         Layout group target.
         ]]></param>
<param><![CDATA[valueKey      "x" or "y".
         ]]></param>
<param><![CDATA[sizeKey       "width" or "height".
         ]]></param>
<param><![CDATA[startValue    Value of the first element.
         ]]></param>
<param><![CDATA[gap           Gap between the elements in the group.
         ]]></param>
</method>
<method name='calculate' fullname='xrope.algorithms:AbstractLayoutAlgorithm/calculate' isStatic='false' isFinal='false' isOverride='false'  param_names='currentElement;previousElement' param_types='xrope:ILayoutElement;xrope:ILayoutElement' param_defaults='undefined;null' result_type='Number'>
<description><![CDATA[ 
         Calculate the layout value.
         ]]></description>
<param><![CDATA[currentElement    Current element in the calculation.
         ]]></param>
<param><![CDATA[previousElement   Previous element in the group.
         ]]></param>
</method>
<method name='sizeOf' fullname='xrope.algorithms:AbstractLayoutAlgorithm/protected:sizeOf' isStatic='false' isFinal='false' isOverride='false'  param_names='target' param_types='xrope:ILayoutElement' param_defaults='undefined' result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='valueOf' fullname='xrope.algorithms:AbstractLayoutAlgorithm/protected:valueOf' isStatic='false' isFinal='false' isOverride='false'  param_names='target' param_types='xrope:ILayoutElement' param_defaults='undefined' result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='gap' fullname='xrope.algorithms:AbstractLayoutAlgorithm/protected:gap' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='group' fullname='xrope.algorithms:AbstractLayoutAlgorithm/protected:group' type='xrope:ILayoutGroup' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='sizeKey' fullname='xrope.algorithms:AbstractLayoutAlgorithm/protected:sizeKey' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='startValue' fullname='xrope.algorithms:AbstractLayoutAlgorithm/protected:startValue' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='valueKey' fullname='xrope.algorithms:AbstractLayoutAlgorithm/protected:valueKey' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='ForwardAlgorithm' fullname='xrope.algorithms:ForwardAlgorithm' sourcefile='E:\work\happyMagic\src\client\libs\xrope\algorithms\ForwardAlgorithm.as' namespace='xrope.algorithms' access='public' baseclass='xrope.algorithms:AbstractLayoutAlgorithm' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Algorithm for forward element value.
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</classRec>
<method name='calculate' fullname='xrope.algorithms:ForwardAlgorithm/calculate' isStatic='false' isFinal='false' isOverride='true'  param_names='currentElement;previousElement' param_types='xrope:ILayoutElement;xrope:ILayoutElement' param_defaults='undefined;null' result_type='Number'>
<description><![CDATA[  
         Calculate the layout value.
         ]]></description>
<param><![CDATA[currentElement    Current element in the calculation.
         ]]></param>
<param><![CDATA[previousElement   Previous element in the group.
         ]]></param>
</method>
<classRec name='BackwardAlgorithm' fullname='xrope.algorithms:BackwardAlgorithm' sourcefile='E:\work\happyMagic\src\client\libs\xrope\algorithms\BackwardAlgorithm.as' namespace='xrope.algorithms' access='public' baseclass='xrope.algorithms:AbstractLayoutAlgorithm' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Algorithm for backward element value.
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</classRec>
<method name='calculate' fullname='xrope.algorithms:BackwardAlgorithm/calculate' isStatic='false' isFinal='false' isOverride='true'  param_names='currentElement;previousElement' param_types='xrope:ILayoutElement;xrope:ILayoutElement' param_defaults='undefined;null' result_type='Number'>
<description><![CDATA[  
         Calculate the layout value.
         ]]></description>
<param><![CDATA[currentElement    Current element in the calculation.
         ]]></param>
<param><![CDATA[previousElement   Previous element in the group.
         ]]></param>
</method>
<classRec name='MaxAlgorithm' fullname='xrope.algorithms:MaxAlgorithm' sourcefile='E:\work\happyMagic\src\client\libs\xrope\algorithms\MaxAlgorithm.as' namespace='xrope.algorithms' access='public' baseclass='xrope.algorithms:AbstractLayoutAlgorithm' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Algorithm for max element value.
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</classRec>
<method name='calculate' fullname='xrope.algorithms:MaxAlgorithm/calculate' isStatic='false' isFinal='false' isOverride='true'  param_names='currentElement;previousElement' param_types='xrope:ILayoutElement;xrope:ILayoutElement' param_defaults='undefined;null' result_type='Number'>
<description><![CDATA[  
         Calculate the layout value.
         ]]></description>
<param><![CDATA[currentElement    Current element in the calculation.
         ]]></param>
<param><![CDATA[previousElement   Previous element in the group.
         ]]></param>
</method>
<classRec name='CenterAlgorithm' fullname='xrope.algorithms:CenterAlgorithm' sourcefile='E:\work\happyMagic\src\client\libs\xrope\algorithms\CenterAlgorithm.as' namespace='xrope.algorithms' access='public' baseclass='xrope.algorithms:AbstractLayoutAlgorithm' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Algorithm for center element value.
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</classRec>
<method name='calculate' fullname='xrope.algorithms:CenterAlgorithm/calculate' isStatic='false' isFinal='false' isOverride='true'  param_names='currentElement;previousElement' param_types='xrope:ILayoutElement;xrope:ILayoutElement' param_defaults='undefined;null' result_type='Number'>
<description><![CDATA[  
         Calculate the layout value.
         ]]></description>
<param><![CDATA[currentElement    Current element in the calculation.
         ]]></param>
<param><![CDATA[previousElement   Previous element in the group.
         ]]></param>
</method>
<classRec name='MinAlgorithm' fullname='xrope.algorithms:MinAlgorithm' sourcefile='E:\work\happyMagic\src\client\libs\xrope\algorithms\MinAlgorithm.as' namespace='xrope.algorithms' access='public' baseclass='xrope.algorithms:AbstractLayoutAlgorithm' isFinal='false' isDynamic='false' >
<description><![CDATA[
     Algorithm for min element value.
     ]]></description>
<author><![CDATA[eidiot
     ]]></author>
</classRec>
<method name='calculate' fullname='xrope.algorithms:MinAlgorithm/calculate' isStatic='false' isFinal='false' isOverride='true'  param_names='currentElement;previousElement' param_types='xrope:ILayoutElement;xrope:ILayoutElement' param_defaults='undefined;null' result_type='Number'>
<description><![CDATA[  
         Calculate the layout value.
         ]]></description>
<param><![CDATA[currentElement    Current element in the calculation.
         ]]></param>
<param><![CDATA[previousElement   Previous element in the group.
         ]]></param>
</method>
<classRec name='initStaticCommand' fullname='happymagic.model.command:initStaticCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\initStaticCommand.as' namespace='happymagic.model.command' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 初始静态信息

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='initStaticCommand' fullname='happymagic.model.command:initStaticCommand/initStaticCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='load_complete' fullname='happymagic.model.command:initStaticCommand/private:load_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='load' fullname='happymagic.model.command:initStaticCommand/load' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<classRec name='BaseDataCommand' fullname='happymagic.model.command:BaseDataCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\BaseDataCommand.as' namespace='happymagic.model.command' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
<metadata>
	<Event owner='happymagic.model.command:BaseDataCommand' name='complete' type='flash.events.Event' >
	</Event>
</metadata>
</classRec>
<method name='BaseDataCommand' fullname='happymagic.model.command:BaseDataCommand/BaseDataCommand' isStatic='false' isFinal='false' isOverride='false'  param_names='_callBack' param_types='Function' param_defaults='null' result_type='*'>
</method>
<method name='commandComplete' fullname='happymagic.model.command:BaseDataCommand/commandComplete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='createLoad' fullname='happymagic.model.command:BaseDataCommand/protected:createLoad' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='createRequest' fullname='happymagic.model.command:BaseDataCommand/protected:createRequest' isStatic='false' isFinal='false' isOverride='false'  param_names='url;data;method' param_types='String;Object;String' param_defaults='undefined;null;POST' result_type='void'>
</method>
<method name='load_complete' fullname='happymagic.model.command:BaseDataCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<field name='callBack' fullname='happymagic.model.command:BaseDataCommand/protected:callBack' type='Function' isStatic='false' isConst='false' >
</field>
<field name='data' fullname='happymagic.model.command:BaseDataCommand/data' type='Object' isStatic='false' isConst='false' >
</field>
<field name='loader' fullname='happymagic.model.command:BaseDataCommand/protected:loader' type='happymagic.model:MagicUrlLoader' isStatic='false' isConst='false' >
</field>
<field name='objdata' fullname='happymagic.model.command:BaseDataCommand/protected:objdata' type='Object' isStatic='false' isConst='false' >
</field>
<field name='piaoMsg' fullname='happymagic.model.command:BaseDataCommand/piaoMsg' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='piaoPoint' fullname='happymagic.model.command:BaseDataCommand/piaoPoint' type='flash.geom:Point' isStatic='false' isConst='false' >
</field>
<field name='request' fullname='happymagic.model.command:BaseDataCommand/protected:request' type='flash.net:URLRequest' isStatic='false' isConst='false' >
</field>
<field name='takeResult' fullname='happymagic.model.command:BaseDataCommand/takeResult' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<classRec name='initCommand' fullname='happymagic.model.command:initCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\initCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 场景,用户信息初始化

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='initCommand' fullname='happymagic.model.command:initCommand/initCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='load_complete' fullname='happymagic.model.command:initCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='load' fullname='happymagic.model.command:initCommand/load' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<classRec name='UseItemCommand' fullname='happymagic.model.command:UseItemCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\UseItemCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='UseItemCommand' fullname='happymagic.model.command:UseItemCommand/UseItemCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='load_complete' fullname='happymagic.model.command:UseItemCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='useItem' fullname='happymagic.model.command:UseItemCommand/useItem' isStatic='false' isFinal='false' isOverride='false'  param_names='itemId' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<classRec name='LoadUserInfoCommand' fullname='happymagic.model.command:LoadUserInfoCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\LoadUserInfoCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='LoadUserInfoCommand' fullname='happymagic.model.command:LoadUserInfoCommand/LoadUserInfoCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='load_complete' fullname='happymagic.model.command:LoadUserInfoCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='load' fullname='happymagic.model.command:LoadUserInfoCommand/load' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<classRec name='getSwitchCommand' fullname='happymagic.model.command:getSwitchCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\getSwitchCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='getSwitchCommand' fullname='happymagic.model.command:getSwitchCommand/getSwitchCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='getSwitch' fullname='happymagic.model.command:getSwitchCommand/getSwitch' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='load_complete' fullname='happymagic.model.command:getSwitchCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<classRec name='LoadFriendsCommand' fullname='happymagic.model.command:LoadFriendsCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\LoadFriendsCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='LoadFriendsCommand' fullname='happymagic.model.command:LoadFriendsCommand/LoadFriendsCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='loadFriend' fullname='happymagic.model.command:LoadFriendsCommand/loadFriend' isStatic='false' isFinal='false' isOverride='false'  param_names='pageIndex;pageSize' param_types='uint;uint' param_defaults='1;1000' result_type='void'>
</method>
<method name='load_complete' fullname='happymagic.model.command:LoadFriendsCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<classRec name='enterEditCommand' fullname='happymagic.model.command:enterEditCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\enterEditCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='enterEditCommand' fullname='happymagic.model.command:enterEditCommand/enterEditCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='load_complete' fullname='happymagic.model.command:enterEditCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='load' fullname='happymagic.model.command:enterEditCommand/load' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<classRec name='leaveEditCommand' fullname='happymagic.model.command:leaveEditCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\leaveEditCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='leaveEditCommand' fullname='happymagic.model.command:leaveEditCommand/leaveEditCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='load_complete' fullname='happymagic.model.command:leaveEditCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='load' fullname='happymagic.model.command:leaveEditCommand/load' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<classRec name='SwitchCrystalCommand' fullname='happymagic.model.command:SwitchCrystalCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\SwitchCrystalCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='SwitchCrystalCommand' fullname='happymagic.model.command:SwitchCrystalCommand/SwitchCrystalCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='load_complete' fullname='happymagic.model.command:SwitchCrystalCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='switchCrystal' fullname='happymagic.model.command:SwitchCrystalCommand/switchCrystal' isStatic='false' isFinal='false' isOverride='false'  param_names='num;type;uid' param_types='uint;uint;String' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[num

		 ]]></param>
<param><![CDATA[type	对方水晶的类别

		 ]]></param>
<param><![CDATA[uid		对方的uid

		 ]]></param>
</method>
<classRec name='PutSwitchCommand' fullname='happymagic.model.command:PutSwitchCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\PutSwitchCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='PutSwitchCommand' fullname='happymagic.model.command:PutSwitchCommand/PutSwitchCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='load_complete' fullname='happymagic.model.command:PutSwitchCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='put' fullname='happymagic.model.command:PutSwitchCommand/put' isStatic='false' isFinal='false' isOverride='false'  param_names='num' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<field name='curNum' fullname='happymagic.model.command:PutSwitchCommand/curNum' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='UnLockSceneCommand' fullname='happymagic.model.command:UnLockSceneCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\UnLockSceneCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='UnLockSceneCommand' fullname='happymagic.model.command:UnLockSceneCommand/UnLockSceneCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='load_complete' fullname='happymagic.model.command:UnLockSceneCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='unLockScene' fullname='happymagic.model.command:UnLockSceneCommand/unLockScene' isStatic='false' isFinal='false' isOverride='false'  param_names='sceneId;type' param_types='uint;uint' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 解锁场景

		 ]]></description>
<param><![CDATA[sceneId

		 ]]></param>
<param><![CDATA[type	1:水晶解锁  2:宝石解锁

		 ]]></param>
</method>
<classRec name='MoveSceneCommand' fullname='happymagic.model.command:MoveSceneCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\MoveSceneCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MoveSceneCommand' fullname='happymagic.model.command:MoveSceneCommand/MoveSceneCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='load_complete' fullname='happymagic.model.command:MoveSceneCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='moveScene' fullname='happymagic.model.command:MoveSceneCommand/moveScene' isStatic='false' isFinal='false' isOverride='false'  param_names='sceneId' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<classRec name='ChangeMagicTypeCommand' fullname='happymagic.model.command:ChangeMagicTypeCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\ChangeMagicTypeCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ChangeMagicTypeCommand' fullname='happymagic.model.command:ChangeMagicTypeCommand/ChangeMagicTypeCommand' isStatic='false' isFinal='false' isOverride='false'  param_names='_callBack' param_types='Function' param_defaults='null' result_type='*'>
</method>
<method name='change' fullname='happymagic.model.command:ChangeMagicTypeCommand/change' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='load_complete' fullname='happymagic.model.command:ChangeMagicTypeCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<classRec name='FriendsHomeCommand' fullname='happymagic.model.command:FriendsHomeCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\FriendsHomeCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='FriendsHomeCommand' fullname='happymagic.model.command:FriendsHomeCommand/FriendsHomeCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='load_complete' fullname='happymagic.model.command:FriendsHomeCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='load' fullname='happymagic.model.command:FriendsHomeCommand/load' isStatic='false' isFinal='false' isOverride='false'  param_names='$uid' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<classRec name='ClickDoorCommand' fullname='happymagic.model.command:ClickDoorCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\ClickDoorCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='ClickDoorCommand' fullname='happymagic.model.command:ClickDoorCommand/ClickDoorCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='load_complete' fullname='happymagic.model.command:ClickDoorCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='load' fullname='happymagic.model.command:ClickDoorCommand/load' isStatic='false' isFinal='false' isOverride='false'  param_names='$door' param_types='happymagic.scene.world.grid.item:Door' param_defaults='undefined' result_type='void'>
</method>
<field name='door' fullname='happymagic.model.command:ClickDoorCommand/private:door' type='happymagic.scene.world.grid.item:Door' isStatic='false' isConst='false' >
</field>
<classRec name='FinishTaskCommand' fullname='happymagic.model.command:FinishTaskCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\FinishTaskCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='FinishTaskCommand' fullname='happymagic.model.command:FinishTaskCommand/FinishTaskCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='finish' fullname='happymagic.model.command:FinishTaskCommand/finish' isStatic='false' isFinal='false' isOverride='false'  param_names='t_id' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='load_complete' fullname='happymagic.model.command:FinishTaskCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<classRec name='RoomUpgradeCommand' fullname='happymagic.model.command:RoomUpgradeCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\RoomUpgradeCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='RoomUpgradeCommand' fullname='happymagic.model.command:RoomUpgradeCommand/RoomUpgradeCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='load_complete' fullname='happymagic.model.command:RoomUpgradeCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='upgrade' fullname='happymagic.model.command:RoomUpgradeCommand/upgrade' isStatic='false' isFinal='false' isOverride='false'  param_names='id;type' param_types='uint;uint' param_defaults='undefined;undefined' result_type='void'>
</method>
<classRec name='BuyItemCommand' fullname='happymagic.model.command:BuyItemCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\BuyItemCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='BuyItemCommand' fullname='happymagic.model.command:BuyItemCommand/BuyItemCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='buyItem' fullname='happymagic.model.command:BuyItemCommand/buyItem' isStatic='false' isFinal='false' isOverride='false'  param_names='i_id;num' param_types='uint;uint' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='load_complete' fullname='happymagic.model.command:BuyItemCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<classRec name='InterruptCommand' fullname='happymagic.model.command:InterruptCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\InterruptCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='InterruptCommand' fullname='happymagic.model.command:InterruptCommand/InterruptCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='load_complete' fullname='happymagic.model.command:InterruptCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='load' fullname='happymagic.model.command:InterruptCommand/load' isStatic='false' isFinal='false' isOverride='false'  param_names='$decor_ids' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<field name='decorIds' fullname='happymagic.model.command:InterruptCommand/private:decorIds' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<classRec name='PickupCommand' fullname='happymagic.model.command:PickupCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\PickupCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='PickupCommand' fullname='happymagic.model.command:PickupCommand/PickupCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='load_complete' fullname='happymagic.model.command:PickupCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='load' fullname='happymagic.model.command:PickupCommand/load' isStatic='false' isFinal='false' isOverride='false'  param_names='$decor_ids' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<field name='decorIds' fullname='happymagic.model.command:PickupCommand/private:decorIds' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<classRec name='StudyMagicCommand' fullname='happymagic.model.command:StudyMagicCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\StudyMagicCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='load_complete' fullname='happymagic.model.command:StudyMagicCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='load' fullname='happymagic.model.command:StudyMagicCommand/load' isStatic='false' isFinal='false' isOverride='false'  param_names='$student;$magic_id' param_types='happymagic.scene.world.grid.person:Student;int' param_defaults='undefined;undefined' result_type='void'>
</method>
<field name='decor_id' fullname='happymagic.model.command:StudyMagicCommand/decor_id' type='int' isStatic='false' isConst='false' >
</field>
<field name='magic_id' fullname='happymagic.model.command:StudyMagicCommand/magic_id' type='int' isStatic='false' isConst='false' >
</field>
<field name='student' fullname='happymagic.model.command:StudyMagicCommand/student' type='happymagic.scene.world.grid.person:Student' isStatic='false' isConst='false' >
</field>
<classRec name='KillEnemyCommand' fullname='happymagic.model.command:KillEnemyCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\KillEnemyCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='KillEnemyCommand' fullname='happymagic.model.command:KillEnemyCommand/KillEnemyCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='kill' fullname='happymagic.model.command:KillEnemyCommand/kill' isStatic='false' isFinal='false' isOverride='false'  param_names='enemyId' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='load_complete' fullname='happymagic.model.command:KillEnemyCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<classRec name='LearnTransCommand' fullname='happymagic.model.command:LearnTransCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\LearnTransCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='LearnTransCommand' fullname='happymagic.model.command:LearnTransCommand/LearnTransCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='learn' fullname='happymagic.model.command:LearnTransCommand/learn' isStatic='false' isFinal='false' isOverride='false'  param_names='trans_mid' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='load_complete' fullname='happymagic.model.command:LearnTransCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<classRec name='LearnMagicClassCommand' fullname='happymagic.model.command:LearnMagicClassCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\LearnMagicClassCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='LearnMagicClassCommand' fullname='happymagic.model.command:LearnMagicClassCommand/LearnMagicClassCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='learn' fullname='happymagic.model.command:LearnMagicClassCommand/learn' isStatic='false' isFinal='false' isOverride='false'  param_names='magic_id' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='load_complete' fullname='happymagic.model.command:LearnMagicClassCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<classRec name='MixCommand' fullname='happymagic.model.command:MixCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\MixCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MixCommand' fullname='happymagic.model.command:MixCommand/MixCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='load_complete' fullname='happymagic.model.command:MixCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='mix' fullname='happymagic.model.command:MixCommand/mix' isStatic='false' isFinal='false' isOverride='false'  param_names='mix_mid;nums' param_types='uint;uint' param_defaults='undefined;undefined' result_type='void'>
</method>
<classRec name='ShareFeedCommand' fullname='happymagic.model.command:ShareFeedCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\ShareFeedCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='ShareFeedCommand' fullname='happymagic.model.command:ShareFeedCommand/ShareFeedCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='load_complete' fullname='happymagic.model.command:ShareFeedCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='share' fullname='happymagic.model.command:ShareFeedCommand/share' isStatic='false' isFinal='false' isOverride='false'  param_names='_feed' param_types='happymagic.model.vo:FeedVo' param_defaults='undefined' result_type='void'>
</method>
<field name='feed' fullname='happymagic.model.command:ShareFeedCommand/private:feed' type='happymagic.model.vo:FeedVo' isStatic='false' isConst='false' >
</field>
<classRec name='UseTransCommand' fullname='happymagic.model.command:UseTransCommand' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\command\UseTransCommand.as' namespace='happymagic.model.command' access='public' baseclass='happymagic.model.command:BaseDataCommand' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='UseTransCommand' fullname='happymagic.model.command:UseTransCommand/UseTransCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='load_complete' fullname='happymagic.model.command:UseTransCommand/protected:load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='useTrans' fullname='happymagic.model.command:UseTransCommand/useTrans' isStatic='false' isFinal='false' isOverride='false'  param_names='trans_mid;uid' param_types='uint;String' param_defaults='undefined;undefined' result_type='void'>
</method>
<classRec name='LoadingItem' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem' sourcefile='E:\work\happyMagic\src\client\libs\br\com\stimuli\loading\loadingtypes\LoadingItem.as' namespace='br.com.stimuli.loading.loadingtypes' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[
      An class used in <code>BulkLoader</code> instances.<p/>.
      A reference to a <code>LoadingItem</code> object can be used to attach events for an individual item, read it's id, type, content and urls from inside event handlers.
      When implementing custom loading types, the new type should be a subclass of LoadingItem.
      This class is just the base for specific loading types, but should provide the external interface for end users.
      ]]></description>
<author><![CDATA[Arthur Debert
      ]]></author>
<langversion><![CDATA[ActionScript 3.0
      ]]></langversion>
<playerversion><![CDATA[Flash 9.0
          ]]></playerversion>
<since><![CDATA[15.09.2007
    ]]></since>
<metadata>
	<Event owner='br.com.stimuli.loading.loadingtypes:LoadingItem' name='canBeginPlaying' type='br.com.stimuli.loading.BulkLoader' >
<description><![CDATA[
      Dispatched when the the netStream can be played until the end with no interuption expected. Only fires for TYPE_VIDEO items and will only fire once.
           ]]></description>
<eventType><![CDATA[br.com.stimuli.loading.BulkLoader.CAN_BEGIN_PLAYING
     ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='br.com.stimuli.loading.loadingtypes:LoadingItem' name='init' type='flash.events.Event' >
<description><![CDATA[
      Dispatched when the ImageItem (swf or image) has inited.
           ]]></description>
<eventType><![CDATA[flash.events.Event.INIT
     ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='br.com.stimuli.loading.loadingtypes:LoadingItem' name='open' type='flash.events.Event' >
<description><![CDATA[
      Dispatched when the connection has been stablished and the download has begun. For types that can be streamed such as videos (<code>NetStream</code>) and sound(<code>Sound</code>), it's content is will be available after this event has fired.
           ]]></description>
<eventType><![CDATA[flash.events.Event.OPEN
     ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='br.com.stimuli.loading.loadingtypes:LoadingItem' name='complete' type='flash.events.Event' >
<description><![CDATA[
      Dispatched when all the item has been fully downloaded and is ready for use..
           ]]></description>
<eventType><![CDATA[flash.events.ProgressEvent.COMPLETE
     ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='br.com.stimuli.loading.loadingtypes:LoadingItem' name='progress' type='flash.events.ProgressEvent' >
<description><![CDATA[ 
      Dispatched on download progress.
           ]]></description>
<eventType><![CDATA[flash.events.ProgressEvent.PROGRESS
     ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='LoadingItem' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/LoadingItem' isStatic='false' isFinal='false' isOverride='false'  param_names='url;type;_uid' param_types='flash.net:URLRequest;String;String' param_defaults='undefined;undefined;undefined' result_type='*'>
</method>
<method name='_createErrorEvent' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_createErrorEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='Error' param_defaults='undefined' result_type='flash.events:ErrorEvent'>
<description><![CDATA[ private
        ]]></description>
</method>
<method name='_dispatchErrorEvent' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_dispatchErrorEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='flash.events:ErrorEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_parseOptions' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_parseOptions' isStatic='false' isFinal='false' isOverride='false'  param_names='props' param_types='Object' param_defaults='undefined' result_type='Array'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='cleanListeners' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/cleanListeners' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='destroy' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/destroy' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getStats' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/getStats' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ Returns a string with time stats for this loading item.
        ]]></description>
</method>
<method name='isImage' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/isImage' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Returns true if content is of type image.
        ]]></description>
</method>
<method name='isLoader' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/isLoader' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Returns true if uses a Loader instance internally. (such as swfs and images).
        ]]></description>
</method>
<method name='isSWF' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/isSWF' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Returns true if content is of type movieclip.
        ]]></description>
</method>
<method name='isSound' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/isSound' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Returns true if content is of type sound.
        ]]></description>
</method>
<method name='isStreamable' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/isStreamable' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Returns true if this loading type should allow it's  content  to be accessed as soon as the server response starts. Should be true for sound and video types.
        ]]></description>
</method>
<method name='isText' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/isText' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Returns true if content is of type text.
        ]]></description>
</method>
<method name='isVideo' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/isVideo' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Returns true if content is of type video.
        ]]></description>
</method>
<method name='isXML' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/isXML' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Returns true if content is of type xml.
        ]]></description>
</method>
<method name='load' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/load' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onCompleteHandler' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/onCompleteHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onErrorHandler' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/onErrorHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='flash.events:ErrorEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onHttpStatusHandler' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/onHttpStatusHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='flash.events:HTTPStatusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onProgressHandler' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/onProgressHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='*' param_defaults='undefined' result_type='void'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onSecurityErrorHandler' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/onSecurityErrorHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:ErrorEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
          ]]></description>
<param><![CDATA[A SecurityErrorEvent.
        ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='onStartedHandler' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/onStartedHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='stop' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/stop' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='toString' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<method name='addedTime' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/addedTime/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='bytesLoaded' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/bytesLoaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='bytesRemaining' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/bytesRemaining/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='bytesTotal' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/bytesTotal/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Public accessors
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='content' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/content/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ The content resulting from this download. The data type for the <code>content</code> depends on the myme-type of the downloaded asset. For types that can be streamed such as videos (<code>NetStream</code>) and sound(<code>Sound</code>), it's content is available as soon as the connection is open. Otherwiser the content will be available after the download is done and the <code>Event.COMPLETE</code> is fired.
          ]]></description>
<return><![CDATA[An object whose type depends on what the asset is.
        ]]></return>
</method>
<method name='hostName' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/hostName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ The hostname, as a string for this item's URL. If no hostname is specified, then an empty string is returned
		]]></description>
</method>
<method name='httpStatus' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/httpStatus/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ The httpStatus of the LoadingItem, as in int (0 if no status has been received).
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='humanFiriendlySize' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/humanFiriendlySize/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='id' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/id/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ The id this item was assigned. This is use in all of BulkLoader.getXXX(key) functions
        ]]></description>
</method>
<method name='isLoaded' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/isLoaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ A Boolean that indicates if the item is fully loaded and ready for consumption.
        ]]></description>
</method>
<method name='latency' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/latency/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ The time (in seconds) that the server took and send begin streaming content.
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='percentLoaded' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/percentLoaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='priority' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/priority/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ The priority at which this item will be downloaded. Items with a higher priority will be downloaded first.
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='responseTime' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/responseTime/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='speed' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/speed/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ The speed (in kbs) for this download.
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='startTime' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/startTime/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='timeToDownload' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/timeToDownload/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ The total time (in seconds) this item took to load.
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='totalTime' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/totalTime/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='type' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ The type of this item.
          ]]></description>
<see><![CDATA[BulkLoader.AVAILABLE_EXTENSIONS
        ]]></see>
</method>
<method name='weightPercentLoaded' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/weightPercentLoaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='STATUS_ERROR' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/STATUS_ERROR' type='String' isStatic='true' isConst='true' defaultValue='error' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='STATUS_FINISHED' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/STATUS_FINISHED' type='String' isStatic='true' isConst='true' defaultValue='finished' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='STATUS_STARTED' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/STATUS_STARTED' type='String' isStatic='true' isConst='true' defaultValue='started' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='STATUS_STOPPED' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/STATUS_STOPPED' type='String' isStatic='true' isConst='true' defaultValue='stopped' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_addedTime' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_addedTime' type='int' isStatic='false' isConst='false' >
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_additionIndex' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_additionIndex' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bytesLoaded' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_bytesLoaded' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[the number of bytes loaded so far. Starts at -1.
        ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bytesRemaining' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_bytesRemaining' type='int' isStatic='false' isConst='false' defaultValue='10000000' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bytesTotal' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_bytesTotal' type='int' isStatic='false' isConst='false' defaultValue='-1' >
<description><![CDATA[the number of bytes to load. Starts at -1.
          ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_content' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_content' type='' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_context' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_context' type='' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_httpStatus' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_httpStatus' type='int' isStatic='false' isConst='false' defaultValue='-1' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_id' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_id' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_isLoaded' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_isLoaded' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_isLoading' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_isLoading' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[Indicated if loading has stated.
        ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_latency' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_latency' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ The time (in seconds) that the server took and send begin streaming content.
            ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_parsedURL' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_parsedURL' type='br.com.stimuli.loading.utils:SmartURL' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_percentLoaded' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_percentLoaded' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[The percentage of loading done (from 0 to 1).
        ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_priority' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_priority' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_responseTime' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_responseTime' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_speed' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_speed' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ The speed (in kbs) for this download.
          ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_startTime' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_startTime' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_timeToDownload' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_timeToDownload' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ The total time (in seconds) this item took to load.]]></description>
</field>
<field name='_totalTime' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_totalTime' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_type' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_type' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ The type of loading to perform (see <code>BulkLoader.TYPES</code>).
        ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_uid' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_uid' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_weightPercentLoaded' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/_weightPercentLoaded' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[The percentage of loading done relative to the weight of this item(from 0 to 1).
          ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='errorEvent' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/errorEvent' type='flash.events:ErrorEvent' isStatic='false' isConst='false' >
<description><![CDATA[ Stores any erros (if any), such as IOError and SecurityError for this item ]]></description>
</field>
<field name='maxTries' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/maxTries' type='int' isStatic='false' isConst='false' defaultValue='3' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='numTries' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/numTries' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[Current try number.
          ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='preventCache' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/preventCache' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[If a random string should be appended to the end of the url to prevent caching.
          ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='propertyParsingErrors' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/propertyParsingErrors' type='Array' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='specificAvailableProps' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/specificAvailableProps' type='Array' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='status' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/status' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='url' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/url' type='flash.net:URLRequest' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='weight' fullname='br.com.stimuli.loading.loadingtypes:LoadingItem/weight' type='int' isStatic='false' isConst='false' defaultValue='1' >
<description><![CDATA[A relative unit of size, so that preloaders can show relative progress before all connections have started.
        ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='VideoItem' fullname='br.com.stimuli.loading.loadingtypes:VideoItem' sourcefile='E:\work\happyMagic\src\client\libs\br\com\stimuli\loading\loadingtypes\VideoItem.as' namespace='br.com.stimuli.loading.loadingtypes' access='public' baseclass='br.com.stimuli.loading.loadingtypes:LoadingItem' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='VideoItem' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/VideoItem' isStatic='false' isFinal='false' isOverride='false'  param_names='url;type;uid' param_types='flash.net:URLRequest;String;String' param_defaults='undefined;undefined;undefined' result_type='*'>
</method>
<method name='_parseOptions' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/_parseOptions' isStatic='false' isFinal='false' isOverride='true'  param_names='props' param_types='Object' param_defaults='undefined' result_type='Array'>
</method>
<method name='cleanListeners' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/cleanListeners' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='createNetStreamEvent' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/createNetStreamEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='destroy' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/destroy' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='fireCanBeginStreamingEvent' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/private:fireCanBeginStreamingEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='isStreamable' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/isStreamable' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
</method>
<method name='isVideo' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/isVideo' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
</method>
<method name='load' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/load' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='onCompleteHandler' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/onCompleteHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='evt' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='onNetStatus' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/br.com.stimuli.loading.loadingtypes:onNetStatus' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='flash.events:NetStatusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onStartedHandler' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/onStartedHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='evt' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='onVideoMetadata' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/br.com.stimuli.loading.loadingtypes:onVideoMetadata' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='*' param_defaults='undefined' result_type='void'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='stop' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/stop' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='canBeginStreaming' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/canBeginStreaming/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='checkPolicyFile' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/checkPolicyFile/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='metaData' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/metaData/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_canBeginStreaming' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/_canBeginStreaming' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ Indicates if we've already fired an event letting users know that the netstream can
          begin playing (has enough buffer to play with no interruptions)
          ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_checkPolicyFile' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/_checkPolicyFile' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_metaData' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/_metaData' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='dummyEventTrigger' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/dummyEventTrigger' type='flash.display:Sprite' isStatic='false' isConst='false' >
<description><![CDATA[
          ]]></description>
<public><![CDATA[]]></public>
</field>
<field name='nc' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/private:nc' type='flash.net:NetConnection' isStatic='false' isConst='false' >
</field>
<field name='pausedAtStart' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/pausedAtStart' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='stream' fullname='br.com.stimuli.loading.loadingtypes:VideoItem/stream' type='flash.net:NetStream' isStatic='false' isConst='false' >
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='BinaryItem' fullname='br.com.stimuli.loading.loadingtypes:BinaryItem' sourcefile='E:\work\happyMagic\src\client\libs\br\com\stimuli\loading\loadingtypes\BinaryItem.as' namespace='br.com.stimuli.loading.loadingtypes' access='public' baseclass='br.com.stimuli.loading.loadingtypes:LoadingItem' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='BinaryItem' fullname='br.com.stimuli.loading.loadingtypes:BinaryItem/BinaryItem' isStatic='false' isFinal='false' isOverride='false'  param_names='url;type;uid' param_types='flash.net:URLRequest;String;String' param_defaults='undefined;undefined;undefined' result_type='*'>
</method>
<method name='_parseOptions' fullname='br.com.stimuli.loading.loadingtypes:BinaryItem/_parseOptions' isStatic='false' isFinal='false' isOverride='true'  param_names='props' param_types='Object' param_defaults='undefined' result_type='Array'>
</method>
<method name='cleanListeners' fullname='br.com.stimuli.loading.loadingtypes:BinaryItem/cleanListeners' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='destroy' fullname='br.com.stimuli.loading.loadingtypes:BinaryItem/destroy' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='load' fullname='br.com.stimuli.loading.loadingtypes:BinaryItem/load' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='onCompleteHandler' fullname='br.com.stimuli.loading.loadingtypes:BinaryItem/onCompleteHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='evt' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='onErrorHandler' fullname='br.com.stimuli.loading.loadingtypes:BinaryItem/onErrorHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='evt' param_types='flash.events:ErrorEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onStartedHandler' fullname='br.com.stimuli.loading.loadingtypes:BinaryItem/onStartedHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='evt' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='stop' fullname='br.com.stimuli.loading.loadingtypes:BinaryItem/stop' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<field name='loader' fullname='br.com.stimuli.loading.loadingtypes:BinaryItem/loader' type='flash.net:URLLoader' isStatic='false' isConst='false' >
</field>
<classRec name='ImageItem' fullname='br.com.stimuli.loading.loadingtypes:ImageItem' sourcefile='E:\work\happyMagic\src\client\libs\br\com\stimuli\loading\loadingtypes\ImageItem.as' namespace='br.com.stimuli.loading.loadingtypes' access='public' baseclass='br.com.stimuli.loading.loadingtypes:LoadingItem' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='ImageItem' fullname='br.com.stimuli.loading.loadingtypes:ImageItem/ImageItem' isStatic='false' isFinal='false' isOverride='false'  param_names='url;type;uid' param_types='flash.net:URLRequest;String;String' param_defaults='undefined;undefined;undefined' result_type='*'>
</method>
<method name='_onHttpStatusHandler' fullname='br.com.stimuli.loading.loadingtypes:ImageItem/_onHttpStatusHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='flash.events:HTTPStatusEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='_parseOptions' fullname='br.com.stimuli.loading.loadingtypes:ImageItem/_parseOptions' isStatic='false' isFinal='false' isOverride='true'  param_names='props' param_types='Object' param_defaults='undefined' result_type='Array'>
</method>
<method name='cleanListeners' fullname='br.com.stimuli.loading.loadingtypes:ImageItem/cleanListeners' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='destroy' fullname='br.com.stimuli.loading.loadingtypes:ImageItem/destroy' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='getDefinitionByName' fullname='br.com.stimuli.loading.loadingtypes:ImageItem/getDefinitionByName' isStatic='false' isFinal='false' isOverride='false'  param_names='className' param_types='String' param_defaults='undefined' result_type='Object'>
<description><![CDATA[ Gets a  definition from a fully qualified path (can be a Class, function or namespace). 
            ]]></description>
<param><![CDATA[className The fully qualified class name as a string.
            ]]></param>
<return><![CDATA[The definition object with that name or null of not found.
        ]]></return>
</method>
<method name='isImage' fullname='br.com.stimuli.loading.loadingtypes:ImageItem/isImage' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
</method>
<method name='isSWF' fullname='br.com.stimuli.loading.loadingtypes:ImageItem/isSWF' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
</method>
<method name='load' fullname='br.com.stimuli.loading.loadingtypes:ImageItem/load' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='onCompleteHandler' fullname='br.com.stimuli.loading.loadingtypes:ImageItem/onCompleteHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='evt' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='onErrorHandler' fullname='br.com.stimuli.loading.loadingtypes:ImageItem/onErrorHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='evt' param_types='flash.events:ErrorEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onInitHandler' fullname='br.com.stimuli.loading.loadingtypes:ImageItem/onInitHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='stop' fullname='br.com.stimuli.loading.loadingtypes:ImageItem/stop' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<field name='loader' fullname='br.com.stimuli.loading.loadingtypes:ImageItem/loader' type='flash.display:Loader' isStatic='false' isConst='false' >
</field>
<classRec name='XMLItem' fullname='br.com.stimuli.loading.loadingtypes:XMLItem' sourcefile='E:\work\happyMagic\src\client\libs\br\com\stimuli\loading\loadingtypes\XMLItem.as' namespace='br.com.stimuli.loading.loadingtypes' access='public' baseclass='br.com.stimuli.loading.loadingtypes:LoadingItem' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='XMLItem' fullname='br.com.stimuli.loading.loadingtypes:XMLItem/XMLItem' isStatic='false' isFinal='false' isOverride='false'  param_names='url;type;uid' param_types='flash.net:URLRequest;String;String' param_defaults='undefined;undefined;undefined' result_type='*'>
</method>
<method name='_parseOptions' fullname='br.com.stimuli.loading.loadingtypes:XMLItem/_parseOptions' isStatic='false' isFinal='false' isOverride='true'  param_names='props' param_types='Object' param_defaults='undefined' result_type='Array'>
</method>
<method name='cleanListeners' fullname='br.com.stimuli.loading.loadingtypes:XMLItem/cleanListeners' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='destroy' fullname='br.com.stimuli.loading.loadingtypes:XMLItem/destroy' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='isText' fullname='br.com.stimuli.loading.loadingtypes:XMLItem/isText' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
</method>
<method name='load' fullname='br.com.stimuli.loading.loadingtypes:XMLItem/load' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='onCompleteHandler' fullname='br.com.stimuli.loading.loadingtypes:XMLItem/onCompleteHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='evt' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='onErrorHandler' fullname='br.com.stimuli.loading.loadingtypes:XMLItem/onErrorHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='evt' param_types='flash.events:ErrorEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onStartedHandler' fullname='br.com.stimuli.loading.loadingtypes:XMLItem/onStartedHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='evt' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='stop' fullname='br.com.stimuli.loading.loadingtypes:XMLItem/stop' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<field name='loader' fullname='br.com.stimuli.loading.loadingtypes:XMLItem/loader' type='flash.net:URLLoader' isStatic='false' isConst='false' >
</field>
<classRec name='SoundItem' fullname='br.com.stimuli.loading.loadingtypes:SoundItem' sourcefile='E:\work\happyMagic\src\client\libs\br\com\stimuli\loading\loadingtypes\SoundItem.as' namespace='br.com.stimuli.loading.loadingtypes' access='public' baseclass='br.com.stimuli.loading.loadingtypes:LoadingItem' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='SoundItem' fullname='br.com.stimuli.loading.loadingtypes:SoundItem/SoundItem' isStatic='false' isFinal='false' isOverride='false'  param_names='url;type;uid' param_types='flash.net:URLRequest;String;String' param_defaults='undefined;undefined;undefined' result_type='*'>
</method>
<method name='_parseOptions' fullname='br.com.stimuli.loading.loadingtypes:SoundItem/_parseOptions' isStatic='false' isFinal='false' isOverride='true'  param_names='props' param_types='Object' param_defaults='undefined' result_type='Array'>
</method>
<method name='cleanListeners' fullname='br.com.stimuli.loading.loadingtypes:SoundItem/cleanListeners' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='destroy' fullname='br.com.stimuli.loading.loadingtypes:SoundItem/destroy' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='isSound' fullname='br.com.stimuli.loading.loadingtypes:SoundItem/isSound' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
</method>
<method name='isStreamable' fullname='br.com.stimuli.loading.loadingtypes:SoundItem/isStreamable' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
</method>
<method name='load' fullname='br.com.stimuli.loading.loadingtypes:SoundItem/load' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='onCompleteHandler' fullname='br.com.stimuli.loading.loadingtypes:SoundItem/onCompleteHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='evt' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='onErrorHandler' fullname='br.com.stimuli.loading.loadingtypes:SoundItem/onErrorHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='evt' param_types='flash.events:ErrorEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onStartedHandler' fullname='br.com.stimuli.loading.loadingtypes:SoundItem/onStartedHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='evt' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='stop' fullname='br.com.stimuli.loading.loadingtypes:SoundItem/stop' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<field name='loader' fullname='br.com.stimuli.loading.loadingtypes:SoundItem/loader' type='flash.media:Sound' isStatic='false' isConst='false' >
</field>
<classRec name='URLItem' fullname='br.com.stimuli.loading.loadingtypes:URLItem' sourcefile='E:\work\happyMagic\src\client\libs\br\com\stimuli\loading\loadingtypes\URLItem.as' namespace='br.com.stimuli.loading.loadingtypes' access='public' baseclass='br.com.stimuli.loading.loadingtypes:LoadingItem' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='URLItem' fullname='br.com.stimuli.loading.loadingtypes:URLItem/URLItem' isStatic='false' isFinal='false' isOverride='false'  param_names='url;type;uid' param_types='flash.net:URLRequest;String;String' param_defaults='undefined;undefined;undefined' result_type='*'>
</method>
<method name='_parseOptions' fullname='br.com.stimuli.loading.loadingtypes:URLItem/_parseOptions' isStatic='false' isFinal='false' isOverride='true'  param_names='props' param_types='Object' param_defaults='undefined' result_type='Array'>
</method>
<method name='cleanListeners' fullname='br.com.stimuli.loading.loadingtypes:URLItem/cleanListeners' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='destroy' fullname='br.com.stimuli.loading.loadingtypes:URLItem/destroy' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='isText' fullname='br.com.stimuli.loading.loadingtypes:URLItem/isText' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
</method>
<method name='load' fullname='br.com.stimuli.loading.loadingtypes:URLItem/load' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='onCompleteHandler' fullname='br.com.stimuli.loading.loadingtypes:URLItem/onCompleteHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='evt' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='onStartedHandler' fullname='br.com.stimuli.loading.loadingtypes:URLItem/onStartedHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='evt' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='stop' fullname='br.com.stimuli.loading.loadingtypes:URLItem/stop' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<field name='loader' fullname='br.com.stimuli.loading.loadingtypes:URLItem/loader' type='flash.net:URLLoader' isStatic='false' isConst='false' >
</field>
<classRec name='ClassCache' fullname='happyfish.cacher:ClassCache' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\cacher\ClassCache.as' namespace='happyfish.cacher' access='public' baseclass='flash.events:EventDispatcher' interfaces='happyfish.manager.module.interfaces:IClassManager' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
<metadata>
	<Event owner='happyfish.cacher:ClassCache' name='complete' type='flash.events.Event' >
	</Event>
</metadata>
</classRec>
<method name='ClassCache' fullname='happyfish.cacher:ClassCache/ClassCache' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='ClassCache.as$242:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='dispatchComplete' fullname='happyfish.cacher:ClassCache/dispatchComplete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='getClass' fullname='happyfish.cacher:ClassCache/getClass' isStatic='false' isFinal='false' isOverride='false'  param_names='className' param_types='String' param_defaults='undefined' result_type='Class'>
</method>
<method name='getInstance' fullname='happyfish.cacher:ClassCache/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.cacher:ClassCache'>
</method>
<method name='hasClass' fullname='happyfish.cacher:ClassCache/hasClass' isStatic='false' isFinal='false' isOverride='false'  param_names='className' param_types='String' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='loadClassSwf_complete' fullname='happyfish.cacher:ClassCache/private:loadClassSwf_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='loadClassSwf' fullname='happyfish.cacher:ClassCache/loadClassSwf' isStatic='false' isFinal='false' isOverride='false'  param_names='url' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='loadProgressFun' fullname='happyfish.cacher:ClassCache/private:loadProgressFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:ProgressEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='load' fullname='happyfish.cacher:ClassCache/load' isStatic='false' isFinal='false' isOverride='false'  param_names='url' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='instance' fullname='happyfish.cacher:ClassCache/private:instance' type='happyfish.cacher:ClassCache' isStatic='true' isConst='false' >
</field>
<field name='loadedPer' fullname='happyfish.cacher:ClassCache/loadedPer' type='uint' isStatic='false' isConst='false' >
</field>
<field name='loadedSwfList' fullname='happyfish.cacher:ClassCache/private:loadedSwfList' type='Object' isStatic='false' isConst='false' >
</field>
<field name='queueArray' fullname='happyfish.cacher:ClassCache/private:queueArray' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='stage' fullname='happyfish.cacher:ClassCache/stage' type='flash.display:Stage' isStatic='false' isConst='false' >
</field>
<field name='url' fullname='happyfish.cacher:ClassCache/url' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='SwfClassCache' fullname='happyfish.cacher:SwfClassCache' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\cacher\SwfClassCache.as' namespace='happyfish.cacher' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
</classRec>
<method name='SwfClassCache' fullname='happyfish.cacher:SwfClassCache/SwfClassCache' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='SwfClassCache.as$432:Private' param_defaults='undefined' result_type='*'>
</method>
<method name='dispatchComplete' fullname='happyfish.cacher:SwfClassCache/dispatchComplete' isStatic='false' isFinal='false' isOverride='false'  param_names='className' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='getClassSwfUrl' fullname='happyfish.cacher:SwfClassCache/private:getClassSwfUrl' isStatic='false' isFinal='false' isOverride='false'  param_names='className' param_types='String' param_defaults='undefined' result_type='String'>
</method>
<method name='getClass' fullname='happyfish.cacher:SwfClassCache/getClass' isStatic='false' isFinal='false' isOverride='false'  param_names='className' param_types='String' param_defaults='undefined' result_type='Class'>
</method>
<method name='getInstance' fullname='happyfish.cacher:SwfClassCache/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.cacher:SwfClassCache'>
</method>
<method name='hasClass' fullname='happyfish.cacher:SwfClassCache/hasClass' isStatic='false' isFinal='false' isOverride='false'  param_names='className' param_types='String' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='loadClassSwf_complete' fullname='happyfish.cacher:SwfClassCache/private:loadClassSwf_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='loadClassSwf' fullname='happyfish.cacher:SwfClassCache/loadClassSwf' isStatic='false' isFinal='false' isOverride='false'  param_names='url' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='loadClass' fullname='happyfish.cacher:SwfClassCache/loadClass' isStatic='false' isFinal='false' isOverride='false'  param_names='className' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 通知开始获取指定class

		 ]]></description>
<param><![CDATA[className

		 ]]></param>
</method>
<method name='loadProgressFun' fullname='happyfish.cacher:SwfClassCache/private:loadProgressFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:ProgressEvent' param_defaults='undefined' result_type='void'>
</method>
<field name='appDomain' fullname='happyfish.cacher:SwfClassCache/appDomain' type='flash.system:ApplicationDomain' isStatic='false' isConst='false' >
</field>
<field name='currentClass' fullname='happyfish.cacher:SwfClassCache/currentClass' type='String' isStatic='false' isConst='false' >
</field>
<field name='currentUrl' fullname='happyfish.cacher:SwfClassCache/private:currentUrl' type='String' isStatic='false' isConst='false' >
</field>
<field name='instance' fullname='happyfish.cacher:SwfClassCache/private:instance' type='happyfish.cacher:SwfClassCache' isStatic='true' isConst='false' >
</field>
<field name='isLoading' fullname='happyfish.cacher:SwfClassCache/isLoading' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='loadArr' fullname='happyfish.cacher:SwfClassCache/loadArr' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='loadedPer' fullname='happyfish.cacher:SwfClassCache/loadedPer' type='uint' isStatic='false' isConst='false' >
</field>
<field name='loadedSwfList' fullname='happyfish.cacher:SwfClassCache/private:loadedSwfList' type='Object' isStatic='false' isConst='false' >
</field>
<field name='stage' fullname='happyfish.cacher:SwfClassCache/stage' type='flash.display:Stage' isStatic='false' isConst='false' >
</field>
<classRec name='CacheSprite' fullname='happyfish.cacher:CacheSprite' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\cacher\CacheSprite.as' namespace='happyfish.cacher' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='CacheSprite' fullname='happyfish.cacher:CacheSprite/CacheSprite' isStatic='false' isFinal='false' isOverride='false'  param_names='$deafult_play_flg;_drawFrame' param_types='Boolean;uint' param_defaults='false;1' result_type='*'>
</method>
<method name='addClassChild' fullname='happyfish.cacher:CacheSprite/addClassChild' isStatic='false' isFinal='false' isOverride='false'  param_names='className' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 获取到class,并加入bitmap_mc处理队列

		 ]]></description>
<param><![CDATA[className

		 ]]></param>
</method>
<method name='addContainer' fullname='happyfish.cacher:CacheSprite/addContainer' isStatic='false' isFinal='false' isOverride='false'  param_names='$bitmap_movie_mc' param_types='happyfish.cacher.bitmapMc.display:BitmapMovieMc' param_defaults='null' result_type='void'>
</method>
<method name='bitmapCacheLoaded' fullname='happyfish.cacher:CacheSprite/bitmapCacheLoaded' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happyfish.cacher.bitmapMc.events:BitmapCacherEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 bitmap cache 处理完成

		 ]]></description>
<param><![CDATA[e

		 ]]></param>
</method>
<method name='body_complete' fullname='happyfish.cacher:CacheSprite/private:body_complete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='callFunc' fullname='happyfish.cacher:CacheSprite/callFunc' isStatic='false' isFinal='false' isOverride='false'  param_names='func;param' param_types='String;*' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 调用bitmap_movie_mc:BitmapMovieMc的方法,如果bitmap_movie_mc还未建立,

		 就侦听它的完成事件,再调用这个方法

		 ]]></description>
<param><![CDATA[func

		 ]]></param>
<param><![CDATA[param

		 ]]></param>
</method>
<method name='onAssetLoaded' fullname='happyfish.cacher:CacheSprite/protected:onAssetLoaded' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happyfish.events:SwfClassCacheEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 载入完毕处理

		 ]]></description>
<param><![CDATA[e

		 ]]></param>
</method>
<method name='setScaleFlg' fullname='happyfish.cacher:CacheSprite/setScaleFlg' isStatic='false' isFinal='false' isOverride='false'  param_names='$b;$width;$height' param_types='Boolean;int;int' param_defaults='true;70;70' result_type='void'>
</method>
<method name='setScale' fullname='happyfish.cacher:CacheSprite/setScale' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 TODO 恶心的写法,待改进

		 ]]></description>
</method>
<method name='className' fullname='happyfish.cacher:CacheSprite/className/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='className' fullname='happyfish.cacher:CacheSprite/className/set' isStatic='false' isFinal='false' isOverride='false'  param_names='$className' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='height' fullname='happyfish.cacher:CacheSprite/height/set' isStatic='false' isFinal='false' isOverride='true'  param_names='$h' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='width' fullname='happyfish.cacher:CacheSprite/width/set' isStatic='false' isFinal='false' isOverride='true'  param_names='$w' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='DEBUG' fullname='happyfish.cacher:CacheSprite/DEBUG' type='Boolean' isStatic='true' isConst='true' defaultValue='true' >
</field>
<field name='_callback' fullname='happyfish.cacher:CacheSprite/private:_callback' type='String' isStatic='false' isConst='false' >
</field>
<field name='_className' fullname='happyfish.cacher:CacheSprite/private:_className' type='String' isStatic='false' isConst='false' >
</field>
<field name='_param' fullname='happyfish.cacher:CacheSprite/private:_param' type='' isStatic='false' isConst='false' >
</field>
<field name='_scaleHeight' fullname='happyfish.cacher:CacheSprite/private:_scaleHeight' type='int' isStatic='false' isConst='false' >
</field>
<field name='_scaleWidth' fullname='happyfish.cacher:CacheSprite/private:_scaleWidth' type='int' isStatic='false' isConst='false' >
</field>
<field name='bitmap_mc_single_flg' fullname='happyfish.cacher:CacheSprite/private:bitmap_mc_single_flg' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='bitmap_movie_mc' fullname='happyfish.cacher:CacheSprite/bitmap_movie_mc' type='happyfish.cacher.bitmapMc.display:BitmapMovieMc' isStatic='false' isConst='false' >
</field>
<field name='bodyComplete_callback' fullname='happyfish.cacher:CacheSprite/bodyComplete_callback' type='Function' isStatic='false' isConst='false' >
</field>
<field name='bodyComplete_params' fullname='happyfish.cacher:CacheSprite/bodyComplete_params' type='Array' isStatic='false' isConst='false' >
</field>
<field name='cache' fullname='happyfish.cacher:CacheSprite/cache' type='happyfish.cacher:ClassCache' isStatic='false' isConst='false' >
</field>
<field name='deafult_play_flg' fullname='happyfish.cacher:CacheSprite/private:deafult_play_flg' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='drawFrame' fullname='happyfish.cacher:CacheSprite/private:drawFrame' type='uint' isStatic='false' isConst='false' >
</field>
<field name='mc_class' fullname='happyfish.cacher:CacheSprite/private:mc_class' type='Class' isStatic='false' isConst='false' >
</field>
<field name='scale_flg' fullname='happyfish.cacher:CacheSprite/private:scale_flg' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='single_flg' fullname='happyfish.cacher:CacheSprite/private:single_flg' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<packageRec name='br.com.stimuli.loading.null' fullname='br.com.stimuli.loading.null'>
<description><![CDATA[
Licensed under the MIT License

Copyright (c) 2006-2007 Arthur Debert

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

http://code.google.com/p/bulk-loader/
http://www.opensource.org/licenses/mit-license.php
   
]]></description>
</packageRec>
<classRec name='BulkLoader' fullname='br.com.stimuli.loading:BulkLoader' sourcefile='E:\work\happyMagic\src\client\libs\br\com\stimuli\loading\BulkLoader.as' namespace='br.com.stimuli.loading' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[
      Manages loading for simultaneous items and multiple formats.
      Exposes a simpler interface, with callbacks instead of events for each item to be loaded (but still dispatched "global" events).
      The number of simultaneous connections is configurable.
      
      ]]></description>
<author><![CDATA[Arthur Debert
      ]]></author>
<example><![CDATA[Basic usage:<listing version="3.0">
    import br.com.stimuli.loading.BulkLoader;

    / /instantiate a BulkLoader with a name : a way to reference this instance from another classes without having to set a expolicit reference on many places
    var bulkLoader : BulkLoader = new BulkLoader("main loading");
    // add items to be loaded
    bulkLoader.add("my_xml_file.xml");
    bulkLoader.add("main.swf");
    // you can also use a URLRequest object
    var backgroundURL : URLRequest = new URLRequest("background.jpg");
    bulkLoader.add(backgroundURL);

    // add event listeners for the loader itself :
    // event fired when all items have been loaded and nothing has failed!
    bulkLoader.addEventListener(BulkLoader.COMPLETE, onCompleteHandler);
    // event fired when loading progress has been made:
    bulkLoader.addEventListener(BulkLoader.PROGRESS, _onProgressHandler);

    // start loading all items
    bulkLoader.start();

    function _onProgressHandler(evt : ProgressEvent) : void{
        trace("Loaded" , evt.bytesLoaded," of ",  evt.bytesTotal);
    }

    function onCompleteHandler(evt : ProgressEvent) : void{
            trace("All items are loaeded and ready to consume");
            // grab the main movie clip:
            var mainMovie : MovieClip = bulkLoader.getMovieClip("main.swf");
            // Get the xml object:
            var mXML : XML = bulkLoader.getXML("my_xml_file.xml");
            // grab the bitmap for the background image by a string:
            var myBitmap : Bitmap = bulkLoader.getBitmap("background.jpg");
            // grab the bitmap for the background image using the url rquest object:
            var myBitmap : Bitmap = bulkLoader.getBitmap(backgroundURL);
    }

    // In any other class you can access those assets without having to pass around references to the bulkLoader instance.
    // In another class  you get get a reference to the "main loading" bulkLoader:
    var mainLoader : BulkLoader = BulkLoader.getLoader("main loading");
    // now grab the xml:
    var mXML : XML = mainLoader.getXML("my_xml_file.xml");
    // or shorter:
    var mXML : XML = BulkLoader.getLoader("main loading").getXML("my_xml_file.xml");
       </listing>
      ]]></example>
<langversion><![CDATA[ActionScript 3.0
      ]]></langversion>
<playerversion><![CDATA[Flash 9.0
          ]]></playerversion>
<since><![CDATA[15.09.2007
    ]]></since>
<metadata>
	<Event owner='br.com.stimuli.loading:BulkLoader' name='complete' type='br.com.stimuli.loading.BulkProgressEvent' >
<description><![CDATA[
  Dispatched when all items have been downloaded and parsed. Note that this event only fires if there are no errors.
   ]]></description>
<eventType><![CDATA[br.com.stimuli.loading.BulkProgressEvent.COMPLETE
 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='br.com.stimuli.loading:BulkLoader' name='progress' type='br.com.stimuli.loading.BulkProgressEvent' >
<description><![CDATA[
  Dispatched on download progress by any of the items to download.
   ]]></description>
<eventType><![CDATA[br.com.stimuli.loading.BulkProgressEvent.PROGRESS
 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='BulkLoader' fullname='br.com.stimuli.loading:BulkLoader/BulkLoader' isStatic='false' isFinal='false' isOverride='false'  param_names='name;numConnections;logLevel' param_types='String;int;int' param_defaults='undefined;unknown;unknown' result_type='*'>
<description><![CDATA[ Creates a new BulkLoader object identifiable by the <code>name</code> parameter. The <code>name</code> parameter must be unique, else an Error will be thrown.
          
          ]]></description>
<param><![CDATA[name  A name that can be used later to reference this loader in a static context,
          ]]></param>
<param><![CDATA[numConnections The number of maximum simultaneous connections to be open.
          ]]></param>
<param><![CDATA[logLevel At which level should traces be outputed. By default only errors will be traced.
          
          ]]></param>
<see><![CDATA[#numConnections
          ]]></see>
<see><![CDATA[#log()
        ]]></see>
</method>
<method name='__debug_printStackTrace' fullname='br.com.stimuli.loading:BulkLoader/__debug_printStackTrace' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='__debug_print_loaders' fullname='br.com.stimuli.loading:BulkLoader/__debug_print_loaders' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='__debug_print_num_loaders' fullname='br.com.stimuli.loading:BulkLoader/__debug_print_num_loaders' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_canOpenConnectioForItem' fullname='br.com.stimuli.loading:BulkLoader/_canOpenConnectioForItem' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='br.com.stimuli.loading.loadingtypes:LoadingItem' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_getAllConnections' fullname='br.com.stimuli.loading:BulkLoader/_getAllConnections' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_getConnectionsForHostName' fullname='br.com.stimuli.loading:BulkLoader/_getConnectionsForHostName' isStatic='false' isFinal='false' isOverride='false'  param_names='hostname' param_types='String' param_defaults='undefined' result_type='Array'>
</method>
<method name='_getContentAsType' fullname='br.com.stimuli.loading:BulkLoader/_getContentAsType' isStatic='false' isFinal='false' isOverride='false'  param_names='key;type;clearMemory' param_types='*;Class;Boolean' param_defaults='undefined;undefined;false' result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_getLeastUrgentOpenedItem' fullname='br.com.stimuli.loading:BulkLoader/_getLeastUrgentOpenedItem' isStatic='false' isFinal='false' isOverride='false'  result_type='br.com.stimuli.loading.loadingtypes:LoadingItem'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_getNextItemToLoad' fullname='br.com.stimuli.loading:BulkLoader/_getNextItemToLoad' isStatic='false' isFinal='false' isOverride='false'  result_type='br.com.stimuli.loading.loadingtypes:LoadingItem'>
</method>
<method name='_getNumConnectionsForHostname' fullname='br.com.stimuli.loading:BulkLoader/_getNumConnectionsForHostname' isStatic='false' isFinal='false' isOverride='false'  param_names='hostname' param_types='String' param_defaults='undefined' result_type='int'>
</method>
<method name='_getNumConnectionsForItem' fullname='br.com.stimuli.loading:BulkLoader/_getNumConnectionsForItem' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='br.com.stimuli.loading.loadingtypes:LoadingItem' param_defaults='undefined' result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_getNumConnections' fullname='br.com.stimuli.loading:BulkLoader/_getNumConnections' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_hasItemInBulkLoader' fullname='br.com.stimuli.loading:BulkLoader/_hasItemInBulkLoader' isStatic='true' isFinal='false' isOverride='false'  param_names='key;atLoader' param_types='*;br.com.stimuli.loading:BulkLoader' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_incrementItemsLoaded' fullname='br.com.stimuli.loading:BulkLoader/_incrementItemsLoaded' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_isAllDoneP' fullname='br.com.stimuli.loading:BulkLoader/_isAllDoneP' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_loadNext' fullname='br.com.stimuli.loading:BulkLoader/_loadNext' isStatic='false' isFinal='false' isOverride='false'  param_names='toLoad' param_types='br.com.stimuli.loading.loadingtypes:LoadingItem' param_defaults='null' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_onAllLoaded' fullname='br.com.stimuli.loading:BulkLoader/_onAllLoaded' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_onItemComplete' fullname='br.com.stimuli.loading:BulkLoader/_onItemComplete' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_onItemError' fullname='br.com.stimuli.loading:BulkLoader/_onItemError' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='flash.events:ErrorEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_onItemStarted' fullname='br.com.stimuli.loading:BulkLoader/_onItemStarted' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_onProgress' fullname='br.com.stimuli.loading:BulkLoader/_onProgress' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='flash.events:Event' param_defaults='null' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_removeFromConnections' fullname='br.com.stimuli.loading:BulkLoader/_removeFromConnections' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='*' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_removeFromItems' fullname='br.com.stimuli.loading:BulkLoader/_removeFromItems' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='br.com.stimuli.loading.loadingtypes:LoadingItem' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_updateStats' fullname='br.com.stimuli.loading:BulkLoader/_updateStats' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='add' fullname='br.com.stimuli.loading:BulkLoader/add' isStatic='false' isFinal='false' isOverride='false'  param_names='url;props' param_types='*;Object' param_defaults='undefined;null' result_type='br.com.stimuli.loading.loadingtypes:LoadingItem'>
<description><![CDATA[ Adds a new assets to be loaded. The <code>BulkLoader</code> object will manage diferent assets type. If the right type cannot be infered from the url termination (e.g. the url ends with ".swf") the BulkLoader will relly on the <code>type</code> property of the <code>props</code> parameter. If both are set, the <code>type</code>  property of the props object will overrite the one defined in the <code>url</code>. In case none is specified and the url won't hint at it, the type <code>TYPE_TEXT</code> will be used.
          
          ]]></description>
<example><![CDATA[Retriving contents:<listing version="3.0">
import br.stimuli.loaded.BulkLoader;
var bulkLoader : BulkLoader = new BulkLoader("main");
// simple item:
bulkLoader.add("config.xml");
// use an id that can be retirved latterL
bulkLoader.add("background.jpg", {id:"bg"});
// or use a static var to have auto-complete and static checks on your ide:
bulkLoader.add("background.jpg", {BulkLoader.ID:"bg"});
// loads the languages.xml file first and parses before all items are done:
public function parseLanguages() : void{
   var theLangXML : XML = bulkLoader.getXML("langs");
   // do something wih the xml:
   doSomething(theLangXML);
}
bulkLoader.add("languages.xml", {priority:10, onComplete:parseLanguages, id:"langs"});
// Start the loading operation with only 3 simultaneous connections:
bulkLoader.start(3)
   </listing>
      ]]></example>
<param><![CDATA[url String OR URLRequest A <code>String</code> or a <code>URLRequest</code> instance.
          ]]></param>
<param><![CDATA[props An object specifing extra data for this loader. The following properties are supported:<p/>
          <table>
              <th>Property name</th>
              <th>Class constant</th>
              <th>Data type</th>
              <th>Description</th>
              <tr>
                  <td>preventCache</td>
                  <td><a href="#PREVENT_CACHING">PREVENT_CACHING</a></td>
                  <td><code>Boolean</code></td>
                  <td>If <code>true</code> a random query string will be added to the url (or a post param in case of post reuquest).</td>
              </tr>
              <tr>
                  <td>id</td>
                  <td><a href="#ID">ID</a></td>
                  <td><code>String</code></td>
                  <td>A string to identify this item. This id can be used in any method that uses the <code>key</code> parameter, such as <code>pause, removeItem, resume, getContent, getBitmap, getBitmapData, getXML, getMovieClip and getText</code>.</td>
              </tr>
              <tr>
                  <td>priority</td.
                  <td><a href="#PRIORITY">PRIORITY</a></td>
                  <td><code>int</code></td>
                  <td>An <code>int</code> used to order which items till be downloaded first. Items with a higher priority will download first. For items with the same priority they will be loaded in the same order they've been added.</td>
              </tr>
              <tr>
                  <td>maxTries</td.
                  <td><a href="#MAX_TRIES">MAX_TRIES</a></td>
                  <td><code>int</code></td>
                  <td>The number of retries in case the lading fails, defaults to 3.</td>
              </tr>
              <tr>
                  <td>weight</td.
                  <td><a href="#WEIGHT">WEIGHT</a></td>
                  <td><code>int</code></td>
                  <td>A number that sets an arbitrary relative size for this item. See #weightPercent.</td>
              </tr>
              <tr>
                  <td>headers</td.
                  <td><a href="#HEADERS">HEADERS</a></td>
                  <td><code>Array</code></td>
                  <td>An array of <code>RequestHeader</code> objects to be used when constructing the URL. If the <code>url</code> parameter is passed as a string, <code>BulkLoader</code> will use these request headers to construct the url.</td>
              </tr>
              <tr>
                  <td>context</td.
                  <td><a href="#CONTEXT">CONTEXT</a></td>
                  <td><code>LoaderContext or SoundLoaderContext</code></td>
                  <td>An object definig the loading context for this load operario. If this item is of <code>TYPE_SOUND</code>, a <code>SoundLoaderContext</code> is expected. If it's a <code>TYPE_IMAGE</code> a LoaderContext should be passed.</td>
              </tr>
              <tr>
                  <td>pausedAtStart</td.
                  <td><a href="#PAUSED_AT_START">PAUSED_AT_START</a></td>
                  <td><code>Boolean</code></td>
                  <td>If true, the nestream will be paused when loading has begun.</td>
              </tr>
          </table>
          You can use string substitutions (variable expandsion).
          ]]></param>
<see><![CDATA[#stringSubstitutions
      
        ]]></see>
</method>
<method name='changeItemPriority' fullname='br.com.stimuli.loading:BulkLoader/changeItemPriority' isStatic='false' isFinal='false' isOverride='false'  param_names='key;newPriority' param_types='String;int' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[ Updates the priority of item identified by key with a new value, the queue will be re resorted right away.
          Changing priorities will not stop currently opened connections.
          ]]></description>
<param><![CDATA[key The url request, url as a string or a id  from which the asset was loaded.
          ]]></param>
<param><![CDATA[new The priority to assign to the item.
          ]]></param>
<return><![CDATA[The <code>true</code> if an item with that key was found, <code>false</code> othersiwe.
        ]]></return>
</method>
<method name='clear' fullname='br.com.stimuli.loading:BulkLoader/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Removes this instance from the static Register of instances. After a clear method has been called for a given instance, nothing else should work
        ]]></description>
</method>
<method name='createUniqueNamedLoader' fullname='br.com.stimuli.loading:BulkLoader/createUniqueNamedLoader' isStatic='true' isFinal='false' isOverride='false'  param_names='numConnections;logLevel' param_types='int;int' param_defaults='unknown;unknown' result_type='br.com.stimuli.loading:BulkLoader'>
<description><![CDATA[ Creates a BulkLoader instance with an unique name. This is useful for situations where you might be creating
          many BulkLoader instances and it gets tricky to garantee that no other instance is using that name.
          ]]></description>
<param><![CDATA[numConnections The number of maximum simultaneous connections to be open.
          ]]></param>
<param><![CDATA[logLevel At which level should traces be outputed. By default only errors will be traced.
          ]]></param>
<return><![CDATA[A BulkLoader intance, with an unique name.
        ]]></return>
</method>
<method name='getAVM1Movie' fullname='br.com.stimuli.loading:BulkLoader/getAVM1Movie' isStatic='false' isFinal='false' isOverride='false'  param_names='key;clearMemory' param_types='String;Boolean' param_defaults='undefined;false' result_type='flash.display:AVM1Movie'>
<description><![CDATA[ Returns a <code>AVM1Movie</code> object with the downloaded asset for the given key.
          ]]></description>
<param><![CDATA[key The url request, url as a string or a id  from which the asset was loaded. Returns null if the cast fails
          ]]></param>
<param><![CDATA[clearMemory If this <code>BulkProgressEvent</code> instance should clear all references to the content of this asset.
          ]]></param>
<return><![CDATA[The content retrived from that url casted to a AVM1Movie object. Returns null if the cast fails.
        ]]></return>
</method>
<method name='getBinary' fullname='br.com.stimuli.loading:BulkLoader/getBinary' isStatic='false' isFinal='false' isOverride='false'  param_names='key;clearMemory' param_types='*;Boolean' param_defaults='undefined;false' result_type='flash.utils:ByteArray'>
<description><![CDATA[ Returns an ByteArray object with the downloaded asset for the given key.
          ]]></description>
<param><![CDATA[key The url request, url as a string or a id  from which the asset was loaded. Returns null if the cast fails. 
          ]]></param>
<param><![CDATA[clearMemory If this <code>BulkProgressEvent</code> instance should clear all references to the content of this asset.
          ]]></param>
<return><![CDATA[The content retrived from that url casted to a ByteArray object. Returns null if the cast fails.
        ]]></return>
</method>
<method name='getBitmapData' fullname='br.com.stimuli.loading:BulkLoader/getBitmapData' isStatic='false' isFinal='false' isOverride='false'  param_names='key;clearMemory' param_types='*;Boolean' param_defaults='undefined;false' result_type='flash.display:BitmapData'>
<description><![CDATA[ Returns an BitmapData object with the downloaded asset for the given key.
          ]]></description>
<param><![CDATA[key The url request, url as a string or a id  from which the asset was loaded. Returns null if the cast fails. Does not clone the original bitmap data from the bitmap asset.
          ]]></param>
<param><![CDATA[clearMemory If this <code>BulkProgressEvent</code> instance should clear all references to the content of this asset.
          ]]></param>
<return><![CDATA[The content retrived from that url casted to a BitmapData object. Returns null if the cast fails.
        ]]></return>
</method>
<method name='getBitmap' fullname='br.com.stimuli.loading:BulkLoader/getBitmap' isStatic='false' isFinal='false' isOverride='false'  param_names='key;clearMemory' param_types='String;Boolean' param_defaults='undefined;false' result_type='flash.display:Bitmap'>
<description><![CDATA[ Returns a Bitmap object with the downloaded asset for the given key.
          ]]></description>
<param><![CDATA[key The url request, url as a string or a id  from which the asset was loaded. Returns null if the cast fails
          ]]></param>
<param><![CDATA[clearMemory If this <code>BulkProgressEvent</code> instance should clear all references to the content of this asset.
          ]]></param>
<return><![CDATA[The content retrived from that url casted to a Bitmap object. Returns null if the cast fails.
        ]]></return>
</method>
<method name='getContent' fullname='br.com.stimuli.loading:BulkLoader/getContent' isStatic='false' isFinal='false' isOverride='false'  param_names='key;clearMemory' param_types='String;Boolean' param_defaults='undefined;false' result_type='*'>
<description><![CDATA[ Returns an untyped object with the downloaded asset for the given key.
          ]]></description>
<param><![CDATA[key The url request, url as a string or a id  from which the asset was loaded.
          ]]></param>
<param><![CDATA[clearMemory If this <code>BulkProgressEvent</code> instance should clear all references to the content of this asset.
          ]]></param>
<return><![CDATA[The content retrived from that url
        ]]></return>
</method>
<method name='getDisplayObjectLoader' fullname='br.com.stimuli.loading:BulkLoader/getDisplayObjectLoader' isStatic='false' isFinal='false' isOverride='false'  param_names='key;clearMemory' param_types='String;Boolean' param_defaults='undefined;false' result_type='flash.display:Loader'>
<description><![CDATA[ Returns a Loader object with the downloaded asset for the given key.
        Had to pick this ugly name since <code>getLoader</code> is currently used for getting a BulkLoader instance.
        This is useful if you are loading images but do not have a crossdomain to grant you permissions. In this case, while you
        will still find restrictions to how you can use that loaded asset (no BitmapData for it, for example), you still can use it as content.
        
          ]]></description>
<param><![CDATA[key The url request, url as a string or a id  from which the asset was loaded. Returns null if the cast fails
          ]]></param>
<param><![CDATA[clearMemory If this <code>BulkProgressEvent</code> instance should clear all references to the content of this asset.
          ]]></param>
<return><![CDATA[The content retrived from that url casted to a Loader object. Returns null if the cast fails.
        ]]></return>
</method>
<method name='getFailedItems' fullname='br.com.stimuli.loading:BulkLoader/getFailedItems' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[ Get all items that have an error (either IOError or SecurityError). 
        ]]></description>
</method>
<method name='getFileName' fullname='br.com.stimuli.loading:BulkLoader/getFileName' isStatic='true' isFinal='false' isOverride='false'  param_names='text' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getHttpStatus' fullname='br.com.stimuli.loading:BulkLoader/getHttpStatus' isStatic='false' isFinal='false' isOverride='false'  param_names='key' param_types='*' param_defaults='undefined' result_type='int'>
<description><![CDATA[ Gets the http status code for the loading item identified by key.
          ]]></description>
<param><![CDATA[key The url request, url as a string or a id  from which the asset was loaded. 
          ]]></param>
<return><![CDATA[The Http status as an integer. If no item is found returns -1. If the http status cannot be determined but the item was found, returns 0.
        ]]></return>
</method>
<method name='getLoader' fullname='br.com.stimuli.loading:BulkLoader/getLoader' isStatic='true' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='br.com.stimuli.loading:BulkLoader'>
<description><![CDATA[ Fetched a <code>BulkLoader</code> object created with the <code>name</code> parameter.
          This is usefull if you must access loades assets from another scope, without having to pass direct references to this loader.
          ]]></description>
<param><![CDATA[name The name of the loader to be fetched.
          ]]></param>
<return><![CDATA[The BulkLoader instance that was registred with that name. Returns null if none is found.
        ]]></return>
</method>
<method name='getMovieClip' fullname='br.com.stimuli.loading:BulkLoader/getMovieClip' isStatic='false' isFinal='false' isOverride='false'  param_names='key;clearMemory' param_types='String;Boolean' param_defaults='undefined;false' result_type='flash.display:MovieClip'>
<description><![CDATA[ Returns a <code>MovieClip</code> object with the downloaded asset for the given key.
          ]]></description>
<param><![CDATA[key The url request, url as a string or a id  from which the asset was loaded. Returns null if the cast fails
          ]]></param>
<param><![CDATA[clearMemory If this <code>BulkProgressEvent</code> instance should clear all references to the content of this asset.
          ]]></param>
<return><![CDATA[The content retrived from that url casted to a MovieClip object. Returns null if the cast fails.
        ]]></return>
</method>
<method name='getNetStreamMetaData' fullname='br.com.stimuli.loading:BulkLoader/getNetStreamMetaData' isStatic='false' isFinal='false' isOverride='false'  param_names='key;clearMemory' param_types='String;Boolean' param_defaults='undefined;false' result_type='Object'>
<description><![CDATA[ Returns a <code>Object</code> with meta data information for a given <code>NetStream</code> key.
          ]]></description>
<param><![CDATA[key The url request, url as a string or a id  from which the asset was loaded. Returns null if the cast fails
          ]]></param>
<param><![CDATA[clearMemory If this <code>BulkProgressEvent</code> instance should clear all references to the content of this asset.
          ]]></param>
<return><![CDATA[The meta data object downloaded with this NetStream. Returns null if the given key does not resolve to a NetStream.
        ]]></return>
</method>
<method name='getNetStream' fullname='br.com.stimuli.loading:BulkLoader/getNetStream' isStatic='false' isFinal='false' isOverride='false'  param_names='key;clearMemory' param_types='String;Boolean' param_defaults='undefined;false' result_type='flash.net:NetStream'>
<description><![CDATA[ Returns a <code>NetStream</code> object with the downloaded asset for the given key.
          ]]></description>
<param><![CDATA[key The url request, url as a string or a id  from which the asset was loaded. Returns null if the cast fails
          ]]></param>
<param><![CDATA[clearMemory If this <code>BulkProgressEvent</code> instance should clear all references to the content of this asset.
          ]]></param>
<return><![CDATA[The content retrived from that url casted to a NetStream object. Returns null if the cast fails.
        ]]></return>
</method>
<method name='getNotLoadedItems' fullname='br.com.stimuli.loading:BulkLoader/getNotLoadedItems' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[ Returns items that haven't been fully loaded.
          ]]></description>
<return><![CDATA[An array with all LoadingItems not fully loaded.
        ]]></return>
</method>
<method name='getProgressForItems' fullname='br.com.stimuli.loading:BulkLoader/getProgressForItems' isStatic='false' isFinal='false' isOverride='false'  param_names='keys' param_types='Array' param_defaults='undefined' result_type='br.com.stimuli.loading:BulkProgressEvent'>
<description><![CDATA[ Calculates the progress for a specific set of items. 
          ]]></description>
<param><![CDATA[keys An <code>Array</code> containing keys (ids or urls) or <code>LoadingItem</code> objects to measure progress of.
          ]]></param>
<return><![CDATA[A <code>BulkProgressEvent</code> object with the current progress status.
          ]]></return>
<see><![CDATA[BulkProgressEvent
        ]]></see>
</method>
<method name='getSerializedData' fullname='br.com.stimuli.loading:BulkLoader/getSerializedData' isStatic='false' isFinal='false' isOverride='false'  param_names='key;clearMemory;encodingFunction' param_types='*;Boolean;Function' param_defaults='undefined;false;null' result_type='*'>
<description><![CDATA[ Returns a object decoded from a string, by a given encoding function.
          ]]></description>
<param><![CDATA[key The url request, url as a string or a id  from which the asset was loaded. Returns null if the encoding fails
          ]]></param>
<param><![CDATA[clearMemory If this <code>BulkProgressEvent</code> instance should clear all references to the content of this asset.
          ]]></param>
<param><![CDATA[encodingFunction A <code>Function</code> object to be passed the string and be encoded into an object.
          ]]></param>
<return><![CDATA[The content retrived from that url encoded by encodingFunction
        ]]></return>
</method>
<method name='getSound' fullname='br.com.stimuli.loading:BulkLoader/getSound' isStatic='false' isFinal='false' isOverride='false'  param_names='key;clearMemory' param_types='*;Boolean' param_defaults='undefined;false' result_type='flash.media:Sound'>
<description><![CDATA[ Returns a Sound object with the downloaded asset for the given key.
          ]]></description>
<param><![CDATA[key The url request, url as a string or a id  from which the asset was loaded. Returns null if the cast fails
          ]]></param>
<param><![CDATA[clearMemory  Boolean    If this <code>BulkProgressEvent</code> instance should clear all references to the content of this asset.
          ]]></param>
<return><![CDATA[The content retrived from that url casted to a Sound object. Returns null if the cast fails.
        ]]></return>
</method>
<method name='getSprite' fullname='br.com.stimuli.loading:BulkLoader/getSprite' isStatic='false' isFinal='false' isOverride='false'  param_names='key;clearMemory' param_types='String;Boolean' param_defaults='undefined;false' result_type='flash.display:Sprite'>
<description><![CDATA[ Returns a <code>Sprite</code> object with the downloaded asset for the given key.
          ]]></description>
<param><![CDATA[key The url request, url as a string or a id  from which the asset was loaded. Returns null if the cast fails
          ]]></param>
<param><![CDATA[clearMemory If this <code>BulkProgressEvent</code> instance should clear all references to the content of this asset.
          ]]></param>
<return><![CDATA[The content retrived from that url casted to a Sprite object. Returns null if the cast fails.
        ]]></return>
</method>
<method name='getStats' fullname='br.com.stimuli.loading:BulkLoader/getStats' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ If the <code>logLevel</code> if lower that <code>LOG_ERRORS</code>(3). Outputs a host of statistics about the loading operation
          ]]></description>
<return><![CDATA[A formated string with loading statistics.
          ]]></return>
<see><![CDATA[#LOG_ERRORS
          ]]></see>
<see><![CDATA[#logLevel
        ]]></see>
</method>
<method name='getText' fullname='br.com.stimuli.loading:BulkLoader/getText' isStatic='false' isFinal='false' isOverride='false'  param_names='key;clearMemory' param_types='*;Boolean' param_defaults='undefined;false' result_type='String'>
<description><![CDATA[ Returns a String object with the downloaded asset for the given key.
          ]]></description>
<param><![CDATA[key The url request, url as a string or a id  from which the asset was loaded. Returns null if the cast fails
          ]]></param>
<param><![CDATA[clearMemory If this <code>BulkProgressEvent</code> instance should clear all references to the content of this asset.
          ]]></param>
<return><![CDATA[The content retrived from that url casted to a String object. Returns null if the cast fails.
        ]]></return>
</method>
<method name='getUniqueName' fullname='br.com.stimuli.loading:BulkLoader/getUniqueName' isStatic='true' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getXML' fullname='br.com.stimuli.loading:BulkLoader/getXML' isStatic='false' isFinal='false' isOverride='false'  param_names='key;clearMemory' param_types='*;Boolean' param_defaults='undefined;false' result_type='XML'>
<description><![CDATA[ Returns an XML object with the downloaded asset for the given key.
          ]]></description>
<param><![CDATA[key          String OR URLRequest     The url request, url as a string or a id  from which the asset was loaded. Returns null if the cast fails
          ]]></param>
<param><![CDATA[clearMemory If this <code>BulkProgressEvent</code> instance should clear all references to the content of this asset.
          ]]></param>
<return><![CDATA[The content retrived from that url casted to a XML object. Returns null if the cast fails.
        ]]></return>
</method>
<method name='guessType' fullname='br.com.stimuli.loading:BulkLoader/guessType' isStatic='true' isFinal='false' isOverride='false'  param_names='urlAsString' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='hasItem' fullname='br.com.stimuli.loading:BulkLoader/hasItem' isStatic='false' isFinal='false' isOverride='false'  param_names='key;searchAll' param_types='*;Boolean' param_defaults='undefined;true' result_type='Boolean'>
<description><![CDATA[ Checks if there is <b>loaded</b> item in this <code>BulkLoader</code>.
        ]]></description>
<param><![CDATA[The url (as a <code>String</code> or a <code>URLRequest</code> object)or an id (as a <code>String</code>) by which the item is identifiable.
        ]]></param>
<param><![CDATA[searchAll   If true will search through all <code>BulkLoader</code> instances. Else will only search this one.
        ]]></param>
<return><![CDATA[True if a loader has a <b>loaded</b> item stored.
        ]]></return>
</method>
<method name='loadNow' fullname='br.com.stimuli.loading:BulkLoader/loadNow' isStatic='false' isFinal='false' isOverride='false'  param_names='key' param_types='*' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ Forces the item specified by key to be loaded right away. This will stop any open connection as needed.
          If needed, the connection to be closed will be the one with the lower priority. In case of a tie, the one
          that has more bytes to complete will be removed. The item to load now will be automatically be set the highest priority value in this BulkLoader instance.
          ]]></description>
<param><![CDATA[key The url request, url as a string or a id  from which the asset was created.
          ]]></param>
<return><![CDATA[<code>True</code> if an item with that key is found, <code>false</code> otherwise.
        ]]></return>
</method>
<method name='log' fullname='br.com.stimuli.loading:BulkLoader/log' isStatic='false' isFinal='false' isOverride='false'  param_names='msg' param_types='restParam' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<see><![CDATA[#logLevel
          ]]></see>
<see><![CDATA[#LOG_ERRORS
          ]]></see>
<see><![CDATA[#LOG_INFO
          ]]></see>
<see><![CDATA[#LOG_VERBOSE
        ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='pauseAllLoaders' fullname='br.com.stimuli.loading:BulkLoader/pauseAllLoaders' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Stops loading all items from all <code>BulkLoader</code> instances.
          ]]></description>
<see><![CDATA[#stopAllItems()
          ]]></see>
<see><![CDATA[#stopItem()
        ]]></see>
</method>
<method name='pauseAll' fullname='br.com.stimuli.loading:BulkLoader/pauseAll' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Stops loading all items of this <code>BulkLoader</code> instance. This does not clear or remove items from the qeue.
        ]]></description>
</method>
<method name='pause' fullname='br.com.stimuli.loading:BulkLoader/pause' isStatic='false' isFinal='false' isOverride='false'  param_names='key;loadsNext' param_types='*;Boolean' param_defaults='undefined;false' result_type='Boolean'>
<description><![CDATA[ Stop loading the item identified by <code>key</code>. This will not remove the item from the <code>BulkLoader</code>. Note that progress notification will jump around, as the stopped item will still count as something to load, but it's byte count will be 0.
        ]]></description>
<param><![CDATA[key The key (url as a string, url as a <code>URLRequest</code> or an id as a <code>String</code>).    
        ]]></param>
<param><![CDATA[loadsNext If it should start loading the next item.
        ]]></param>
<return><![CDATA[A <code>Boolean</code> indicating if the object has been stopped.
        ]]></return>
</method>
<method name='registerNewType' fullname='br.com.stimuli.loading:BulkLoader/registerNewType' isStatic='true' isFinal='false' isOverride='false'  param_names='extension;atType;withClass' param_types='String;String;Class' param_defaults='undefined;undefined;null' result_type='Boolean'>
<description><![CDATA[  Register a new file extension to be loaded as a given type. This is used both in the guessing of types from the url and affects how loading is done for each type. 
          If you are adding an extension to be of a type you are creating, you must pass the <code>withClass</code> parameter, which should be a class that extends LoadingItem.
          ]]></description>
<param><![CDATA[extension   The file extension to be used (can include the dot or not)
          ]]></param>
<param><![CDATA[atType      Which type this extension will be associated with. 
          ]]></param>
<param><![CDATA[withClass   For new types (not new extensions) wich class that extends LoadingItem should be used to mange this item.
          ]]></param>
<return><![CDATA[A <code>Boolean</code> indicating if the new extension was registered.
        ]]></return>
<see><![CDATA[#TYPE_IMAGE
          ]]></see>
<see><![CDATA[#TYPE_VIDEO
          ]]></see>
<see><![CDATA[#TYPE_SOUND
          ]]></see>
<see><![CDATA[#TYPE_TEXT
          ]]></see>
<see><![CDATA[#TYPE_XML
          ]]></see>
<see><![CDATA[#TYPE_MOVIECLIP
          ]]></see>
<see><![CDATA[#LoadingItem
          
          ]]></see>
</method>
<method name='reload' fullname='br.com.stimuli.loading:BulkLoader/reload' isStatic='false' isFinal='false' isOverride='false'  param_names='key' param_types='*' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ Forces the item specified by key to be reloaded right away. This will stop any open connection as needed.
          ]]></description>
<param><![CDATA[key The url request, url as a string or a id  from which the asset was created.
          ]]></param>
<return><![CDATA[<code>True</code> if an item with that key is found, <code>false</code> otherwise.
        ]]></return>
</method>
<method name='removeAllLoaders' fullname='br.com.stimuli.loading:BulkLoader/removeAllLoaders' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Deletes all content from all instances of <code>BulkLoader</code> class. This will stop any pending loading operations as well as free memory.
          ]]></description>
<see><![CDATA[#removeAll()
        ]]></see>
</method>
<method name='removeAll' fullname='br.com.stimuli.loading:BulkLoader/removeAll' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Deletes all loading and loaded objects. This will stop all connections and delete from the cache all of it's items (no content will be accessible if <code>removeAll</code> is executed).
        ]]></description>
</method>
<method name='removeFailedItems' fullname='br.com.stimuli.loading:BulkLoader/removeFailedItems' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Removes all items that have not succesfully loaded.
          After removing, it will try to restart loading if there are still items to load.
          ]]></description>
</method>
<method name='removePausedItems' fullname='br.com.stimuli.loading:BulkLoader/removePausedItems' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Removes all items that have been stopped.
          After removing, it will try to restart loading if there are still items to load.
          ]]></description>
</method>
<method name='remove' fullname='br.com.stimuli.loading:BulkLoader/remove' isStatic='false' isFinal='false' isOverride='false'  param_names='key;internalCall' param_types='*;Boolean' param_defaults='undefined;false' result_type='Boolean'>
<description><![CDATA[ This will delete this item from memory. It's content will be inaccessible after that.
          ]]></description>
<param><![CDATA[key A url (as a string or urlrequest) or an id to fetch
          ]]></param>
<param><![CDATA[internalCall If <code>remove</code> has been called internally. End user code should ignore this. 
          ]]></param>
<return><![CDATA[<code>True</code> if an item with that key has been removed, and <code>false</code> othersiwe.
          ]]></return>
</method>
<method name='resumeAll' fullname='br.com.stimuli.loading:BulkLoader/resumeAll' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Resumes all loading operations that were stopped.
          ]]></description>
<return><![CDATA[<code>True</code> if any item was stopped and resumed, false otherwise
        ]]></return>
</method>
<method name='resume' fullname='br.com.stimuli.loading:BulkLoader/resume' isStatic='false' isFinal='false' isOverride='false'  param_names='key' param_types='*' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ Resumes loading of the item. Depending on the environment the player is running, resumed items will be able to use partialy downloaded content. 
          ]]></description>
<param><![CDATA[key The url request, url as a string or a id  from which the asset was loaded. 
          ]]></param>
<return><![CDATA[If a item with that key has resumed loading.
        ]]></return>
</method>
<method name='sortItemsByPriority' fullname='br.com.stimuli.loading:BulkLoader/sortItemsByPriority' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Updates the priority queue
        ]]></description>
</method>
<method name='start' fullname='br.com.stimuli.loading:BulkLoader/start' isStatic='false' isFinal='false' isOverride='false'  param_names='withConnections' param_types='int' param_defaults='-1' result_type='void'>
<description><![CDATA[ Start loading all items added previously
          ]]></description>
<param><![CDATA[withConnections [optional]The maximum number of connections to make at the same time. If specified, will override the parameter passed (if any) to the constructor.
          ]]></param>
<see><![CDATA[#numConnections
          ]]></see>
<see><![CDATA[#see #BulkLoader()
        ]]></see>
</method>
<method name='substituteURLString' fullname='br.com.stimuli.loading:BulkLoader/substituteURLString' isStatic='true' isFinal='false' isOverride='false'  param_names='raw;substitutions' param_types='String;Object' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='toString' fullname='br.com.stimuli.loading:BulkLoader/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[ 
          Returns a string identifing this loaded instace.
        ]]></description>
</method>
<method name='truncateNumber' fullname='br.com.stimuli.loading:BulkLoader/truncateNumber' isStatic='true' isFinal='false' isOverride='false'  param_names='raw;decimals' param_types='Number;int' param_defaults='undefined;2' result_type='Number'>
<description><![CDATA[ ]]></description>
<param><![CDATA[The number to truncate
          ]]></param>
<param><![CDATA[The number of decimals place to preserve.
          ]]></param>
<return><![CDATA[The truncated number.
        ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='whichLoaderHasItem' fullname='br.com.stimuli.loading:BulkLoader/whichLoaderHasItem' isStatic='true' isFinal='false' isOverride='false'  param_names='key' param_types='*' param_defaults='undefined' result_type='br.com.stimuli.loading:BulkLoader'>
<description><![CDATA[ Checks which <code>BulkLoader</code> has an item by the given key.
        ]]></description>
<param><![CDATA[The url (as a <code>String</code> or a <code>URLRequest</code> object)or an id (as a <code>String</code>) by which the item is identifiable.
        ]]></param>
<return><![CDATA[The <code>BulkLoader</code> instance that has the given key or <code>null</code> if no key if found in any loader.
        ]]></return>
</method>
<method name='allowsAutoIDFromFileName' fullname='br.com.stimuli.loading:BulkLoader/allowsAutoIDFromFileName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Determines if an autmatic id created from the file name. If true, when adding and item and NOT specifing an "id" props
          for its properties, an id with the file name will be created altomatically.
          ]]></description>
<example><![CDATA[Automatic id:<listing version="3.0">
          bulkLoader.allowsAutoIDFromFileName = false;
          var item : LoadingItem = bulkLoader.add("background.jpg")
          trace(item.id) //  outputs: null
          // now if allowsAutoIDFromFileName is set to true:
          bulkLoader.allowsAutoIDFromFileName = true;
          var item : LoadingItem = bulkLoader.add("background.jpg")
          trace(item.id) //  outputs: background
          // if you pass an id on the props, it will take precedence over auto created ids:
          bulkLoader.allowsAutoIDFromFileName = id;
          var item : LoadingItem = bulkLoader.add("background.jpg", {id:"small-bg"})
          trace(item.id) //  outputs: small-bg
          </listing>
        ]]></example>
</method>
<method name='bytesLoaded' fullname='br.com.stimuli.loading:BulkLoader/bytesLoaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ The sum of all bytesLoaded for each item.
        ]]></description>
</method>
<method name='bytesTotalCurrent' fullname='br.com.stimuli.loading:BulkLoader/bytesTotalCurrent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ The sum of all bytes loaded so far. 
         If itemsTotal is less than the number of connections, this will be the same as bytesTotal. Else, bytesTotalCurrent will be available as each loading is started.
          ]]></description>
<see><![CDATA[#bytesTotal
        ]]></see>
</method>
<method name='bytesTotal' fullname='br.com.stimuli.loading:BulkLoader/bytesTotal/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ The total bytes to load.
          If the number of items to load is larger than the number of simultaneous connections, bytesTotal will be 0 untill all connections are opened and the number of bytes for all items is known.
          ]]></description>
<see><![CDATA[#bytesTotalCurrent
        ]]></see>
</method>
<method name='contents' fullname='br.com.stimuli.loading:BulkLoader/contents/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ Returns an object where the urls are the keys(as strings) and the loaded contents are the value for that key.
         Each value is typed as an the client must check for the right typing.
          ]]></description>
<return><![CDATA[An object hashed by urls, where values are the downloaded content type of each url. The user mut cast as apropriate.
        ]]></return>
</method>
<method name='get' fullname='br.com.stimuli.loading:BulkLoader/get' isStatic='false' isFinal='false' isOverride='false'  param_names='key' param_types='*' param_defaults='undefined' result_type='br.com.stimuli.loading.loadingtypes:LoadingItem'>
<description><![CDATA[ Used  to fetch an item with a given key. The returned <code>LoadingItem</code> can be used to attach event listeners for the individual items (<code>Event.COMPLETE, ProgressEvent.PROGRESS, Event.START</code>).
          ]]></description>
<param><![CDATA[key A url (as a string or urlrequest) or an id to fetch
          ]]></param>
<return><![CDATA[The corresponding <code>LoadingItem</code> or null if one isn't found.
        ]]></return>
</method>
<method name='highestPriority' fullname='br.com.stimuli.loading:BulkLoader/highestPriority/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Returns the highest priority for all items in this BulkLoader instance. This will check all items, 
          including cancelled items and already downloaded items.
        ]]></description>
</method>
<method name='id' fullname='br.com.stimuli.loading:BulkLoader/id/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ The id of this bulkLoader instance
        ]]></description>
</method>
<method name='isFinished' fullname='br.com.stimuli.loading:BulkLoader/isFinished/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='isRunning' fullname='br.com.stimuli.loading:BulkLoader/isRunning/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ A boolean indicating if the instace has started and has not finished loading all items
        ]]></description>
</method>
<method name='itemsLoaded' fullname='br.com.stimuli.loading:BulkLoader/itemsLoaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 
          Number of items alrealdy loaded.
          Failed or canceled items are not taken into consideration
        ]]></description>
</method>
<method name='itemsTotal' fullname='br.com.stimuli.loading:BulkLoader/itemsTotal/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Total number of items to load.]]></description>
</method>
<method name='items' fullname='br.com.stimuli.loading:BulkLoader/items/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[ Returns a copy of all <code>LoadingItem</code> in this intance. This function makes a copy to avoid 
          users messing with _items (removing items and so forth). Those can be done through functions in BulkLoader.
          ]]></description>
<return><![CDATA[A array that is a shallow copy of all items in the BulkLoader.
        ]]></return>
</method>
<method name='loadedRatio' fullname='br.com.stimuli.loading:BulkLoader/loadedRatio/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[  
          The ratio (0->1) of items to load / items total.
          This number is always reliable.
        ]]></description>
</method>
<method name='logFunction' fullname='br.com.stimuli.loading:BulkLoader/logFunction/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[ The function to be used in logging. By default it's the same as the global function <code>trace</code>. The log function signature is:
          <pre>
          public function myLogFunction(msg : String) : void{}
          </pre>
        ]]></description>
</method>
<method name='name' fullname='br.com.stimuli.loading:BulkLoader/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		The name by which this loader instance can be identified.
		This property is used so you can get a reference to this instance from other classes in your code without having to save and pass it yourself, throught the static method BulkLoader.getLoader(name) .<p/>
		Each name should be unique, as instantiating a BulkLoader with a name already taken will throw an error.
		]]></description>
<see><![CDATA[#getLoaders()
		]]></see>
</method>
<method name='numConnections' fullname='br.com.stimuli.loading:BulkLoader/numConnections/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ The number of simultaneous connections to use. This is per <code>BulkLoader</code> instance.
          ]]></description>
<return><![CDATA[The number of connections used.
          ]]></return>
<see><![CDATA[#start()
        ]]></see>
</method>
<method name='percentLoaded' fullname='br.com.stimuli.loading:BulkLoader/percentLoaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ The percentage (0->1) of bytes loaded.
          Until all connections are opened  this number is not reliable . If you are downloading more items than the number of simultaneous connections, use loadedRatio or weightPercent instead.
          ]]></description>
<see><![CDATA[#loadedRatio
          ]]></see>
<see><![CDATA[#weightPercent
        ]]></see>
</method>
<method name='speed' fullname='br.com.stimuli.loading:BulkLoader/speed/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='stringSubstitutions' fullname='br.com.stimuli.loading:BulkLoader/stringSubstitutions/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ The object, used as a hashed to substitute variables specified on the url used in <code>add</code>.
          Allows to keep common part of urls on one spot only. If later the server path changes, you can 
          change only the stringSubstitutions object to update all items.
          This has to be set before the <code>add</code> calls are made, or else strings won't be expanded.
          ]]></description>
<example><![CDATA[Variable sustitution:<listing version="3.0">
          // All webservices will be at a common path:
          bulkLoader.stringSubstitutions = {
              "web_services": "http://somesite.com/webservices"
          }
          bulkLoader.add("{web_services}/getTime");
          // this will be expanded to http://somesite.com/webservices/getTime
          
          </listing>
          The format expected is {var_name} , where var_name is composed of alphanumeric characters and the underscore. Other characters (.,  [, ], etc) won't work, as they'll clash with the regex used in matching.
          ]]></example>
<see><![CDATA[#add
        ]]></see>
</method>
<method name='totalWeight' fullname='br.com.stimuli.loading:BulkLoader/totalWeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ The sum of weights in all items to load.
          Each item's weight default to 1
        ]]></description>
</method>
<method name='weightPercent' fullname='br.com.stimuli.loading:BulkLoader/weightPercent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ The weighted percent of items loaded(0->1).
          This always returns a reliable value.
        ]]></description>
</method>
<method name='allowsAutoIDFromFileName' fullname='br.com.stimuli.loading:BulkLoader/allowsAutoIDFromFileName/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='itemsLoaded' fullname='br.com.stimuli.loading:BulkLoader/itemsLoaded/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='logFunction' fullname='br.com.stimuli.loading:BulkLoader/logFunction/set' isStatic='false' isFinal='false' isOverride='false'  param_names='func' param_types='Function' param_defaults='undefined' result_type='void'>
<description><![CDATA[ The function to be called for loggin. The loggin function should receive one parameter, the string to be logged. The <code>logFunction</code> defaults to flash's regular trace function. You can use the logFunction to route traces to an alternative place (such as a textfield or some text component in your application). If the <code>logFunction</code> is set to something else that the global <code>trace</code> function, nothing will be traced. A custom <code>logFunction</code>  messages will still be filtered by the <code>logLevel</code> setting.
          ]]></description>
<param><![CDATA[func  The function to be used on loggin.
        ]]></param>
</method>
<method name='stringSubstitutions' fullname='br.com.stimuli.loading:BulkLoader/stringSubstitutions/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='AVAILABLE_EXTENSIONS' fullname='br.com.stimuli.loading:BulkLoader/AVAILABLE_EXTENSIONS' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ List of all file extensions that the <code>BulkLoader</code> knows how to guess.
          Availabe types: swf, jpg, jpeg, gif, png. ]]></description>
</field>
<field name='AVAILABLE_TYPES' fullname='br.com.stimuli.loading:BulkLoader/AVAILABLE_TYPES' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='CAN_BEGIN_PLAYING' fullname='br.com.stimuli.loading:BulkLoader/CAN_BEGIN_PLAYING' type='String' isStatic='true' isConst='true' defaultValue='canBeginPlaying' >
<description><![CDATA[ 
          The name of the event 
          ]]></description>
<eventType><![CDATA[error
        ]]></eventType>
</field>
<field name='CHECK_POLICY_FILE' fullname='br.com.stimuli.loading:BulkLoader/CHECK_POLICY_FILE' type='String' isStatic='true' isConst='true' defaultValue='checkPolicyFile' >
</field>
<field name='COMPLETE' fullname='br.com.stimuli.loading:BulkLoader/COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='complete' >
<description><![CDATA[ 
          The name of the event 
          ]]></description>
<eventType><![CDATA[complete
        ]]></eventType>
</field>
<field name='CONTEXT' fullname='br.com.stimuli.loading:BulkLoader/CONTEXT' type='String' isStatic='true' isConst='true' defaultValue='context' >
<description><![CDATA[ An object definig the loading context for this load operario. If this item is of <code>TYPE_SOUND</code>, a <code>SoundLoaderContext</code> is expected. If it's a <code>TYPE_IMAGE</code> a LoaderContext should be passed. Checked when adding a new item to load.
		]]></description>
<see><![CDATA[#add()
		]]></see>
</field>
<field name='DEFAULT_LOG_LEVEL' fullname='br.com.stimuli.loading:BulkLoader/DEFAULT_LOG_LEVEL' type='int' isStatic='true' isConst='true' defaultValue='4' >
<description><![CDATA[The logging level <code>BulkLoader</code> will use. 
        ]]></description>
<see><![CDATA[#LOG_VERBOSE
        ]]></see>
<see><![CDATA[#LOG_SILENT
        ]]></see>
<see><![CDATA[#LOG_ERRORS
        ]]></see>
<see><![CDATA[#LOG_INFO
        ]]></see>
</field>
<field name='DEFAULT_NUM_CONNECTIONS' fullname='br.com.stimuli.loading:BulkLoader/DEFAULT_NUM_CONNECTIONS' type='int' isStatic='true' isConst='true' defaultValue='12' >
</field>
<field name='ERROR' fullname='br.com.stimuli.loading:BulkLoader/ERROR' type='String' isStatic='true' isConst='true' defaultValue='error' >
<description><![CDATA[ 
          The name of the event 
          ]]></description>
<eventType><![CDATA[error
        ]]></eventType>
</field>
<field name='GENERAL_AVAILABLE_PROPS' fullname='br.com.stimuli.loading:BulkLoader/GENERAL_AVAILABLE_PROPS' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='HEADERS' fullname='br.com.stimuli.loading:BulkLoader/HEADERS' type='String' isStatic='true' isConst='true' defaultValue='headers' >
<description><![CDATA[ An array of RequestHeader objects to be used when contructing the <code>URLRequest</code> object. If the <code>url</code> parameter is passed as a <code>URLRequest</code> object it will be ignored. Checked when adding a new item to load.
		]]></description>
<see><![CDATA[#add()
		]]></see>
</field>
<field name='HTTP_STATUS' fullname='br.com.stimuli.loading:BulkLoader/HTTP_STATUS' type='String' isStatic='true' isConst='true' defaultValue='httpStatus' >
<description><![CDATA[ 
          The name of the event 
          ]]></description>
<eventType><![CDATA[httpStatus
        ]]></eventType>
</field>
<field name='ID' fullname='br.com.stimuli.loading:BulkLoader/ID' type='String' isStatic='true' isConst='true' defaultValue='id' >
<description><![CDATA[ A <code>String</code> to be used to identify an item to load, can be used in any method that fetches content (as the key parameters), stops, removes and resume items. Checked when adding a new item to load.
		]]></description>
<see><![CDATA[#add()
		]]></see>
<see><![CDATA[#getContent()
		]]></see>
<see><![CDATA[#pause()
		]]></see>
<see><![CDATA[#resume()
		]]></see>
<see><![CDATA[#removeItem()
		]]></see>
</field>
<field name='IMAGE_EXTENSIONS' fullname='br.com.stimuli.loading:BulkLoader/IMAGE_EXTENSIONS' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ List of file extensions that will be automagically use a <code>Loader</code> object for loading.
          Availabe types: swf, jpg, jpeg, gif, png, image.
        ]]></description>
</field>
<field name='LOG_ERRORS' fullname='br.com.stimuli.loading:BulkLoader/LOG_ERRORS' type='int' isStatic='true' isConst='true' defaultValue='4' >
<description><![CDATA[Will only trace errors. Defaut level]]></description>
</field>
<field name='LOG_INFO' fullname='br.com.stimuli.loading:BulkLoader/LOG_INFO' type='int' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[Ouputs noteworthy events such as when an item is started / finished loading.]]></description>
</field>
<field name='LOG_SILENT' fullname='br.com.stimuli.loading:BulkLoader/LOG_SILENT' type='int' isStatic='true' isConst='true' defaultValue='10' >
<description><![CDATA[Nothing will be logged]]></description>
</field>
<field name='LOG_VERBOSE' fullname='br.com.stimuli.loading:BulkLoader/LOG_VERBOSE' type='int' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[ LogLevel: Outputs everything that is happening. Usefull for debugging. ]]></description>
</field>
<field name='LOG_WARNINGS' fullname='br.com.stimuli.loading:BulkLoader/LOG_WARNINGS' type='int' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[Ouputs noteworthy events such as when an item is started / finished loading.]]></description>
</field>
<field name='MAX_TRIES' fullname='br.com.stimuli.loading:BulkLoader/MAX_TRIES' type='String' isStatic='true' isConst='true' defaultValue='maxTries' >
<description><![CDATA[ The number, as an <code>int</code>, to retry downloading an item in case it fails. Checked when adding a new item to load.
		]]></description>
<default><![CDATA[3
		]]></default>
<see><![CDATA[#add()
		]]></see>
</field>
<field name='MOVIECLIP_EXTENSIONS' fullname='br.com.stimuli.loading:BulkLoader/MOVIECLIP_EXTENSIONS' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='OPEN' fullname='br.com.stimuli.loading:BulkLoader/OPEN' type='String' isStatic='true' isConst='true' defaultValue='open' >
<description><![CDATA[ 
          The name of the event 
          ]]></description>
<eventType><![CDATA[error
        ]]></eventType>
</field>
<field name='PAUSED_AT_START' fullname='br.com.stimuli.loading:BulkLoader/PAUSED_AT_START' type='String' isStatic='true' isConst='true' defaultValue='pausedAtStart' >
</field>
<field name='PREVENT_CACHING' fullname='br.com.stimuli.loading:BulkLoader/PREVENT_CACHING' type='String' isStatic='true' isConst='true' defaultValue='preventCache' >
<description><![CDATA[ If <code>true</code> a random query (or post data parameter) will be added to prevent caching. Checked when adding a new item to load.
		]]></description>
<see><![CDATA[#add()
		]]></see>
</field>
<field name='PRIORITY' fullname='br.com.stimuli.loading:BulkLoader/PRIORITY' type='String' isStatic='true' isConst='true' defaultValue='priority' >
<description><![CDATA[ An <code>int</code> that controls which items are loaded first. Items with a higher <code>PRIORITY</code> will load first. If more than one item has the same <code>PRIORITY</code> number, the order in which they are added will be taken into consideration. Checked when adding a new item to load.
		]]></description>
<see><![CDATA[#add()
		]]></see>
</field>
<field name='PROGRESS' fullname='br.com.stimuli.loading:BulkLoader/PROGRESS' type='String' isStatic='true' isConst='true' defaultValue='progress' >
<description><![CDATA[ 
          The name of the event 
          ]]></description>
<eventType><![CDATA[progress
        ]]></eventType>
</field>
<field name='SECURITY_ERROR' fullname='br.com.stimuli.loading:BulkLoader/SECURITY_ERROR' type='String' isStatic='true' isConst='true' defaultValue='securityError' >
<description><![CDATA[ 
          The name of the event 
          ]]></description>
<eventType><![CDATA[securityError
        ]]></eventType>
</field>
<field name='SOUND_EXTENSIONS' fullname='br.com.stimuli.loading:BulkLoader/SOUND_EXTENSIONS' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ List of file extensions that will be automagically treated as sound for loading.
         Availabe types: mp3, f4a, f4b.
        ]]></description>
</field>
<field name='TEXT_EXTENSIONS' fullname='br.com.stimuli.loading:BulkLoader/TEXT_EXTENSIONS' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ List of file extensions that will be automagically treated as text for loading.
          Availabe types: txt, js, xml, php, asp .
        ]]></description>
</field>
<field name='TYPE_BINARY' fullname='br.com.stimuli.loading:BulkLoader/TYPE_BINARY' type='String' isStatic='true' isConst='true' defaultValue='binary' >
<description><![CDATA[ Tells this class to use a <code>Loader</code> object to load the item.]]></description>
</field>
<field name='TYPE_IMAGE' fullname='br.com.stimuli.loading:BulkLoader/TYPE_IMAGE' type='String' isStatic='true' isConst='true' defaultValue='image' >
<description><![CDATA[ Tells this class to use a <code>Loader</code> object to load the item.]]></description>
</field>
<field name='TYPE_MOVIECLIP' fullname='br.com.stimuli.loading:BulkLoader/TYPE_MOVIECLIP' type='String' isStatic='true' isConst='true' defaultValue='movieclip' >
<description><![CDATA[ Tells this class to use a <code>Loader</code> object to load the item.]]></description>
</field>
<field name='TYPE_SOUND' fullname='br.com.stimuli.loading:BulkLoader/TYPE_SOUND' type='String' isStatic='true' isConst='true' defaultValue='sound' >
<description><![CDATA[ Tells this class to use a <code>Sound</code> object to load the item.]]></description>
</field>
<field name='TYPE_TEXT' fullname='br.com.stimuli.loading:BulkLoader/TYPE_TEXT' type='String' isStatic='true' isConst='true' defaultValue='text' >
<description><![CDATA[ Tells this class to use a <code>URLRequest</code> object to load the item.]]></description>
</field>
<field name='TYPE_VIDEO' fullname='br.com.stimuli.loading:BulkLoader/TYPE_VIDEO' type='String' isStatic='true' isConst='true' defaultValue='video' >
<description><![CDATA[ Tells this class to use a <code>NetStream</code> object to load the item.]]></description>
</field>
<field name='TYPE_XML' fullname='br.com.stimuli.loading:BulkLoader/TYPE_XML' type='String' isStatic='true' isConst='true' defaultValue='xml' >
<description><![CDATA[ Tells this class to use a <code>XML</code> object to load the item.]]></description>
</field>
<field name='VERSION' fullname='br.com.stimuli.loading:BulkLoader/VERSION' type='String' isStatic='true' isConst='true' defaultValue='$Id$' >
<description><![CDATA[ Version. Useful for debugging. ]]></description>
</field>
<field name='VIDEO_EXTENSIONS' fullname='br.com.stimuli.loading:BulkLoader/VIDEO_EXTENSIONS' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ List of file extensions that will be automagically treated as video for loading. 
         Availabe types: flv, f4v, f4p. 
        ]]></description>
</field>
<field name='WEIGHT' fullname='br.com.stimuli.loading:BulkLoader/WEIGHT' type='String' isStatic='true' isConst='true' defaultValue='weight' >
</field>
<field name='XML_EXTENSIONS' fullname='br.com.stimuli.loading:BulkLoader/XML_EXTENSIONS' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_additionIndex' fullname='br.com.stimuli.loading:BulkLoader/_additionIndex' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_allLoaders' fullname='br.com.stimuli.loading:BulkLoader/_allLoaders' type='Object' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_allowsAutoIDFromFileName' fullname='br.com.stimuli.loading:BulkLoader/_allowsAutoIDFromFileName' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bytesLoaded' fullname='br.com.stimuli.loading:BulkLoader/_bytesLoaded' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bytesTotalCurrent' fullname='br.com.stimuli.loading:BulkLoader/_bytesTotalCurrent' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bytesTotal' fullname='br.com.stimuli.loading:BulkLoader/_bytesTotal' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_connections' fullname='br.com.stimuli.loading:BulkLoader/_connections' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_contents' fullname='br.com.stimuli.loading:BulkLoader/_contents' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_customTypesExtensions' fullname='br.com.stimuli.loading:BulkLoader/_customTypesExtensions' type='Object' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_endTIme' fullname='br.com.stimuli.loading:BulkLoader/_endTIme' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_id' fullname='br.com.stimuli.loading:BulkLoader/_id' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_instancesCreated' fullname='br.com.stimuli.loading:BulkLoader/_instancesCreated' type='int' isStatic='true' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_isFinished' fullname='br.com.stimuli.loading:BulkLoader/_isFinished' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_isPaused' fullname='br.com.stimuli.loading:BulkLoader/_isPaused' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_isRunning' fullname='br.com.stimuli.loading:BulkLoader/_isRunning' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_itemsLoaded' fullname='br.com.stimuli.loading:BulkLoader/_itemsLoaded' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[  ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_itemsTotal' fullname='br.com.stimuli.loading:BulkLoader/_itemsTotal' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_items' fullname='br.com.stimuli.loading:BulkLoader/_items' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_lastBytesCheck' fullname='br.com.stimuli.loading:BulkLoader/_lastBytesCheck' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_lastSpeedCheck' fullname='br.com.stimuli.loading:BulkLoader/_lastSpeedCheck' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_loadedRatio' fullname='br.com.stimuli.loading:BulkLoader/_loadedRatio' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[  
          ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_logFunction' fullname='br.com.stimuli.loading:BulkLoader/_logFunction' type='Function' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_name' fullname='br.com.stimuli.loading:BulkLoader/_name' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_numConnections' fullname='br.com.stimuli.loading:BulkLoader/_numConnections' type='int' isStatic='false' isConst='false' defaultValue='12' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_percentLoaded' fullname='br.com.stimuli.loading:BulkLoader/_percentLoaded' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_speedTotal' fullname='br.com.stimuli.loading:BulkLoader/_speedTotal' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_speed' fullname='br.com.stimuli.loading:BulkLoader/_speed' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_startTime' fullname='br.com.stimuli.loading:BulkLoader/_startTime' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_stringSubstitutions' fullname='br.com.stimuli.loading:BulkLoader/_stringSubstitutions' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_totalWeight' fullname='br.com.stimuli.loading:BulkLoader/_totalWeight' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_typeClasses' fullname='br.com.stimuli.loading:BulkLoader/_typeClasses' type='Object' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_weightPercent' fullname='br.com.stimuli.loading:BulkLoader/_weightPercent' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='avgLatency' fullname='br.com.stimuli.loading:BulkLoader/avgLatency' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[The average latency (in miliseconds) for the entire loading.]]></description>
</field>
<field name='logLevel' fullname='br.com.stimuli.loading:BulkLoader/logLevel' type='int' isStatic='false' isConst='false' defaultValue='4' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='maxConnectionsPerHost' fullname='br.com.stimuli.loading:BulkLoader/maxConnectionsPerHost' type='int' isStatic='false' isConst='false' defaultValue='2' >
</field>
<field name='speedAvg' fullname='br.com.stimuli.loading:BulkLoader/speedAvg' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[The average speed (in kb/s) for the entire loading.]]></description>
</field>
<field name='totalTime' fullname='br.com.stimuli.loading:BulkLoader/totalTime' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[Time in seconds for the whole loading. Only available after everything is laoded]]></description>
</field>
<classRec name='BulkProgressEvent' fullname='br.com.stimuli.loading:BulkProgressEvent' sourcefile='E:\work\happyMagic\src\client\libs\br\com\stimuli\loading\BulkProgressEvent.as' namespace='br.com.stimuli.loading' access='public' baseclass='flash.events:ProgressEvent' isFinal='false' isDynamic='false' >
<description><![CDATA[
	An event that holds information about the status of a <code>BulkLoader</code>.
	 
	  As this event subclasses <code>ProgressEvent</code>, you can choose to listen to <code>BulkProgressEvent</code> or <code>ProgressEvent</code> instances, but this class provides more useful information about loading status.
	 
	]]></description>
<author><![CDATA[Arthur Debert
	]]></author>
<langversion><![CDATA[ActionScript 3.0
	]]></langversion>
<playerversion><![CDATA[Flash 9.0
		]]></playerversion>
<since><![CDATA[15.09.2007
	]]></since>
</classRec>
<method name='BulkProgressEvent' fullname='br.com.stimuli.loading:BulkProgressEvent/BulkProgressEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='name;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;true;false' result_type='*'>
</method>
<method name='clone' fullname='br.com.stimuli.loading:BulkProgressEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='loadingStatus' fullname='br.com.stimuli.loading:BulkProgressEvent/loadingStatus' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ Returns a <code>String</code> will all available information for this event.
		]]></description>
<return><![CDATA[A code>String</code> will loading information.
		]]></return>
</method>
<method name='setInfo' fullname='br.com.stimuli.loading:BulkProgressEvent/setInfo' isStatic='false' isFinal='false' isOverride='false'  param_names='bytesLoaded;bytesTotal;bytesTotalCurrent;itemsLoaded;itemsTotal;weightPercent' param_types='int;int;int;int;int;Number' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ Sets loading information.]]></description>
</method>
<method name='toString' fullname='br.com.stimuli.loading:BulkProgressEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<method name='percentLoaded' fullname='br.com.stimuli.loading:BulkProgressEvent/percentLoaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ A number between 0 - 1 that indicates progress regarding bytes ]]></description>
</method>
<method name='ratioLoaded' fullname='br.com.stimuli.loading:BulkProgressEvent/ratioLoaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ The ratio (0-1) loaded (number of items loaded / number of items total) ]]></description>
</method>
<method name='weightPercent' fullname='br.com.stimuli.loading:BulkProgressEvent/weightPercent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ A number between 0 - 1 that indicates progress regarding weights ]]></description>
</method>
<method name='percentLoaded' fullname='br.com.stimuli.loading:BulkProgressEvent/percentLoaded/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='ratioLoaded' fullname='br.com.stimuli.loading:BulkProgressEvent/ratioLoaded/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='weightPercent' fullname='br.com.stimuli.loading:BulkProgressEvent/weightPercent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='COMPLETE' fullname='br.com.stimuli.loading:BulkProgressEvent/COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='complete' >
</field>
<field name='PROGRESS' fullname='br.com.stimuli.loading:BulkProgressEvent/PROGRESS' type='String' isStatic='true' isConst='true' defaultValue='progress' >
</field>
<field name='_percentLoaded' fullname='br.com.stimuli.loading:BulkProgressEvent/_percentLoaded' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_ratioLoaded' fullname='br.com.stimuli.loading:BulkProgressEvent/_ratioLoaded' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_weightPercent' fullname='br.com.stimuli.loading:BulkProgressEvent/_weightPercent' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='bytesTotalCurrent' fullname='br.com.stimuli.loading:BulkProgressEvent/bytesTotalCurrent' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ How many bytes have loaded so far.]]></description>
</field>
<field name='itemsLoaded' fullname='br.com.stimuli.loading:BulkProgressEvent/itemsLoaded' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ Number of items already loaded ]]></description>
</field>
<field name='itemsTotal' fullname='br.com.stimuli.loading:BulkProgressEvent/itemsTotal' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ Number of items to be loaded ]]></description>
</field>
<field name='name' fullname='br.com.stimuli.loading:BulkProgressEvent/name' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='AbstractQueue' fullname='happyfish.util.queue:AbstractQueue' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\util\queue\AbstractQueue.as' namespace='happyfish.util.queue' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
</classRec>
<method name='AbstractQueue' fullname='happyfish.util.queue:AbstractQueue/AbstractQueue' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='getInstance' fullname='happyfish.util.queue:AbstractQueue/getInstance' isStatic='true' isFinal='false' isOverride='false'  param_names='ref' param_types='Class' param_defaults='undefined' result_type='*'>
<description><![CDATA[

         获取单例类，若不存在则返回空

         

         ]]></description>
<param><![CDATA[ref	继承自Singleton的类

         ]]></param>
<return><![CDATA[

         

         ]]></return>
</method>
<method name='init' fullname='happyfish.util.queue:AbstractQueue/init' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='next' fullname='happyfish.util.queue:AbstractQueue/next' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='process' fullname='happyfish.util.queue:AbstractQueue/process' isStatic='false' isFinal='false' isOverride='false'  param_names='item_basic' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='push' fullname='happyfish.util.queue:AbstractQueue/push' isStatic='false' isFinal='false' isOverride='false'  param_names='item_basic' param_types='*' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 TODO 如果queue数组里有,则不插入

		 ]]></description>
<param><![CDATA[item_basic

		 ]]></param>
</method>
<method name='run' fullname='happyfish.util.queue:AbstractQueue/run' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='dict' fullname='happyfish.util.queue:AbstractQueue/private:dict' type='flash.utils:Dictionary' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='is_running' fullname='happyfish.util.queue:AbstractQueue/is_running' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='queue' fullname='happyfish.util.queue:AbstractQueue/queue' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<classRec name='BitmapCacher' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\cacher\bitmapMc\cacher\BitmapCacher.as' namespace='happyfish.cacher.bitmapMc.cacher' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
</classRec>
<method name='BitmapCacher' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/BitmapCacher' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='createCache' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/createCache' isStatic='false' isFinal='false' isOverride='false'  param_names='mcClass' param_types='Class' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 创建缓存 

		 ]]></description>
</method>
<method name='diffBitmap' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:diffBitmap' isStatic='false' isFinal='false' isOverride='false'  param_names='$bitmap_left;$bitmap_right' param_types='flash.display:BitmapData;flash.display:BitmapData' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 相同返回true,不同返回false

		 ]]></description>
</method>
<method name='getBasicBitmapMc' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/getBasicBitmapMc' isStatic='false' isFinal='false' isOverride='false'  param_names='mcClass' param_types='Class' param_defaults='undefined' result_type='*'>
</method>
<method name='getBitmapMc' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/getBitmapMc' isStatic='false' isFinal='false' isOverride='false'  param_names='mcClass' param_types='Class' param_defaults='undefined' result_type='happyfish.cacher.bitmapMc.display:BitmapMc'>
</method>
<method name='getBitmapMovieMc' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/getBitmapMovieMc' isStatic='false' isFinal='false' isOverride='false'  param_names='mcClass' param_types='Class' param_defaults='undefined' result_type='happyfish.cacher.bitmapMc.display:BitmapMovieMc'>
</method>
<method name='getInstance' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.cacher.bitmapMc.cacher:BitmapCacher'>
</method>
<method name='isCached' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/isCached' isStatic='false' isFinal='false' isOverride='false'  param_names='mcClass' param_types='Class' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='readCompleteHandler' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:readCompleteHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='setMaxRect' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:setMaxRect' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 获取此mc最大的区域

		 ]]></description>
</method>
<method name='timeHandler' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:timeHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
</method>
<field name='TIME_INTERVAL' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:TIME_INTERVAL' type='int' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='_readComplete' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:_readComplete' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='bitmap_cache_data' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:bitmap_cache_data' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='bitmap_cache_labels' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:bitmap_cache_labels' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='bitmap_cache_offset_x' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:bitmap_cache_offset_x' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='bitmap_cache_offset_y' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:bitmap_cache_offset_y' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='class_name' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:class_name' type='String' isStatic='false' isConst='false' >
</field>
<field name='created' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:created' type='uint' isStatic='false' isConst='false' >
</field>
<field name='cur_rect' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:cur_rect' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
</field>
<field name='endFrame' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:endFrame' type='int' isStatic='false' isConst='false' >
</field>
<field name='labels' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:labels' type='Object' isStatic='false' isConst='false' >
</field>
<field name='mc' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/mc' type='flash.display:MovieClip' isStatic='false' isConst='false' >
</field>
<field name='pre_bitmapData' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:pre_bitmapData' type='flash.display:BitmapData' isStatic='false' isConst='false' >
</field>
<field name='pre_lable' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:pre_lable' type='String' isStatic='false' isConst='false' defaultValue='oxuidhwk' >
</field>
<field name='pre_rect' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:pre_rect' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
</field>
<field name='queueArray' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:queueArray' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='readFrame' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:readFrame' type='int' isStatic='false' isConst='false' >
</field>
<field name='rectMaxHeight' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:rectMaxHeight' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='rectMaxWidth' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:rectMaxWidth' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='rectMax' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:rectMax' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
</field>
<field name='rect' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/rect' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
</field>
<field name='result' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:result' type='Array' isStatic='false' isConst='false' >
</field>
<field name='single' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:single' type='happyfish.cacher.bitmapMc.cacher:BitmapCacher' isStatic='true' isConst='false' >
</field>
<field name='startTime' fullname='happyfish.cacher.bitmapMc.cacher:BitmapCacher/private:startTime' type='Number' isStatic='false' isConst='false' >
</field>
<classRec name='AwardResultView' fullname='happymagic.display.view.ui:AwardResultView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\ui\AwardResultView.as' namespace='happymagic.display.view.ui' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='AwardResultView' fullname='happymagic.display.view.ui:AwardResultView/AwardResultView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.ui:AwardResultView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.ui:AwardResultView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='awardsMc' fullname='happymagic.display.view.ui:AwardResultView/private:awardsMc' type='happymagic.display.view.task:TaskNeedItemListView' isStatic='false' isConst='false' >
</field>
<field name='data' fullname='happymagic.display.view.ui:AwardResultView/private:data' type='Object' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.ui:AwardResultView/private:iview' type='awardResultUi' isStatic='false' isConst='false' >
</field>
<classRec name='PersonPaoView' fullname='happymagic.display.view.ui:PersonPaoView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\ui\PersonPaoView.as' namespace='happymagic.display.view.ui' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='PersonPaoView' fullname='happymagic.display.view.ui:PersonPaoView/PersonPaoView' isStatic='false' isFinal='false' isOverride='false'  param_names='_target;_iconClass;showPao' param_types='happyfish.scene.world.grid:IsoItem;String;Boolean' param_defaults='undefined;undefined;false' result_type='*'>
</method>
<method name='initPosition' fullname='happymagic.display.view.ui:PersonPaoView/initPosition' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='remove' fullname='happymagic.display.view.ui:PersonPaoView/remove' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='bg' fullname='happymagic.display.view.ui:PersonPaoView/private:bg' type='ui_tanchupao' isStatic='false' isConst='false' >
</field>
<field name='bubble' fullname='happymagic.display.view.ui:PersonPaoView/private:bubble' type='happyfish.display.view:IconView' isStatic='false' isConst='false' >
</field>
<field name='iconClass' fullname='happymagic.display.view.ui:PersonPaoView/private:iconClass' type='String' isStatic='false' isConst='false' >
</field>
<field name='target' fullname='happymagic.display.view.ui:PersonPaoView/private:target' type='happyfish.scene.world.grid:IsoItem' isStatic='false' isConst='false' >
</field>
<classRec name='NeedIconView' fullname='happymagic.display.view.ui:NeedIconView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\ui\NeedIconView.as' namespace='happymagic.display.view.ui' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='NeedIconView' fullname='happymagic.display.view.ui:NeedIconView/NeedIconView' isStatic='false' isFinal='false' isOverride='false'  param_names='_w;_h' param_types='Number;Number' param_defaults='55;45' result_type='*'>
</method>
<method name='setData' fullname='happymagic.display.view.ui:NeedIconView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value;_num;_times;_uiClass' param_types='*;uint;uint;Class' param_defaults='undefined;undefined;1;null' result_type='void'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[value 	1 2 3 4代表水晶需求, itemClassVo或DecorClassVo代表物品和装饰物

		 ]]></param>
</method>
<method name='setTimes' fullname='happymagic.display.view.ui:NeedIconView/setTimes' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<field name='CRYSTAL' fullname='happymagic.display.view.ui:NeedIconView/CRYSTAL' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='DECOR' fullname='happymagic.display.view.ui:NeedIconView/DECOR' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='ITEM' fullname='happymagic.display.view.ui:NeedIconView/ITEM' type='uint' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='body' fullname='happymagic.display.view.ui:NeedIconView/private:body' type='flash.display:MovieClip' isStatic='false' isConst='false' >
</field>
<field name='data' fullname='happymagic.display.view.ui:NeedIconView/data' type='' isStatic='false' isConst='false' >
</field>
<field name='maxHeight' fullname='happymagic.display.view.ui:NeedIconView/private:maxHeight' type='Number' isStatic='false' isConst='false' >
</field>
<field name='maxWidth' fullname='happymagic.display.view.ui:NeedIconView/private:maxWidth' type='Number' isStatic='false' isConst='false' >
</field>
<field name='num' fullname='happymagic.display.view.ui:NeedIconView/num' type='uint' isStatic='false' isConst='false' >
</field>
<field name='times' fullname='happymagic.display.view.ui:NeedIconView/times' type='uint' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='happymagic.display.view.ui:NeedIconView/type' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='NeedCrystalGridView' fullname='happymagic.display.view.ui:NeedCrystalGridView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\ui\NeedCrystalGridView.as' namespace='happymagic.display.view.ui' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='NeedCrystalGridView' fullname='happymagic.display.view.ui:NeedCrystalGridView/NeedCrystalGridView' isStatic='false' isFinal='false' isOverride='false'  param_names='_rect' param_types='flash.geom:Rectangle' param_defaults='undefined' result_type='*'>
</method>
<method name='addOneType' fullname='happymagic.display.view.ui:NeedCrystalGridView/addOneType' isStatic='false' isFinal='false' isOverride='false'  param_names='type;num' param_types='uint;int' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='add' fullname='happymagic.display.view.ui:NeedCrystalGridView/add' isStatic='false' isFinal='false' isOverride='false'  param_names='args' param_types='restParam' param_defaults='undefined' result_type='void'>
</method>
<method name='layout' fullname='happymagic.display.view.ui:NeedCrystalGridView/layout' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.ui:NeedCrystalGridView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='_red;_blue;_green;_gem' param_types='uint;uint;uint;uint' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
</method>
<field name='blue' fullname='happymagic.display.view.ui:NeedCrystalGridView/private:blue' type='uint' isStatic='false' isConst='false' >
</field>
<field name='gem' fullname='happymagic.display.view.ui:NeedCrystalGridView/private:gem' type='uint' isStatic='false' isConst='false' >
</field>
<field name='green' fullname='happymagic.display.view.ui:NeedCrystalGridView/private:green' type='uint' isStatic='false' isConst='false' >
</field>
<field name='layouter' fullname='happymagic.display.view.ui:NeedCrystalGridView/layouter' type='xrope:HBoxLayout' isStatic='false' isConst='false' >
</field>
<field name='maxRect' fullname='happymagic.display.view.ui:NeedCrystalGridView/private:maxRect' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
</field>
<field name='red' fullname='happymagic.display.view.ui:NeedCrystalGridView/private:red' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='UserFaceView' fullname='happymagic.display.view.ui:UserFaceView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\ui\UserFaceView.as' namespace='happymagic.display.view.ui' access='public' baseclass='userFaceUi' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='UserFaceView' fullname='happymagic.display.view.ui:UserFaceView/UserFaceView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='setData' fullname='happymagic.display.view.ui:UserFaceView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='user' param_types='happymagic.model.vo:UserVo' param_defaults='undefined' result_type='void'>
</method>
<field name='data' fullname='happymagic.display.view.ui:UserFaceView/private:data' type='happymagic.model.vo:UserVo' isStatic='false' isConst='false' >
</field>
<field name='face' fullname='happymagic.display.view.ui:UserFaceView/private:face' type='happyfish.display.ui:FaceView' isStatic='false' isConst='false' >
</field>
<classRec name='NeedCrystalLabelView' fullname='happymagic.display.view.ui:NeedCrystalLabelView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\ui\NeedCrystalLabelView.as' namespace='happymagic.display.view.ui' access='public' baseclass='needCrystalLabel' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='NeedCrystalLabelView' fullname='happymagic.display.view.ui:NeedCrystalLabelView/NeedCrystalLabelView' isStatic='false' isFinal='false' isOverride='false'  param_names='_type;_num;showEnough' param_types='uint;int;Boolean' param_defaults='undefined;undefined;true' result_type='*'>
</method>
<field name='enough' fullname='happymagic.display.view.ui:NeedCrystalLabelView/enough' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='num' fullname='happymagic.display.view.ui:NeedCrystalLabelView/private:num' type='int' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='happymagic.display.view.ui:NeedCrystalLabelView/private:type' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='NpcChatsView' fullname='happymagic.scene.world.bigScene:NpcChatsView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\bigScene\NpcChatsView.as' namespace='happymagic.scene.world.bigScene' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='NpcChatsView' fullname='happymagic.scene.world.bigScene:NpcChatsView/NpcChatsView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.scene.world.bigScene:NpcChatsView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='initTxt' fullname='happymagic.scene.world.bigScene:NpcChatsView/private:initTxt' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='randomChat' fullname='happymagic.scene.world.bigScene:NpcChatsView/private:randomChat' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setData' fullname='happymagic.scene.world.bigScene:NpcChatsView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='npc' param_types='happymagic.model.vo:NpcVo' param_defaults='undefined' result_type='void'>
</method>
<field name='chats' fullname='happymagic.scene.world.bigScene:NpcChatsView/private:chats' type='Array' isStatic='false' isConst='false' >
</field>
<field name='currentChatIndex' fullname='happymagic.scene.world.bigScene:NpcChatsView/private:currentChatIndex' type='uint' isStatic='false' isConst='false' >
</field>
<field name='data' fullname='happymagic.scene.world.bigScene:NpcChatsView/private:data' type='happymagic.model.vo:NpcVo' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.scene.world.bigScene:NpcChatsView/private:iview' type='npcChatsUi' isStatic='false' isConst='false' >
</field>
<field name='npcIcon' fullname='happymagic.scene.world.bigScene:NpcChatsView/private:npcIcon' type='happyfish.display.view:IconView' isStatic='false' isConst='false' >
</field>
<classRec name='MassesView' fullname='happymagic.scene.world.bigScene:MassesView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\bigScene\MassesView.as' namespace='happymagic.scene.world.bigScene' access='public' baseclass='happyfish.scene.world.grid:Person' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='MassesView' fullname='happymagic.scene.world.bigScene:MassesView/MassesView' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$worldState;__callBack' param_types='Object;happyfish.scene.world:WorldState;Function' param_defaults='undefined;undefined;null' result_type='*'>
</method>
<method name='fiddle_stop' fullname='happymagic.scene.world.bigScene:MassesView/fiddle_stop' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 闲逛到位后,做出表现,然后再次闲逛

		 ]]></description>
</method>
<method name='fiddle' fullname='happymagic.scene.world.bigScene:MassesView/fiddle' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 开始闲逛

		 ]]></description>
</method>
<method name='makeView' fullname='happymagic.scene.world.bigScene:MassesView/protected:makeView' isStatic='false' isFinal='false' isOverride='true'  result_type='happyfish.scene.iso:IsoSprite'>
</method>
<method name='startFiddle' fullname='happymagic.scene.world.bigScene:MassesView/private:startFiddle' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='view_complete' fullname='happymagic.scene.world.bigScene:MassesView/protected:view_complete' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<classRec name='BigSceneNpcView' fullname='happymagic.scene.world.bigScene:BigSceneNpcView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\bigScene\BigSceneNpcView.as' namespace='happymagic.scene.world.bigScene' access='public' baseclass='happyfish.scene.world.grid:Person' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='BigSceneNpcView' fullname='happymagic.scene.world.bigScene:BigSceneNpcView/BigSceneNpcView' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$worldState;__callBack' param_types='Object;happyfish.scene.world:WorldState;Function' param_defaults='undefined;undefined;null' result_type='*'>
</method>
<method name='clear' fullname='happymagic.scene.world.bigScene:BigSceneNpcView/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clickFun' fullname='happymagic.scene.world.bigScene:BigSceneNpcView/protected:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<classRec name='BigSceneBg' fullname='happymagic.scene.world.bigScene:BigSceneBg' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\bigScene\BigSceneBg.as' namespace='happymagic.scene.world.bigScene' access='public' baseclass='flash.display:Bitmap' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='BigSceneBg' fullname='happymagic.scene.world.bigScene:BigSceneBg/BigSceneBg' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='create' fullname='happymagic.scene.world.bigScene:BigSceneBg/private:create' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='loadClass_complete' fullname='happymagic.scene.world.bigScene:BigSceneBg/private:loadClass_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='loadClass' fullname='happymagic.scene.world.bigScene:BigSceneBg/loadClass' isStatic='false' isFinal='false' isOverride='false'  param_names='_className' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='setData' fullname='happymagic.scene.world.bigScene:BigSceneBg/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='className' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='className' fullname='happymagic.scene.world.bigScene:BigSceneBg/className' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='EnemyView' fullname='happymagic.scene.world.bigScene:EnemyView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\bigScene\EnemyView.as' namespace='happymagic.scene.world.bigScene' access='public' baseclass='happymagic.scene.world.bigScene:BigSceneNpcView' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='EnemyView' fullname='happymagic.scene.world.bigScene:EnemyView/EnemyView' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$worldState;__callBack' param_types='happymagic.model.vo:EnemyVo;happyfish.scene.world:WorldState;Function' param_defaults='undefined;undefined;null' result_type='*'>
</method>
<method name='changeHp' fullname='happymagic.scene.world.bigScene:EnemyView/changeHp' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='clear' fullname='happymagic.scene.world.bigScene:EnemyView/clear' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='flashMvEnd' fullname='happymagic.scene.world.bigScene:EnemyView/private:flashMvEnd' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='hitMvEnd' fullname='happymagic.scene.world.bigScene:EnemyView/private:hitMvEnd' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='initHp' fullname='happymagic.scene.world.bigScene:EnemyView/private:initHp' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='killEnemyCheck' fullname='happymagic.scene.world.bigScene:EnemyView/private:killEnemyCheck' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 检查是否动画与请求都完成,如果完成,就表现结果

		 ]]></description>
<param><![CDATA[e

		 ]]></param>
</method>
<method name='killEnemy_complete' fullname='happymagic.scene.world.bigScene:EnemyView/private:killEnemy_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='killEnemy' fullname='happymagic.scene.world.bigScene:EnemyView/private:killEnemy' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='makeView' fullname='happymagic.scene.world.bigScene:EnemyView/protected:makeView' isStatic='false' isFinal='false' isOverride='true'  result_type='happyfish.scene.iso:IsoSprite'>
</method>
<method name='onHit1Complete' fullname='happymagic.scene.world.bigScene:EnemyView/private:onHit1Complete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='onHit2Complete' fullname='happymagic.scene.world.bigScene:EnemyView/private:onHit2Complete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='randomAction' fullname='happymagic.scene.world.bigScene:EnemyView/private:randomAction' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='removeMe' fullname='happymagic.scene.world.bigScene:EnemyView/private:removeMe' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='showAward' fullname='happymagic.scene.world.bigScene:EnemyView/private:showAward' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='showHitMv' fullname='happymagic.scene.world.bigScene:EnemyView/showHitMv' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='smookMvEnd' fullname='happymagic.scene.world.bigScene:EnemyView/smookMvEnd' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='startFlashMv' fullname='happymagic.scene.world.bigScene:EnemyView/private:startFlashMv' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='startRandom' fullname='happymagic.scene.world.bigScene:EnemyView/private:startRandom' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='startSmook' fullname='happymagic.scene.world.bigScene:EnemyView/private:startSmook' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='view_complete' fullname='happymagic.scene.world.bigScene:EnemyView/protected:view_complete' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<field name='enemyVo' fullname='happymagic.scene.world.bigScene:EnemyView/enemyVo' type='happymagic.model.vo:EnemyVo' isStatic='false' isConst='false' >
</field>
<field name='hpBar' fullname='happymagic.scene.world.bigScene:EnemyView/private:hpBar' type='happyfish.display.view:PerBarView' isStatic='false' isConst='false' >
</field>
<field name='killEnemyMvReady' fullname='happymagic.scene.world.bigScene:EnemyView/private:killEnemyMvReady' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='killRequestReady' fullname='happymagic.scene.world.bigScene:EnemyView/private:killRequestReady' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='killRequestResultEvent' fullname='happymagic.scene.world.bigScene:EnemyView/private:killRequestResultEvent' type='flash.events:Event' isStatic='false' isConst='false' >
</field>
<field name='randomActId' fullname='happymagic.scene.world.bigScene:EnemyView/private:randomActId' type='uint' isStatic='false' isConst='false' >
</field>
<field name='smookMvMc' fullname='happymagic.scene.world.bigScene:EnemyView/private:smookMvMc' type='happyfish.utils.display:McShower' isStatic='false' isConst='false' >
</field>
<classRec name='NpcView' fullname='happymagic.scene.world.bigScene:NpcView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\bigScene\NpcView.as' namespace='happymagic.scene.world.bigScene' access='public' baseclass='happymagic.scene.world.bigScene:BigSceneNpcView' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='NpcView' fullname='happymagic.scene.world.bigScene:NpcView/NpcView' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$worldState;__callBack' param_types='Object;happyfish.scene.world:WorldState;Function' param_defaults='undefined;undefined;null' result_type='*'>
</method>
<method name='hasFinishedTask' fullname='happymagic.scene.world.bigScene:NpcView/private:hasFinishedTask' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='initChatsIcon' fullname='happymagic.scene.world.bigScene:NpcView/private:initChatsIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='initTaskMsg' fullname='happymagic.scene.world.bigScene:NpcView/initTaskMsg' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='makeView' fullname='happymagic.scene.world.bigScene:NpcView/protected:makeView' isStatic='false' isFinal='false' isOverride='true'  result_type='happyfish.scene.iso:IsoSprite'>
</method>
<method name='view_complete' fullname='happymagic.scene.world.bigScene:NpcView/protected:view_complete' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<field name='taskMsg' fullname='happymagic.scene.world.bigScene:NpcView/private:taskMsg' type='flash.display:MovieClip' isStatic='false' isConst='false' >
</field>
<field name='tasks' fullname='happymagic.scene.world.bigScene:NpcView/tasks' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='BigSceneView' fullname='happymagic.scene.world.bigScene:BigSceneView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\bigScene\BigSceneView.as' namespace='happymagic.scene.world.bigScene' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='BigSceneView' fullname='happymagic.scene.world.bigScene:BigSceneView/BigSceneView' isStatic='false' isFinal='false' isOverride='false'  param_names='$world_state' param_types='happyfish.scene.world:WorldState' param_defaults='undefined' result_type='*'>
</method>
<method name='clear' fullname='happymagic.scene.world.bigScene:BigSceneView/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='createEnemys' fullname='happymagic.scene.world.bigScene:BigSceneView/private:createEnemys' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='createMasses' fullname='happymagic.scene.world.bigScene:BigSceneView/private:createMasses' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 创建行人群众

		 ]]></description>
</method>
<method name='createNpc' fullname='happymagic.scene.world.bigScene:BigSceneView/private:createNpc' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='enemyCheckFun' fullname='happymagic.scene.world.bigScene:BigSceneView/private:enemyCheckFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='getEnemyXY' fullname='happymagic.scene.world.bigScene:BigSceneView/private:getEnemyXY' isStatic='false' isFinal='false' isOverride='false'  param_names='del' param_types='Boolean' param_defaults='true' result_type='flash.geom:Point'>
</method>
<method name='initAllNpcTaskState' fullname='happymagic.scene.world.bigScene:BigSceneView/initAllNpcTaskState' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 刷新所有NPC的任务状态表现

		 ]]></description>
</method>
<method name='setData' fullname='happymagic.scene.world.bigScene:BigSceneView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='__sceneVo;__npcs;__enemys' param_types='happymagic.model.vo:SceneVo;Array;Array' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='startHpTimer' fullname='happymagic.scene.world.bigScene:BigSceneView/private:startHpTimer' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='taskChange' fullname='happymagic.scene.world.bigScene:BigSceneView/private:taskChange' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:TaskEvent' param_defaults='undefined' result_type='void'>
</method>
<field name='_worldState' fullname='happymagic.scene.world.bigScene:BigSceneView/private:_worldState' type='happyfish.scene.world:WorldState' isStatic='false' isConst='false' >
</field>
<field name='enemyList' fullname='happymagic.scene.world.bigScene:BigSceneView/private:enemyList' type='Array' isStatic='false' isConst='false' >
</field>
<field name='enemyTimer' fullname='happymagic.scene.world.bigScene:BigSceneView/private:enemyTimer' type='flash.utils:Timer' isStatic='false' isConst='false' >
</field>
<field name='enemyVos' fullname='happymagic.scene.world.bigScene:BigSceneView/private:enemyVos' type='Array' isStatic='false' isConst='false' >
</field>
<field name='massesList' fullname='happymagic.scene.world.bigScene:BigSceneView/private:massesList' type='Array' isStatic='false' isConst='false' >
</field>
<field name='npcLayer' fullname='happymagic.scene.world.bigScene:BigSceneView/private:npcLayer' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='npcList' fullname='happymagic.scene.world.bigScene:BigSceneView/private:npcList' type='Array' isStatic='false' isConst='false' >
</field>
<field name='npcVos' fullname='happymagic.scene.world.bigScene:BigSceneView/private:npcVos' type='Array' isStatic='false' isConst='false' >
</field>
<field name='npcs' fullname='happymagic.scene.world.bigScene:BigSceneView/private:npcs' type='Array' isStatic='false' isConst='false' >
</field>
<field name='sceneData' fullname='happymagic.scene.world.bigScene:BigSceneView/private:sceneData' type='happymagic.model.vo:SceneVo' isStatic='false' isConst='false' >
</field>
<classRec name='DoorTip' fullname='happymagic.display.view.door:DoorTip' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\door\DoorTip.as' namespace='happymagic.display.view.door' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='DoorTip' fullname='happymagic.display.view.door:DoorTip/DoorTip' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='addToStage' fullname='happymagic.display.view.door:DoorTip/private:addToStage' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='setDoor' fullname='happymagic.display.view.door:DoorTip/setDoor' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happymagic.scene.world.grid.item:Door' param_defaults='undefined' result_type='void'>
</method>
<method name='countdown' fullname='happymagic.display.view.door:DoorTip/countdown/set' isStatic='false' isFinal='false' isOverride='false'  param_names='$time' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='data' fullname='happymagic.display.view.door:DoorTip/data/set' isStatic='false' isFinal='false' isOverride='false'  param_names='$data' param_types='happymagic.model.vo:DecorVo' param_defaults='undefined' result_type='void'>
</method>
<field name='_door' fullname='happymagic.display.view.door:DoorTip/private:_door' type='happymagic.scene.world.grid.item:Door' isStatic='false' isConst='false' >
</field>
<field name='_iview' fullname='happymagic.display.view.door:DoorTip/_iview' type='ui_doortips' isStatic='false' isConst='false' >
</field>
<classRec name='DeskTip' fullname='happymagic.display.view.desk:DeskTip' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\desk\DeskTip.as' namespace='happymagic.display.view.desk' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='DeskTip' fullname='happymagic.display.view.desk:DeskTip/DeskTip' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='countdown' fullname='happymagic.display.view.desk:DeskTip/countdown/set' isStatic='false' isFinal='false' isOverride='false'  param_names='$time' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='data' fullname='happymagic.display.view.desk:DeskTip/data/set' isStatic='false' isFinal='false' isOverride='false'  param_names='$data' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='_iview' fullname='happymagic.display.view.desk:DeskTip/private:_iview' type='ui_learningtips' isStatic='false' isConst='false' >
</field>
<classRec name='LevelUpgradeView' fullname='happymagic.display.view.levelUpgrade:LevelUpgradeView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\levelUpgrade\LevelUpgradeView.as' namespace='happymagic.display.view.levelUpgrade' access='public' baseclass='happyfish.display.view:UISprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='LevelUpgradeView' fullname='happymagic.display.view.levelUpgrade:LevelUpgradeView/LevelUpgradeView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clickFun' fullname='happymagic.display.view.levelUpgrade:LevelUpgradeView/private:clickFun' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='setData' fullname='happymagic.display.view.levelUpgrade:LevelUpgradeView/setData' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='happymagic.model.vo:LevelInfoVo' param_defaults='undefined' result_type='void'>
</method>
<field name='awardList' fullname='happymagic.display.view.levelUpgrade:LevelUpgradeView/private:awardList' type='happymagic.display.view.task:TaskNeedItemListView' isStatic='false' isConst='false' >
</field>
<field name='data' fullname='happymagic.display.view.levelUpgrade:LevelUpgradeView/private:data' type='happymagic.model.vo:LevelInfoVo' isStatic='false' isConst='false' >
</field>
<field name='iview' fullname='happymagic.display.view.levelUpgrade:LevelUpgradeView/private:iview' type='levelUpUi' isStatic='false' isConst='false' >
</field>
<field name='unlockList' fullname='happymagic.display.view.levelUpgrade:LevelUpgradeView/private:unlockList' type='happymagic.display.view.task:TaskNeedItemListView' isStatic='false' isConst='false' >
</field>
<classRec name='MagicUrlLoader' fullname='happymagic.model:MagicUrlLoader' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\model\MagicUrlLoader.as' namespace='happymagic.model' access='public' baseclass='happyfish.model:UrlConnecter' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[slamjj

	 ]]></author>
</classRec>
<method name='MagicUrlLoader' fullname='happymagic.model:MagicUrlLoader/MagicUrlLoader' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='loadOutTime' fullname='happymagic.model:MagicUrlLoader/protected:loadOutTime' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='load_SecurityError' fullname='happymagic.model:MagicUrlLoader/protected:load_SecurityError' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:SecurityErrorEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='load_complete' fullname='happymagic.model:MagicUrlLoader/load_complete' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='load_ioError' fullname='happymagic.model:MagicUrlLoader/protected:load_ioError' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:IOErrorEvent' param_defaults='undefined' result_type='void'>
</method>
<classRec name='DefaultListView' fullname='happymagic.display.view.ui.defaultList:DefaultListView' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\display\view\ui\defaultList\DefaultListView.as' namespace='happymagic.display.view.ui.defaultList' access='public' baseclass='happyfish.display.ui:GridPage' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='DefaultListView' fullname='happymagic.display.view.ui.defaultList:DefaultListView/DefaultListView' isStatic='false' isFinal='false' isOverride='false'  param_names='uiview;_container;_pageLength' param_types='flash.display:MovieClip;flash.display:DisplayObjectContainer;uint' param_defaults='undefined;undefined;undefined' result_type='*'>
</method>
<method name='createItem' fullname='happymagic.display.view.ui.defaultList:DefaultListView/protected:createItem' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Object' param_defaults='undefined' result_type='happyfish.display.ui:GridItem'>
</method>
<method name='init' fullname='happymagic.display.view.ui.defaultList:DefaultListView/init' isStatic='false' isFinal='false' isOverride='true'  param_names='gridWidth;gridHeight;tileWidth;tileHeight;gridX;gridY;tileAlgin;algin' param_types='Number;Number;Number;Number;Number;Number;String;String' param_defaults='undefined;undefined;undefined;undefined;0;0;TL;TL' result_type='void'>
</method>
<method name='setGridItem' fullname='happymagic.display.view.ui.defaultList:DefaultListView/setGridItem' isStatic='false' isFinal='false' isOverride='false'  param_names='_itemClass;_itemUiClass' param_types='Class;Class' param_defaults='undefined;null' result_type='void'>
</method>
<field name='itemClass' fullname='happymagic.display.view.ui.defaultList:DefaultListView/private:itemClass' type='Class' isStatic='false' isConst='false' >
</field>
<field name='itemUiClass' fullname='happymagic.display.view.ui.defaultList:DefaultListView/private:itemUiClass' type='Class' isStatic='false' isConst='false' >
</field>
<classRec name='ClassCacherQueue' fullname='happyfish.util.queue.driver.queue:ClassCacherQueue' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\util\queue\driver\queue\ClassCacherQueue.as' namespace='happyfish.util.queue.driver.queue' access='public' baseclass='happyfish.util.queue:AbstractQueue' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='ClassCacherQueue' fullname='happyfish.util.queue.driver.queue:ClassCacherQueue/ClassCacherQueue' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='getInstance' fullname='happyfish.util.queue.driver.queue:ClassCacherQueue/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.util.queue.driver.queue:ClassCacherQueue'>
</method>
<method name='init' fullname='happyfish.util.queue.driver.queue:ClassCacherQueue/init' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='process' fullname='happyfish.util.queue.driver.queue:ClassCacherQueue/process' isStatic='false' isFinal='false' isOverride='true'  param_names='url' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<field name='pre_item' fullname='happyfish.util.queue.driver.queue:ClassCacherQueue/private:pre_item' type='' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='single' fullname='happyfish.util.queue.driver.queue:ClassCacherQueue/private:single' type='happyfish.util.queue.driver.queue:ClassCacherQueue' isStatic='true' isConst='false' >
</field>
<classRec name='BitmapCacherQueue' fullname='happyfish.util.queue.driver.queue:BitmapCacherQueue' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\util\queue\driver\queue\BitmapCacherQueue.as' namespace='happyfish.util.queue.driver.queue' access='public' baseclass='happyfish.util.queue:AbstractQueue' isFinal='false' isDynamic='false' >
</classRec>
<method name='BitmapCacherQueue' fullname='happyfish.util.queue.driver.queue:BitmapCacherQueue/BitmapCacherQueue' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='getInstance' fullname='happyfish.util.queue.driver.queue:BitmapCacherQueue/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='happyfish.util.queue.driver.queue:BitmapCacherQueue'>
</method>
<method name='init' fullname='happyfish.util.queue.driver.queue:BitmapCacherQueue/init' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='next' fullname='happyfish.util.queue.driver.queue:BitmapCacherQueue/next' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='process' fullname='happyfish.util.queue.driver.queue:BitmapCacherQueue/process' isStatic='false' isFinal='false' isOverride='true'  param_names='class_name' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<field name='pre_item' fullname='happyfish.util.queue.driver.queue:BitmapCacherQueue/private:pre_item' type='' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='single' fullname='happyfish.util.queue.driver.queue:BitmapCacherQueue/private:single' type='happyfish.util.queue.driver.queue:BitmapCacherQueue' isStatic='true' isConst='false' >
</field>
<classRec name='Table' fullname='happymagic.scene.world.grid.item:Table' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\grid\item\Table.as' namespace='happymagic.scene.world.grid.item' access='public' baseclass='happyfish.scene.world.grid:SolidObject' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='Table' fullname='happymagic.scene.world.grid.item:Table/Table' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$worldState' param_types='Object;happyfish.scene.world:WorldState' param_defaults='undefined;undefined' result_type='*'>
</method>
<classRec name='WallDecor' fullname='happymagic.scene.world.grid.item:WallDecor' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\grid\item\WallDecor.as' namespace='happymagic.scene.world.grid.item' access='public' baseclass='happyfish.scene.world.grid:SolidObject' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck Xu

	 ]]></author>
</classRec>
<method name='WallDecor' fullname='happymagic.scene.world.grid.item:WallDecor/WallDecor' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$worldState;__callBack' param_types='Object;happyfish.scene.world:WorldState;Function' param_defaults='undefined;undefined;null' result_type='*'>
</method>
<method name='bodyComplete' fullname='happymagic.scene.world.grid.item:WallDecor/protected:bodyComplete' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='makeView' fullname='happymagic.scene.world.grid.item:WallDecor/protected:makeView' isStatic='false' isFinal='false' isOverride='true'  result_type='happyfish.scene.iso:IsoSprite'>
</method>
<method name='move' fullname='happymagic.scene.world.grid.item:WallDecor/move' isStatic='false' isFinal='false' isOverride='true'  param_names='$grid_pos' param_types='com.friendsofed.isometric:Point3D' param_defaults='undefined' result_type='void'>
</method>
<method name='positionIsValid' fullname='happymagic.scene.world.grid.item:WallDecor/positionIsValid' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
</method>
<method name='setIsoTile' fullname='happymagic.scene.world.grid.item:WallDecor/setIsoTile' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setMirror' fullname='happymagic.scene.world.grid.item:WallDecor/setMirror' isStatic='false' isFinal='false' isOverride='false'  param_names='$x' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 镜像处理

		 ]]></description>
</method>
<field name='decorVo' fullname='happymagic.scene.world.grid.item:WallDecor/decorVo' type='happymagic.model.vo:DecorVo' isStatic='false' isConst='false' >
</field>
<classRec name='Decor' fullname='happymagic.scene.world.grid.item:Decor' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\grid\item\Decor.as' namespace='happymagic.scene.world.grid.item' access='public' baseclass='happyfish.scene.world.grid:SolidObject' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck Xu

	 ]]></author>
</classRec>
<method name='Decor' fullname='happymagic.scene.world.grid.item:Decor/Decor' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$worldState;__callBack' param_types='Object;happyfish.scene.world:WorldState;Function' param_defaults='undefined;undefined;null' result_type='*'>
</method>
<field name='decorVo' fullname='happymagic.scene.world.grid.item:Decor/decorVo' type='happymagic.model.vo:DecorVo' isStatic='false' isConst='false' >
</field>
<classRec name='Door' fullname='happymagic.scene.world.grid.item:Door' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\grid\item\Door.as' namespace='happymagic.scene.world.grid.item' access='public' baseclass='happymagic.scene.world.grid.item:WallDecor' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 门的几种状态

	 1.倒计时中,不能点(传送中)

	 2.倒计时结束,场景中有空闲位置,可点

	 3.倒计时结束,场景中无空闲位置,不可点

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='Door' fullname='happymagic.scene.world.grid.item:Door/Door' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$worldState;__callBack' param_types='Object;happyfish.scene.world:WorldState;Function' param_defaults='undefined;undefined;null' result_type='*'>
</method>
<method name='bodyComplete' fullname='happymagic.scene.world.grid.item:Door/protected:bodyComplete' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='callCloseDoor' fullname='happymagic.scene.world.grid.item:Door/private:callCloseDoor' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clearIcon' fullname='happymagic.scene.world.grid.item:Door/private:clearIcon' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='closeDoor' fullname='happymagic.scene.world.grid.item:Door/closeDoor' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='countDownUI' fullname='happymagic.scene.world.grid.item:Door/countDownUI' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 传送中图标

		 ]]></description>
</method>
<method name='countDown' fullname='happymagic.scene.world.grid.item:Door/countDown' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 更新状态表现

		 ]]></description>
</method>
<method name='doorOpenUI' fullname='happymagic.scene.world.grid.item:Door/doorOpenUI' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 可以进人,大拇指图标

		 ]]></description>
</method>
<method name='finishMove' fullname='happymagic.scene.world.grid.item:Door/finishMove' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='getInOutNode' fullname='happymagic.scene.world.grid.item:Door/getInOutNode' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='getNode' fullname='happymagic.scene.world.grid.item:Door/getNode' isStatic='false' isFinal='false' isOverride='false'  result_type='happyfish.scene.astar:Node'>
</method>
<method name='getOutIsoPosition' fullname='happymagic.scene.world.grid.item:Door/getOutIsoPosition' isStatic='false' isFinal='false' isOverride='false'  result_type='com.friendsofed.isometric:Point3D'>
</method>
<method name='getStudentFromDoorPosition' fullname='happymagic.scene.world.grid.item:Door/private:getStudentFromDoorPosition' isStatic='false' isFinal='false' isOverride='false'  result_type='com.friendsofed.isometric:Point3D'>
<description><![CDATA[

		 返回门的入口

		 ]]></description>
<return><![CDATA[
		 ]]></return>
</method>
<method name='hideToolTips' fullname='happymagic.scene.world.grid.item:Door/hideToolTips' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='makeView' fullname='happymagic.scene.world.grid.item:Door/protected:makeView' isStatic='false' isFinal='false' isOverride='true'  result_type='happyfish.scene.iso:IsoSprite'>
</method>
<method name='move' fullname='happymagic.scene.world.grid.item:Door/move' isStatic='false' isFinal='false' isOverride='true'  param_names='$grid_pos' param_types='com.friendsofed.isometric:Point3D' param_defaults='undefined' result_type='void'>
</method>
<method name='onClick' fullname='happymagic.scene.world.grid.item:Door/protected:onClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='openDoor' fullname='happymagic.scene.world.grid.item:Door/openDoor' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 是否可放置判断

		 ]]></description>
<return><![CDATA[
		 ]]></return>
</method>
<method name='outDoorStudents' fullname='happymagic.scene.world.grid.item:Door/outDoorStudents' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 学生出来请求完成事件

		 ]]></description>
<param><![CDATA[e

		 ]]></param>
</method>
<method name='resetWallView' fullname='happymagic.scene.world.grid.item:Door/resetWallView' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setMirror' fullname='happymagic.scene.world.grid.item:Door/setMirror' isStatic='false' isFinal='false' isOverride='true'  param_names='$x' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='view_complete' fullname='happymagic.scene.world.grid.item:Door/protected:view_complete' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='waitTimerFunc' fullname='happymagic.scene.world.grid.item:Door/waitTimerFunc' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='height' fullname='happymagic.scene.world.grid.item:Door/height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='isReady' fullname='happymagic.scene.world.grid.item:Door/isReady/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='width' fullname='happymagic.scene.world.grid.item:Door/width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='diyState' fullname='happymagic.scene.world.grid.item:Door/diyState/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='callCloseId' fullname='happymagic.scene.world.grid.item:Door/private:callCloseId' type='uint' isStatic='false' isConst='false' >
</field>
<field name='doorMove' fullname='happymagic.scene.world.grid.item:Door/private:doorMove' type='flash.display:MovieClip' isStatic='false' isConst='false' >
</field>
<field name='doorOpen' fullname='happymagic.scene.world.grid.item:Door/private:doorOpen' type='flash.display:MovieClip' isStatic='false' isConst='false' >
</field>
<field name='opening' fullname='happymagic.scene.world.grid.item:Door/private:opening' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='showTipFlag' fullname='happymagic.scene.world.grid.item:Door/showTipFlag' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='waitTimer' fullname='happymagic.scene.world.grid.item:Door/private:waitTimer' type='flash.utils:Timer' isStatic='false' isConst='false' >
</field>
<classRec name='RoomUpItem' fullname='happymagic.scene.world.grid.item:RoomUpItem' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\grid\item\RoomUpItem.as' namespace='happymagic.scene.world.grid.item' access='public' baseclass='happymagic.scene.world.grid.item:Decor' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='RoomUpItem' fullname='happymagic.scene.world.grid.item:RoomUpItem/RoomUpItem' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$worldState;__callBack' param_types='Object;happyfish.scene.world:WorldState;Function' param_defaults='undefined;undefined;null' result_type='*'>
</method>
<classRec name='Desk' fullname='happymagic.scene.world.grid.item:Desk' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\grid\item\Desk.as' namespace='happymagic.scene.world.grid.item' access='public' baseclass='happymagic.scene.world.grid.item:Decor' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='Desk' fullname='happymagic.scene.world.grid.item:Desk/Desk' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$worldState;__callBack' param_types='Object;happyfish.scene.world:WorldState;Function' param_defaults='undefined;undefined;null' result_type='*'>
</method>
<method name='countDown' fullname='happymagic.scene.world.grid.item:Desk/countDown' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='crystalHideGlow' fullname='happymagic.scene.world.grid.item:Desk/crystalHideGlow' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='crystalReady' fullname='happymagic.scene.world.grid.item:Desk/private:crystalReady' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='crystalShowGlow' fullname='happymagic.scene.world.grid.item:Desk/crystalShowGlow' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='fiddleGoToDesk' fullname='happymagic.scene.world.grid.item:Desk/fiddleGoToDesk' isStatic='false' isFinal='false' isOverride='false'  param_names='studentvo' param_types='Object' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 找一个空闲的学生,设置指定学生数据,走到课桌上

		 ]]></description>
<param><![CDATA[studentvo

		 ]]></param>
</method>
<method name='getDeskSpace' fullname='happymagic.scene.world.grid.item:Desk/getDeskSpace' isStatic='false' isFinal='false' isOverride='false'  result_type='com.friendsofed.isometric:Point3D'>
</method>
<method name='getMaigcSpace' fullname='happymagic.scene.world.grid.item:Desk/getMaigcSpace' isStatic='false' isFinal='false' isOverride='false'  result_type='com.friendsofed.isometric:Point3D'>
<description><![CDATA[

		 返回课桌的学生位置边上可行的任一格

		 ]]></description>
<return><![CDATA[
		 ]]></return>
</method>
<method name='getWalkableSpace' fullname='happymagic.scene.world.grid.item:Desk/getWalkableSpace' isStatic='false' isFinal='false' isOverride='false'  result_type='com.friendsofed.isometric:Point3D'>
</method>
<method name='handle' fullname='happymagic.scene.world.grid.item:Desk/private:handle' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='magicMovie' fullname='happymagic.scene.world.grid.item:Desk/magicMovie' isStatic='false' isFinal='false' isOverride='false'  param_names='$class_name' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 显示课桌上的魔法动画

		 ]]></description>
<param><![CDATA[$class_name

		 ]]></param>
</method>
<method name='onClick' fullname='happymagic.scene.world.grid.item:Desk/protected:onClick' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='removeCrystal' fullname='happymagic.scene.world.grid.item:Desk/removeCrystal' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 移除水晶显示对象

		 ]]></description>
</method>
<method name='removeMagicMovie' fullname='happymagic.scene.world.grid.item:Desk/removeMagicMovie' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='remove' fullname='happymagic.scene.world.grid.item:Desk/remove' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='requestPick' fullname='happymagic.scene.world.grid.item:Desk/requestPick' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 执行拾取队列请求操作

		 此方法现在是由主角对象在做完行走到课桌面前,并表现完动作动画后再调用

		 ]]></description>
</method>
<method name='showCrystal' fullname='happymagic.scene.world.grid.item:Desk/showCrystal' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 课桌显示水晶

		 ]]></description>
</method>
<method name='showStone' fullname='happymagic.scene.world.grid.item:Desk/showStone' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='waitTimerFunc' fullname='happymagic.scene.world.grid.item:Desk/waitTimerFunc' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='diyState' fullname='happymagic.scene.world.grid.item:Desk/diyState/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='LABEL_PLAY' fullname='happymagic.scene.world.grid.item:Desk/LABEL_PLAY' type='String' isStatic='true' isConst='true' defaultValue='desk_play' >
</field>
<field name='LABEL_STOP' fullname='happymagic.scene.world.grid.item:Desk/LABEL_STOP' type='String' isStatic='true' isConst='true' defaultValue='desk_stop' >
</field>
<field name='crystal' fullname='happymagic.scene.world.grid.item:Desk/crystal' type='deskCrystalIcon' isStatic='false' isConst='false' >
</field>
<field name='is_stone' fullname='happymagic.scene.world.grid.item:Desk/is_stone' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='magicMovieC' fullname='happymagic.scene.world.grid.item:Desk/magicMovieC' type='happyfish.cacher:CacheSprite' isStatic='false' isConst='false' >
</field>
<field name='student' fullname='happymagic.scene.world.grid.item:Desk/student' type='happymagic.scene.world.grid.person:Student' isStatic='false' isConst='false' >
</field>
<field name='waitTimer' fullname='happymagic.scene.world.grid.item:Desk/private:waitTimer' type='flash.utils:Timer' isStatic='false' isConst='false' >
</field>
<classRec name='Student' fullname='happymagic.scene.world.grid.person:Student' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\grid\person\Student.as' namespace='happymagic.scene.world.grid.person' access='public' baseclass='happyfish.scene.world.grid:Person' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='Student' fullname='happymagic.scene.world.grid.person:Student/Student' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$worldState;$fromDoor;__callBack' param_types='Object;happyfish.scene.world:WorldState;Boolean;Function' param_defaults='undefined;undefined;false;null' result_type='*'>
</method>
<method name='bubbling' fullname='happymagic.scene.world.grid.person:Student/bubbling' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='countDown' fullname='happymagic.scene.world.grid.person:Student/countDown' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 找到except的下一层iso对象

		 ]]></description>
<param><![CDATA[arr	对象数组,来自getObjectsUnderPoint方法,except对象应该会在最后一项,所以此方法内会先把这个数组倒转

		 ]]></param>
<param><![CDATA[excpet

		 ]]></param>
</method>
<method name='fiddle' fullname='happymagic.scene.world.grid.person:Student/fiddle' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 学生开始闲逛

		 ]]></description>
</method>
<method name='goOutRoom' fullname='happymagic.scene.world.grid.person:Student/goOutRoom' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='gotoDeskCommand_complete' fullname='happymagic.scene.world.grid.person:Student/private:gotoDeskCommand_complete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='gotoDeskCommand' fullname='happymagic.scene.world.grid.person:Student/gotoDeskCommand' isStatic='false' isFinal='false' isOverride='false'  param_names='$desk_id' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='handle' fullname='happymagic.scene.world.grid.person:Student/private:handle' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='interrputCountDown' fullname='happymagic.scene.world.grid.person:Student/interrputCountDown' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 开始中断时间计时器

		 ]]></description>
</method>
<method name='interrputWaitTimerFunc' fullname='happymagic.scene.world.grid.person:Student/interrputWaitTimerFunc' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 中断事件计时器方法

		 ]]></description>
<param><![CDATA[e

		 ]]></param>
</method>
<method name='makeView' fullname='happymagic.scene.world.grid.person:Student/protected:makeView' isStatic='false' isFinal='false' isOverride='true'  result_type='happyfish.scene.iso:IsoSprite'>
</method>
<method name='onClick' fullname='happymagic.scene.world.grid.person:Student/protected:onClick' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='processInterrput' fullname='happymagic.scene.world.grid.person:Student/processInterrput' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='removeBubble' fullname='happymagic.scene.world.grid.person:Student/removeBubble' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='requestInterrupt' fullname='happymagic.scene.world.grid.person:Student/requestInterrupt' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='resetData' fullname='happymagic.scene.world.grid.person:Student/resetData' isStatic='false' isFinal='false' isOverride='false'  param_names='$data' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='setCanWalk' fullname='happymagic.scene.world.grid.person:Student/setCanWalk' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 设置学生站立位置的可行走属性

		 当学生在位子上学习时让别人不要从他那里穿过

		 ]]></description>
<param><![CDATA[value

		 ]]></param>
</method>
<method name='setPoint3D' fullname='happymagic.scene.world.grid.person:Student/setPoint3D' isStatic='false' isFinal='false' isOverride='false'  param_names='$3d' param_types='com.friendsofed.isometric:Point3D' param_defaults='undefined' result_type='void'>
</method>
<method name='setPosition' fullname='happymagic.scene.world.grid.person:Student/private:setPosition' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 设置学生到课桌位置上

		 ]]></description>
</method>
<method name='setStudentData' fullname='happymagic.scene.world.grid.person:Student/setStudentData' isStatic='false' isFinal='false' isOverride='false'  param_names='$data' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='showFiddleMood' fullname='happymagic.scene.world.grid.person:Student/private:showFiddleMood' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='showMoodComplete' fullname='happymagic.scene.world.grid.person:Student/private:showMoodComplete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='stoneCountDown' fullname='happymagic.scene.world.grid.person:Student/stoneCountDown' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='stoneWaitTimerFunc' fullname='happymagic.scene.world.grid.person:Student/stoneWaitTimerFunc' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='stopFiddleClear' fullname='happymagic.scene.world.grid.person:Student/stopFiddleClear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='turnToStone' fullname='happymagic.scene.world.grid.person:Student/turnToStone' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='view_complete' fullname='happymagic.scene.world.grid.person:Student/protected:view_complete' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='waitTimerFunc' fullname='happymagic.scene.world.grid.person:Student/waitTimerFunc' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 学生学习中timer事件

		 ]]></description>
<param><![CDATA[e

		 ]]></param>
</method>
<method name='wantStudy' fullname='happymagic.scene.world.grid.person:Student/wantStudy' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='data' fullname='happymagic.scene.world.grid.person:Student/data/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='STATUS' fullname='happymagic.scene.world.grid.person:Student/STATUS' type='String' isStatic='true' isConst='true' defaultValue='status' >
</field>
<field name='_fromDoor' fullname='happymagic.scene.world.grid.person:Student/private:_fromDoor' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='desk' fullname='happymagic.scene.world.grid.person:Student/desk' type='happymagic.scene.world.grid.item:Desk' isStatic='false' isConst='false' >
</field>
<field name='interrputTimer' fullname='happymagic.scene.world.grid.person:Student/private:interrputTimer' type='flash.utils:Timer' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='showMoodTimeId' fullname='happymagic.scene.world.grid.person:Student/private:showMoodTimeId' type='Number' isStatic='false' isConst='false' >
</field>
<field name='showTipFlag' fullname='happymagic.scene.world.grid.person:Student/showTipFlag' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='stoneTimer' fullname='happymagic.scene.world.grid.person:Student/private:stoneTimer' type='flash.utils:Timer' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='waitTimer' fullname='happymagic.scene.world.grid.person:Student/private:waitTimer' type='flash.utils:Timer' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<classRec name='Player' fullname='happymagic.scene.world.grid.person:Player' sourcefile='E:\work\happyMagic\src\client\happymagic\src\happymagic\scene\world\grid\person\Player.as' namespace='happymagic.scene.world.grid.person' access='public' baseclass='happyfish.scene.world.grid:Person' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='Player' fullname='happymagic.scene.world.grid.person:Player/Player' isStatic='false' isFinal='false' isOverride='false'  param_names='$data;$worldState;__callBack' param_types='Object;happyfish.scene.world:WorldState;Function' param_defaults='undefined;undefined;null' result_type='*'>
</method>
<method name='go' fullname='happymagic.scene.world.grid.person:Player/go' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='null' result_type='void'>
</method>
<method name='initTransTimer' fullname='happymagic.scene.world.grid.person:Player/initTransTimer' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='makeView' fullname='happymagic.scene.world.grid.person:Player/protected:makeView' isStatic='false' isFinal='false' isOverride='true'  result_type='happyfish.scene.iso:IsoSprite'>
</method>
<method name='reachedGoal' fullname='happymagic.scene.world.grid.person:Player/protected:reachedGoal' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='transTimerEvent' fullname='happymagic.scene.world.grid.person:Player/private:transTimerEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='view_complete' fullname='happymagic.scene.world.grid.person:Player/protected:view_complete' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='isSelf' fullname='happymagic.scene.world.grid.person:Player/isSelf/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<field name='transTimer' fullname='happymagic.scene.world.grid.person:Player/private:transTimer' type='flash.utils:Timer' isStatic='false' isConst='false' >
</field>
<field name='userVo' fullname='happymagic.scene.world.grid.person:Player/userVo' type='happymagic.model.vo:UserVo' isStatic='false' isConst='false' >
</field>
<classRec name='BitmapMc' fullname='happyfish.cacher.bitmapMc.display:BitmapMc' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\cacher\bitmapMc\display\BitmapMc.as' namespace='happyfish.cacher.bitmapMc.display' access='public' baseclass='flash.display:Bitmap' isFinal='false' isDynamic='false' >
</classRec>
<method name='BitmapMc' fullname='happyfish.cacher.bitmapMc.display:BitmapMc/BitmapMc' isStatic='false' isFinal='false' isOverride='false'  param_names='$bitmaps;$offset_x_array;$offset_y_array;bitmapData;pixelSnapping;smoothing' param_types='Array;Array;Array;flash.display:BitmapData;String;Boolean' param_defaults='undefined;undefined;undefined;null;auto;false' result_type='*'>
</method>
<method name='clear' fullname='happyfish.cacher.bitmapMc.display:BitmapMc/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setSuperX' fullname='happyfish.cacher.bitmapMc.display:BitmapMc/setSuperX' isStatic='false' isFinal='false' isOverride='false'  param_names='$x' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='setSuperY' fullname='happyfish.cacher.bitmapMc.display:BitmapMc/setSuperY' isStatic='false' isFinal='false' isOverride='false'  param_names='$y' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='x' fullname='happyfish.cacher.bitmapMc.display:BitmapMc/x/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
</method>
<method name='y' fullname='happyfish.cacher.bitmapMc.display:BitmapMc/y/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
</method>
<method name='x' fullname='happyfish.cacher.bitmapMc.display:BitmapMc/x/set' isStatic='false' isFinal='false' isOverride='true'  param_names='param1' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='y' fullname='happyfish.cacher.bitmapMc.display:BitmapMc/y/set' isStatic='false' isFinal='false' isOverride='true'  param_names='param1' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='bitmap_data_array' fullname='happyfish.cacher.bitmapMc.display:BitmapMc/protected:bitmap_data_array' type='Array' isStatic='false' isConst='false' >
</field>
<field name='offset_x_array' fullname='happyfish.cacher.bitmapMc.display:BitmapMc/protected:offset_x_array' type='Array' isStatic='false' isConst='false' >
</field>
<field name='offset_y_array' fullname='happyfish.cacher.bitmapMc.display:BitmapMc/protected:offset_y_array' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='BitmapMovieMc' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc' sourcefile='E:\work\happyMagic\src\client\happyfish\src\happyfish\cacher\bitmapMc\display\BitmapMovieMc.as' namespace='happyfish.cacher.bitmapMc.display' access='public' baseclass='happyfish.cacher.bitmapMc.display:BitmapMc' isFinal='false' isDynamic='false' >
</classRec>
<method name='BitmapMovieMc' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/BitmapMovieMc' isStatic='false' isFinal='false' isOverride='false'  param_names='$bitmaps;$offset_x_array;$offset_y_array;$lables;bitmapData;pixelSnapping;smoothing' param_types='Array;Array;Array;Object;flash.display:BitmapData;String;Boolean' param_defaults='undefined;undefined;undefined;null;null;auto;false' result_type='*'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[$bitmaps

		 ]]></param>
<param><![CDATA[$offset_x_array

		 ]]></param>
<param><![CDATA[$offset_y_array

		 ]]></param>
<param><![CDATA[$lables	内部结构:key=标签名,值为标签开始帧数

		 ]]></param>
<param><![CDATA[bitmapData

		 ]]></param>
<param><![CDATA[pixelSnapping

		 ]]></param>
<param><![CDATA[smoothing

		 ]]></param>
</method>
<method name='dynamicChangeCurframe' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/private:dynamicChangeCurframe' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='gotoAndPlayLabels' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/gotoAndPlayLabels' isStatic='false' isFinal='false' isOverride='false'  param_names='$label;$to_stop' param_types='String;Boolean' param_defaults='undefined;false' result_type='void'>
</method>
<method name='gotoAndPlay' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/gotoAndPlay' isStatic='false' isFinal='false' isOverride='false'  param_names='$frame_num' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='gotoAndStopLabels' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/gotoAndStopLabels' isStatic='false' isFinal='false' isOverride='false'  param_names='$label' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='gotoAndStop' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/gotoAndStop' isStatic='false' isFinal='false' isOverride='false'  param_names='$frame_num' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='playLabels' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/playLabels' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='playToStop' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/playToStop' isStatic='false' isFinal='false' isOverride='false'  param_names='$frame' param_types='int' param_defaults='0' result_type='void'>
</method>
<method name='play' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/play' isStatic='false' isFinal='false' isOverride='false'  param_names='$to_stop' param_types='Boolean' param_defaults='false' result_type='void'>
</method>
<method name='reDraw' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/private:reDraw' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='setLabelFlag' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/private:setLabelFlag' isStatic='false' isFinal='false' isOverride='false'  param_names='$flag' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='stop' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/stop' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='drawFrame' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/drawFrame/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='drawFrame' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/drawFrame/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<field name='_drawFrame' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/private:_drawFrame' type='uint' isStatic='false' isConst='false' defaultValue='1' >
</field>
<field name='className' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/className' type='String' isStatic='false' isConst='false' >
</field>
<field name='cur_frame' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/cur_frame' type='int' isStatic='false' isConst='false' >
</field>
<field name='drawLimitFrame' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/private:drawLimitFrame' type='uint' isStatic='false' isConst='false' defaultValue='1' >
</field>
<field name='end_frame' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/end_frame' type='int' isStatic='false' isConst='false' >
</field>
<field name='is_playing' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/private:is_playing' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='label_flag' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/private:label_flag' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='label' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/private:label' type='String' isStatic='false' isConst='false' >
</field>
<field name='labels_frame_index' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/private:labels_frame_index' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='labels' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/protected:labels' type='Object' isStatic='false' isConst='false' >
</field>
<field name='start_frame' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/start_frame' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='to_stop' fullname='happyfish.cacher.bitmapMc.display:BitmapMovieMc/private:to_stop' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<classRec name='HappyMagic' fullname='HappyMagic' sourcefile='E:\work\happyMagic\src\client\fbSpace\HappyMagic\src\HappyMagic.as' namespace='' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='HappyMagic' fullname='HappyMagic/HappyMagic' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='init' fullname='HappyMagic/private:init' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='loadInit' fullname='HappyMagic/private:loadInit' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='loadStatic' fullname='HappyMagic/private:loadStatic' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='ready_startInit' fullname='HappyMagic/private:ready_startInit' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='startInit' fullname='HappyMagic/private:startInit' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='worldCreate_complete' fullname='HappyMagic/private:worldCreate_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:SceneEvent' param_defaults='undefined' result_type='void'>
</method>
<field name='sceneSprite' fullname='HappyMagic/private:sceneSprite' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='uiSprite' fullname='HappyMagic/private:uiSprite' type='happymagic.manager:UiManager' isStatic='false' isConst='false' >
</field>
<classRec name='HappyMagicMain' fullname='HappyMagicMain' sourcefile='E:\work\happyMagic\src\client\fbSpace\HappyMagic\src\HappyMagicMain.as' namespace='' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Beck

	 ]]></author>
</classRec>
<method name='HappyMagicMain' fullname='HappyMagicMain/HappyMagicMain' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='init' fullname='HappyMagicMain/private:init' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='loadInit' fullname='HappyMagicMain/private:loadInit' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='loadStatic' fullname='HappyMagicMain/private:loadStatic' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='startInit' fullname='HappyMagicMain/private:startInit' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='worldCreate_complete' fullname='HappyMagicMain/private:worldCreate_complete' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='happymagic.events:SceneEvent' param_defaults='undefined' result_type='void'>
</method>
<field name='sceneSprite' fullname='HappyMagicMain/private:sceneSprite' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='uiSprite' fullname='HappyMagicMain/private:uiSprite' type='happymagic.manager:UiManager' isStatic='false' isConst='false' >
</field>
<classRec name='HappyMagicPreloader' fullname='HappyMagicPreloader' sourcefile='E:\work\happyMagic\src\client\fbSpace\HappyMagic\src\HappyMagicPreloader.as' namespace='' access='public' baseclass='flash.display:MovieClip' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[jj

	 ]]></author>
</classRec>
<method name='HappyMagicPreloader' fullname='HappyMagicPreloader/HappyMagicPreloader' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='checkFrame' fullname='HappyMagicPreloader/private:checkFrame' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='ioError' fullname='HappyMagicPreloader/private:ioError' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:IOErrorEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='loadingFinished' fullname='HappyMagicPreloader/private:loadingFinished' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='progress' fullname='HappyMagicPreloader/private:progress' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:ProgressEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='startup' fullname='HappyMagicPreloader/private:startup' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
</asdoc>
